local ffi = require 'ffi'
ffi.cdef[[
/* BEGIN /usr/include/lapack.h */
enum { LAPACK_H = 1 };
/* BEGIN /usr/include/lapacke_mangling.h */
enum { LAPACK_HEADER_INCLUDED = 1 };
/* END   /usr/include/lapacke_mangling.h */
/* BEGIN /usr/include/stdlib.h */
]] require 'ffi.c.stdlib' ffi.cdef[[
/* END   /usr/include/stdlib.h */
/* BEGIN /usr/lib/gcc/x86_64-linux-gnu/12/include/stdarg.h */
]] require 'ffi.c.stdarg' ffi.cdef[[
/* END   /usr/lib/gcc/x86_64-linux-gnu/12/include/stdarg.h */
/* BEGIN /usr/include/inttypes.h */
]] require 'ffi.c.inttypes' ffi.cdef[[
/* END   /usr/include/inttypes.h */
enum { LAPACK_FORTRAN_STRLEN_END = 1 };
/* BEGIN /usr/include/complex.h */
]] require 'ffi.c.complex' ffi.cdef[[
/* END   /usr/include/complex.h */
/* #define lapack_complex_float    float _Complex ### string, not number "float _Complex" */
/* BEGIN /usr/include/complex.h */
]] require 'ffi.c.complex' ffi.cdef[[
/* END   /usr/include/complex.h */
/* #define lapack_complex_double   double _Complex ### string, not number "double _Complex" */
enum { lapack_int = 0 };
/* #define LAPACK_IFMT       PRId32 ### string, not number "PRId32" */
enum { lapack_logical = 0 };
typedef float lapack_float_return;
typedef int32_t (*LAPACK_S_SELECT2) ( const float*, const float* );
typedef int32_t (*LAPACK_S_SELECT3) ( const float*, const float*, const float* );
typedef int32_t (*LAPACK_D_SELECT2) ( const double*, const double* );
typedef int32_t (*LAPACK_D_SELECT3) ( const double*, const double*, const double* );
typedef int32_t (*LAPACK_C_SELECT1) ( const float _Complex* );
typedef int32_t (*LAPACK_C_SELECT2) ( const float _Complex*, const float _Complex* );
typedef int32_t (*LAPACK_Z_SELECT1) ( const double _Complex* );
typedef int32_t (*LAPACK_Z_SELECT2) ( const double _Complex*, const double _Complex* );
enum { LAPACK_lsame_base = 0 };
int32_t lsame_ ( const char* ca, const char* cb, int32_t lca, int32_t lcb , size_t, size_t );
enum { LAPACK_cbbcsd_base = 0 };
void cbbcsd_ ( char const* jobu1, char const* jobu2, char const* jobv1t, char const* jobv2t, char const* trans, int32_t const* m, int32_t const* p, int32_t const* q, float* theta, float* phi, float _Complex* U1, int32_t const* ldu1, float _Complex* U2, int32_t const* ldu2, float _Complex* V1T, int32_t const* ldv1t, float _Complex* V2T, int32_t const* ldv2t, float* B11D, float* B11E, float* B12D, float* B12E, float* B21D, float* B21E, float* B22D, float* B22E, float* rwork, int32_t const* lrwork, int32_t* info , size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_dbbcsd_base = 0 };
void dbbcsd_ ( char const* jobu1, char const* jobu2, char const* jobv1t, char const* jobv2t, char const* trans, int32_t const* m, int32_t const* p, int32_t const* q, double* theta, double* phi, double* U1, int32_t const* ldu1, double* U2, int32_t const* ldu2, double* V1T, int32_t const* ldv1t, double* V2T, int32_t const* ldv2t, double* B11D, double* B11E, double* B12D, double* B12E, double* b21d, double* b21e, double* b22d, double* b22e, double* work, int32_t const* lwork, int32_t* info , size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_sbbcsd_base = 0 };
void sbbcsd_ ( char const* jobu1, char const* jobu2, char const* jobv1t, char const* jobv2t, char const* trans, int32_t const* m, int32_t const* p, int32_t const* q, float* theta, float* phi, float* U1, int32_t const* ldu1, float* U2, int32_t const* ldu2, float* V1T, int32_t const* ldv1t, float* V2T, int32_t const* ldv2t, float* B11D, float* B11E, float* B12D, float* B12E, float* B21D, float* B21E, float* B22D, float* B22E, float* work, int32_t const* lwork, int32_t* info , size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_zbbcsd_base = 0 };
void zbbcsd_ ( char const* jobu1, char const* jobu2, char const* jobv1t, char const* jobv2t, char const* trans, int32_t const* m, int32_t const* p, int32_t const* q, double* theta, double* phi, double _Complex* U1, int32_t const* ldu1, double _Complex* U2, int32_t const* ldu2, double _Complex* V1T, int32_t const* ldv1t, double _Complex* V2T, int32_t const* ldv2t, double* B11D, double* B11E, double* B12D, double* B12E, double* B21D, double* B21E, double* B22D, double* B22E, double* rwork, int32_t const* lrwork, int32_t* info , size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_dbdsdc_base = 0 };
void dbdsdc_ ( char const* uplo, char const* compq, int32_t const* n, double* D, double* E, double* U, int32_t const* ldu, double* VT, int32_t const* ldvt, double* Q, int32_t* IQ, double* work, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_sbdsdc_base = 0 };
void sbdsdc_ ( char const* uplo, char const* compq, int32_t const* n, float* D, float* E, float* U, int32_t const* ldu, float* VT, int32_t const* ldvt, float* Q, int32_t* IQ, float* work, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_cbdsqr_base = 0 };
void cbdsqr_ ( char const* uplo, int32_t const* n, int32_t const* ncvt, int32_t const* nru, int32_t const* ncc, float* D, float* E, float _Complex* VT, int32_t const* ldvt, float _Complex* U, int32_t const* ldu, float _Complex* C, int32_t const* ldc, float* rwork, int32_t* info , size_t );
enum { LAPACK_dbdsqr_base = 0 };
void dbdsqr_ ( char const* uplo, int32_t const* n, int32_t const* ncvt, int32_t const* nru, int32_t const* ncc, double* D, double* E, double* VT, int32_t const* ldvt, double* U, int32_t const* ldu, double* C, int32_t const* ldc, double* work, int32_t* info , size_t );
enum { LAPACK_sbdsqr_base = 0 };
void sbdsqr_ ( char const* uplo, int32_t const* n, int32_t const* ncvt, int32_t const* nru, int32_t const* ncc, float* D, float* E, float* VT, int32_t const* ldvt, float* U, int32_t const* ldu, float* C, int32_t const* ldc, float* work, int32_t* info , size_t );
enum { LAPACK_zbdsqr_base = 0 };
void zbdsqr_ ( char const* uplo, int32_t const* n, int32_t const* ncvt, int32_t const* nru, int32_t const* ncc, double* D, double* E, double _Complex* VT, int32_t const* ldvt, double _Complex* U, int32_t const* ldu, double _Complex* C, int32_t const* ldc, double* rwork, int32_t* info , size_t );
enum { LAPACK_dbdsvdx_base = 0 };
void dbdsvdx_ ( char const* uplo, char const* jobz, char const* range, int32_t const* n, double const* D, double const* E, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, int32_t* ns, double* S, double* Z, int32_t const* ldz, double* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sbdsvdx_base = 0 };
void sbdsvdx_ ( char const* uplo, char const* jobz, char const* range, int32_t const* n, float const* D, float const* E, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, int32_t* ns, float* S, float* Z, int32_t const* ldz, float* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ddisna_base = 0 };
void ddisna_ ( char const* job, int32_t const* m, int32_t const* n, double const* D, double* SEP, int32_t* info , size_t );
enum { LAPACK_sdisna_base = 0 };
void sdisna_ ( char const* job, int32_t const* m, int32_t const* n, float const* D, float* SEP, int32_t* info , size_t );
enum { LAPACK_cgbbrd_base = 0 };
void cgbbrd_ ( char const* vect, int32_t const* m, int32_t const* n, int32_t const* ncc, int32_t const* kl, int32_t const* ku, float _Complex* AB, int32_t const* ldab, float* D, float* E, float _Complex* Q, int32_t const* ldq, float _Complex* PT, int32_t const* ldpt, float _Complex* C, int32_t const* ldc, float _Complex* work, float* rwork, int32_t* info , size_t );
enum { LAPACK_dgbbrd_base = 0 };
void dgbbrd_ ( char const* vect, int32_t const* m, int32_t const* n, int32_t const* ncc, int32_t const* kl, int32_t const* ku, double* AB, int32_t const* ldab, double* D, double* E, double* Q, int32_t const* ldq, double* PT, int32_t const* ldpt, double* C, int32_t const* ldc, double* work, int32_t* info , size_t );
enum { LAPACK_sgbbrd_base = 0 };
void sgbbrd_ ( char const* vect, int32_t const* m, int32_t const* n, int32_t const* ncc, int32_t const* kl, int32_t const* ku, float* AB, int32_t const* ldab, float* D, float* E, float* Q, int32_t const* ldq, float* PT, int32_t const* ldpt, float* C, int32_t const* ldc, float* work, int32_t* info , size_t );
enum { LAPACK_zgbbrd_base = 0 };
void zgbbrd_ ( char const* vect, int32_t const* m, int32_t const* n, int32_t const* ncc, int32_t const* kl, int32_t const* ku, double _Complex* AB, int32_t const* ldab, double* D, double* E, double _Complex* Q, int32_t const* ldq, double _Complex* PT, int32_t const* ldpt, double _Complex* C, int32_t const* ldc, double _Complex* work, double* rwork, int32_t* info , size_t );
enum { LAPACK_cgbcon_base = 0 };
void cgbcon_ ( char const* norm, int32_t const* n, int32_t const* kl, int32_t const* ku, float _Complex const* AB, int32_t const* ldab, int32_t const* ipiv, float const* anorm, float* rcond, float _Complex* work, float* rwork, int32_t* info , size_t );
enum { LAPACK_dgbcon_base = 0 };
void dgbcon_ ( char const* norm, int32_t const* n, int32_t const* kl, int32_t const* ku, double const* AB, int32_t const* ldab, int32_t const* ipiv, double const* anorm, double* rcond, double* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_sgbcon_base = 0 };
void sgbcon_ ( char const* norm, int32_t const* n, int32_t const* kl, int32_t const* ku, float const* AB, int32_t const* ldab, int32_t const* ipiv, float const* anorm, float* rcond, float* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_zgbcon_base = 0 };
void zgbcon_ ( char const* norm, int32_t const* n, int32_t const* kl, int32_t const* ku, double _Complex const* AB, int32_t const* ldab, int32_t const* ipiv, double const* anorm, double* rcond, double _Complex* work, double* rwork, int32_t* info , size_t );
enum { LAPACK_cgbequ = 0 };
void cgbequ_ ( int32_t const* m, int32_t const* n, int32_t const* kl, int32_t const* ku, float _Complex const* AB, int32_t const* ldab, float* R, float* C, float* rowcnd, float* colcnd, float* amax, int32_t* info );
enum { LAPACK_dgbequ = 0 };
void dgbequ_ ( int32_t const* m, int32_t const* n, int32_t const* kl, int32_t const* ku, double const* AB, int32_t const* ldab, double* R, double* C, double* rowcnd, double* colcnd, double* amax, int32_t* info );
enum { LAPACK_sgbequ = 0 };
void sgbequ_ ( int32_t const* m, int32_t const* n, int32_t const* kl, int32_t const* ku, float const* AB, int32_t const* ldab, float* R, float* C, float* rowcnd, float* colcnd, float* amax, int32_t* info );
enum { LAPACK_zgbequ = 0 };
void zgbequ_ ( int32_t const* m, int32_t const* n, int32_t const* kl, int32_t const* ku, double _Complex const* AB, int32_t const* ldab, double* R, double* C, double* rowcnd, double* colcnd, double* amax, int32_t* info );
enum { LAPACK_cgbequb = 0 };
void cgbequb_ ( int32_t const* m, int32_t const* n, int32_t const* kl, int32_t const* ku, float _Complex const* AB, int32_t const* ldab, float* R, float* C, float* rowcnd, float* colcnd, float* amax, int32_t* info );
enum { LAPACK_dgbequb = 0 };
void dgbequb_ ( int32_t const* m, int32_t const* n, int32_t const* kl, int32_t const* ku, double const* AB, int32_t const* ldab, double* R, double* C, double* rowcnd, double* colcnd, double* amax, int32_t* info );
enum { LAPACK_sgbequb = 0 };
void sgbequb_ ( int32_t const* m, int32_t const* n, int32_t const* kl, int32_t const* ku, float const* AB, int32_t const* ldab, float* R, float* C, float* rowcnd, float* colcnd, float* amax, int32_t* info );
enum { LAPACK_zgbequb = 0 };
void zgbequb_ ( int32_t const* m, int32_t const* n, int32_t const* kl, int32_t const* ku, double _Complex const* AB, int32_t const* ldab, double* R, double* C, double* rowcnd, double* colcnd, double* amax, int32_t* info );
enum { LAPACK_cgbrfs_base = 0 };
void cgbrfs_ ( char const* trans, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, float _Complex const* AB, int32_t const* ldab, float _Complex const* AFB, int32_t const* ldafb, int32_t const* ipiv, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t );
enum { LAPACK_dgbrfs_base = 0 };
void dgbrfs_ ( char const* trans, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, double const* AB, int32_t const* ldab, double const* AFB, int32_t const* ldafb, int32_t const* ipiv, double const* B, int32_t const* ldb, double* X, int32_t const* ldx, double* ferr, double* berr, double* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_sgbrfs_base = 0 };
void sgbrfs_ ( char const* trans, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, float const* AB, int32_t const* ldab, float const* AFB, int32_t const* ldafb, int32_t const* ipiv, float const* B, int32_t const* ldb, float* X, int32_t const* ldx, float* ferr, float* berr, float* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_zgbrfs_base = 0 };
void zgbrfs_ ( char const* trans, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, double _Complex const* AB, int32_t const* ldab, double _Complex const* AFB, int32_t const* ldafb, int32_t const* ipiv, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t );
enum { LAPACK_cgbrfsx_base = 0 };
void cgbrfsx_ ( char const* trans, char const* equed, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, float _Complex const* AB, int32_t const* ldab, float _Complex const* AFB, int32_t const* ldafb, int32_t const* ipiv, const float* R, const float* C, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* berr, int32_t const* n_err_bnds, float* err_bnds_norm, float* err_bnds_comp, int32_t const* nparams, float* params, float _Complex* work, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_dgbrfsx_base = 0 };
void dgbrfsx_ ( char const* trans, char const* equed, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, double const* AB, int32_t const* ldab, double const* AFB, int32_t const* ldafb, int32_t const* ipiv, const double* R, const double* C, double const* B, int32_t const* ldb, double* X, int32_t const* ldx, double* rcond, double* berr, int32_t const* n_err_bnds, double* err_bnds_norm, double* err_bnds_comp, int32_t const* nparams, double* params, double* work, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_sgbrfsx_base = 0 };
void sgbrfsx_ ( char const* trans, char const* equed, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, float const* AB, int32_t const* ldab, float const* AFB, int32_t const* ldafb, int32_t const* ipiv, const float* R, const float* C, float const* B, int32_t const* ldb, float* X, int32_t const* ldx, float* rcond, float* berr, int32_t const* n_err_bnds, float* err_bnds_norm, float* err_bnds_comp, int32_t const* nparams, float* params, float* work, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_zgbrfsx_base = 0 };
void zgbrfsx_ ( char const* trans, char const* equed, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, double _Complex const* AB, int32_t const* ldab, double _Complex const* AFB, int32_t const* ldafb, int32_t const* ipiv, const double* R, const double* C, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* berr, int32_t const* n_err_bnds, double* err_bnds_norm, double* err_bnds_comp, int32_t const* nparams, double* params, double _Complex* work, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_cgbsv = 0 };
void cgbsv_ ( int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, float _Complex* AB, int32_t const* ldab, int32_t* ipiv, float _Complex* B, int32_t const* ldb, int32_t* info );
enum { LAPACK_dgbsv = 0 };
void dgbsv_ ( int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, double* AB, int32_t const* ldab, int32_t* ipiv, double* B, int32_t const* ldb, int32_t* info );
enum { LAPACK_sgbsv = 0 };
void sgbsv_ ( int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, float* AB, int32_t const* ldab, int32_t* ipiv, float* B, int32_t const* ldb, int32_t* info );
enum { LAPACK_zgbsv = 0 };
void zgbsv_ ( int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, double _Complex* AB, int32_t const* ldab, int32_t* ipiv, double _Complex* B, int32_t const* ldb, int32_t* info );
enum { LAPACK_cgbsvx_base = 0 };
void cgbsvx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, float _Complex* AB, int32_t const* ldab, float _Complex* AFB, int32_t const* ldafb, int32_t* ipiv, char* equed, float* R, float* C, float _Complex* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dgbsvx_base = 0 };
void dgbsvx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, double* AB, int32_t const* ldab, double* AFB, int32_t const* ldafb, int32_t* ipiv, char* equed, double* R, double* C, double* B, int32_t const* ldb, double* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sgbsvx_base = 0 };
void sgbsvx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, float* AB, int32_t const* ldab, float* AFB, int32_t const* ldafb, int32_t* ipiv, char* equed, float* R, float* C, float* B, int32_t const* ldb, float* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zgbsvx_base = 0 };
void zgbsvx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, double _Complex* AB, int32_t const* ldab, double _Complex* AFB, int32_t const* ldafb, int32_t* ipiv, char* equed, double* R, double* C, double _Complex* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cgbsvxx_base = 0 };
void cgbsvxx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, float _Complex* AB, int32_t const* ldab, float _Complex* AFB, int32_t const* ldafb, int32_t* ipiv, char* equed, float* R, float* C, float _Complex* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* rpvgrw, float* berr, int32_t const* n_err_bnds, float* err_bnds_norm, float* err_bnds_comp, int32_t const* nparams, float* params, float _Complex* work, float* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dgbsvxx_base = 0 };
void dgbsvxx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, double* AB, int32_t const* ldab, double* AFB, int32_t const* ldafb, int32_t* ipiv, char* equed, double* R, double* C, double* B, int32_t const* ldb, double* X, int32_t const* ldx, double* rcond, double* rpvgrw, double* berr, int32_t const* n_err_bnds, double* err_bnds_norm, double* err_bnds_comp, int32_t const* nparams, double* params, double* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sgbsvxx_base = 0 };
void sgbsvxx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, float* AB, int32_t const* ldab, float* AFB, int32_t const* ldafb, int32_t* ipiv, char* equed, float* R, float* C, float* B, int32_t const* ldb, float* X, int32_t const* ldx, float* rcond, float* rpvgrw, float* berr, int32_t const* n_err_bnds, float* err_bnds_norm, float* err_bnds_comp, int32_t const* nparams, float* params, float* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zgbsvxx_base = 0 };
void zgbsvxx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, double _Complex* AB, int32_t const* ldab, double _Complex* AFB, int32_t const* ldafb, int32_t* ipiv, char* equed, double* R, double* C, double _Complex* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* rpvgrw, double* berr, int32_t const* n_err_bnds, double* err_bnds_norm, double* err_bnds_comp, int32_t const* nparams, double* params, double _Complex* work, double* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cgbtrf = 0 };
void cgbtrf_ ( int32_t const* m, int32_t const* n, int32_t const* kl, int32_t const* ku, float _Complex* AB, int32_t const* ldab, int32_t* ipiv, int32_t* info );
enum { LAPACK_dgbtrf = 0 };
void dgbtrf_ ( int32_t const* m, int32_t const* n, int32_t const* kl, int32_t const* ku, double* AB, int32_t const* ldab, int32_t* ipiv, int32_t* info );
enum { LAPACK_sgbtrf = 0 };
void sgbtrf_ ( int32_t const* m, int32_t const* n, int32_t const* kl, int32_t const* ku, float* AB, int32_t const* ldab, int32_t* ipiv, int32_t* info );
enum { LAPACK_zgbtrf = 0 };
void zgbtrf_ ( int32_t const* m, int32_t const* n, int32_t const* kl, int32_t const* ku, double _Complex* AB, int32_t const* ldab, int32_t* ipiv, int32_t* info );
enum { LAPACK_cgbtrs_base = 0 };
void cgbtrs_ ( char const* trans, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, float _Complex const* AB, int32_t const* ldab, int32_t const* ipiv, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dgbtrs_base = 0 };
void dgbtrs_ ( char const* trans, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, double const* AB, int32_t const* ldab, int32_t const* ipiv, double* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_sgbtrs_base = 0 };
void sgbtrs_ ( char const* trans, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, float const* AB, int32_t const* ldab, int32_t const* ipiv, float* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zgbtrs_base = 0 };
void zgbtrs_ ( char const* trans, int32_t const* n, int32_t const* kl, int32_t const* ku, int32_t const* nrhs, double _Complex const* AB, int32_t const* ldab, int32_t const* ipiv, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_cgebak_base = 0 };
void cgebak_ ( char const* job, char const* side, int32_t const* n, int32_t const* ilo, int32_t const* ihi, float const* scale, int32_t const* m, float _Complex* V, int32_t const* ldv, int32_t* info , size_t, size_t );
enum { LAPACK_dgebak_base = 0 };
void dgebak_ ( char const* job, char const* side, int32_t const* n, int32_t const* ilo, int32_t const* ihi, double const* scale, int32_t const* m, double* V, int32_t const* ldv, int32_t* info , size_t, size_t );
enum { LAPACK_sgebak_base = 0 };
void sgebak_ ( char const* job, char const* side, int32_t const* n, int32_t const* ilo, int32_t const* ihi, float const* scale, int32_t const* m, float* V, int32_t const* ldv, int32_t* info , size_t, size_t );
enum { LAPACK_zgebak_base = 0 };
void zgebak_ ( char const* job, char const* side, int32_t const* n, int32_t const* ilo, int32_t const* ihi, double const* scale, int32_t const* m, double _Complex* V, int32_t const* ldv, int32_t* info , size_t, size_t );
enum { LAPACK_cgebal_base = 0 };
void cgebal_ ( char const* job, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* ilo, int32_t* ihi, float* scale, int32_t* info , size_t );
enum { LAPACK_dgebal_base = 0 };
void dgebal_ ( char const* job, int32_t const* n, double* A, int32_t const* lda, int32_t* ilo, int32_t* ihi, double* scale, int32_t* info , size_t );
enum { LAPACK_sgebal_base = 0 };
void sgebal_ ( char const* job, int32_t const* n, float* A, int32_t const* lda, int32_t* ilo, int32_t* ihi, float* scale, int32_t* info , size_t );
enum { LAPACK_zgebal_base = 0 };
void zgebal_ ( char const* job, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* ilo, int32_t* ihi, double* scale, int32_t* info , size_t );
enum { LAPACK_cgebrd = 0 };
void cgebrd_ ( int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float* D, float* E, float _Complex* tauq, float _Complex* taup, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dgebrd = 0 };
void dgebrd_ ( int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* D, double* E, double* tauq, double* taup, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sgebrd = 0 };
void sgebrd_ ( int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* D, float* E, float* tauq, float* taup, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zgebrd = 0 };
void zgebrd_ ( int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double* D, double* E, double _Complex* tauq, double _Complex* taup, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cgecon_base = 0 };
void cgecon_ ( char const* norm, int32_t const* n, float _Complex const* A, int32_t const* lda, float const* anorm, float* rcond, float _Complex* work, float* rwork, int32_t* info , size_t );
enum { LAPACK_dgecon_base = 0 };
void dgecon_ ( char const* norm, int32_t const* n, double const* A, int32_t const* lda, double const* anorm, double* rcond, double* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_sgecon_base = 0 };
void sgecon_ ( char const* norm, int32_t const* n, float const* A, int32_t const* lda, float const* anorm, float* rcond, float* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_zgecon_base = 0 };
void zgecon_ ( char const* norm, int32_t const* n, double _Complex const* A, int32_t const* lda, double const* anorm, double* rcond, double _Complex* work, double* rwork, int32_t* info , size_t );
enum { LAPACK_cgeequ = 0 };
void cgeequ_ ( int32_t const* m, int32_t const* n, float _Complex const* A, int32_t const* lda, float* R, float* C, float* rowcnd, float* colcnd, float* amax, int32_t* info );
enum { LAPACK_dgeequ = 0 };
void dgeequ_ ( int32_t const* m, int32_t const* n, double const* A, int32_t const* lda, double* R, double* C, double* rowcnd, double* colcnd, double* amax, int32_t* info );
enum { LAPACK_sgeequ = 0 };
void sgeequ_ ( int32_t const* m, int32_t const* n, float const* A, int32_t const* lda, float* R, float* C, float* rowcnd, float* colcnd, float* amax, int32_t* info );
enum { LAPACK_zgeequ = 0 };
void zgeequ_ ( int32_t const* m, int32_t const* n, double _Complex const* A, int32_t const* lda, double* R, double* C, double* rowcnd, double* colcnd, double* amax, int32_t* info );
enum { LAPACK_cgeequb = 0 };
void cgeequb_ ( int32_t const* m, int32_t const* n, float _Complex const* A, int32_t const* lda, float* R, float* C, float* rowcnd, float* colcnd, float* amax, int32_t* info );
enum { LAPACK_dgeequb = 0 };
void dgeequb_ ( int32_t const* m, int32_t const* n, double const* A, int32_t const* lda, double* R, double* C, double* rowcnd, double* colcnd, double* amax, int32_t* info );
enum { LAPACK_sgeequb = 0 };
void sgeequb_ ( int32_t const* m, int32_t const* n, float const* A, int32_t const* lda, float* R, float* C, float* rowcnd, float* colcnd, float* amax, int32_t* info );
enum { LAPACK_zgeequb = 0 };
void zgeequb_ ( int32_t const* m, int32_t const* n, double _Complex const* A, int32_t const* lda, double* R, double* C, double* rowcnd, double* colcnd, double* amax, int32_t* info );
enum { LAPACK_cgees_base = 0 };
void cgees_ ( char const* jobvs, char const* sort, LAPACK_C_SELECT1 select, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* sdim, float _Complex* W, float _Complex* VS, int32_t const* ldvs, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* BWORK, int32_t* info , size_t, size_t );
enum { LAPACK_dgees_base = 0 };
void dgees_ ( char const* jobvs, char const* sort, LAPACK_D_SELECT2 select, int32_t const* n, double* A, int32_t const* lda, int32_t* sdim, double* WR, double* WI, double* VS, int32_t const* ldvs, double* work, int32_t const* lwork, int32_t* BWORK, int32_t* info , size_t, size_t );
enum { LAPACK_sgees_base = 0 };
void sgees_ ( char const* jobvs, char const* sort, LAPACK_S_SELECT2 select, int32_t const* n, float* A, int32_t const* lda, int32_t* sdim, float* WR, float* WI, float* VS, int32_t const* ldvs, float* work, int32_t const* lwork, int32_t* BWORK, int32_t* info , size_t, size_t );
enum { LAPACK_zgees_base = 0 };
void zgees_ ( char const* jobvs, char const* sort, LAPACK_Z_SELECT1 select, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* sdim, double _Complex* W, double _Complex* VS, int32_t const* ldvs, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* BWORK, int32_t* info , size_t, size_t );
enum { LAPACK_cgeesx_base = 0 };
void cgeesx_ ( char const* jobvs, char const* sort, LAPACK_C_SELECT1 select, char const* sense, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* sdim, float _Complex* W, float _Complex* VS, int32_t const* ldvs, float* rconde, float* rcondv, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dgeesx_base = 0 };
void dgeesx_ ( char const* jobvs, char const* sort, LAPACK_D_SELECT2 select, char const* sense, int32_t const* n, double* A, int32_t const* lda, int32_t* sdim, double* WR, double* WI, double* VS, int32_t const* ldvs, double* rconde, double* rcondv, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sgeesx_base = 0 };
void sgeesx_ ( char const* jobvs, char const* sort, LAPACK_S_SELECT2 select, char const* sense, int32_t const* n, float* A, int32_t const* lda, int32_t* sdim, float* WR, float* WI, float* VS, int32_t const* ldvs, float* rconde, float* rcondv, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zgeesx_base = 0 };
void zgeesx_ ( char const* jobvs, char const* sort, LAPACK_Z_SELECT1 select, char const* sense, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* sdim, double _Complex* W, double _Complex* VS, int32_t const* ldvs, double* rconde, double* rcondv, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cgeev_base = 0 };
void cgeev_ ( char const* jobvl, char const* jobvr, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* W, float _Complex* VL, int32_t const* ldvl, float _Complex* VR, int32_t const* ldvr, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_dgeev_base = 0 };
void dgeev_ ( char const* jobvl, char const* jobvr, int32_t const* n, double* A, int32_t const* lda, double* WR, double* WI, double* VL, int32_t const* ldvl, double* VR, int32_t const* ldvr, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_sgeev_base = 0 };
void sgeev_ ( char const* jobvl, char const* jobvr, int32_t const* n, float* A, int32_t const* lda, float* WR, float* WI, float* VL, int32_t const* ldvl, float* VR, int32_t const* ldvr, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_zgeev_base = 0 };
void zgeev_ ( char const* jobvl, char const* jobvr, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* W, double _Complex* VL, int32_t const* ldvl, double _Complex* VR, int32_t const* ldvr, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_cgeevx_base = 0 };
void cgeevx_ ( char const* balanc, char const* jobvl, char const* jobvr, char const* sense, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* W, float _Complex* VL, int32_t const* ldvl, float _Complex* VR, int32_t const* ldvr, int32_t* ilo, int32_t* ihi, float* scale, float* abnrm, float* rconde, float* rcondv, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* info , size_t, size_t, size_t, size_t );
enum { LAPACK_dgeevx_base = 0 };
void dgeevx_ ( char const* balanc, char const* jobvl, char const* jobvr, char const* sense, int32_t const* n, double* A, int32_t const* lda, double* WR, double* WI, double* VL, int32_t const* ldvl, double* VR, int32_t const* ldvr, int32_t* ilo, int32_t* ihi, double* scale, double* abnrm, double* rconde, double* rcondv, double* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t, size_t );
enum { LAPACK_sgeevx_base = 0 };
void sgeevx_ ( char const* balanc, char const* jobvl, char const* jobvr, char const* sense, int32_t const* n, float* A, int32_t const* lda, float* WR, float* WI, float* VL, int32_t const* ldvl, float* VR, int32_t const* ldvr, int32_t* ilo, int32_t* ihi, float* scale, float* abnrm, float* rconde, float* rcondv, float* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t, size_t );
enum { LAPACK_zgeevx_base = 0 };
void zgeevx_ ( char const* balanc, char const* jobvl, char const* jobvr, char const* sense, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* W, double _Complex* VL, int32_t const* ldvl, double _Complex* VR, int32_t const* ldvr, int32_t* ilo, int32_t* ihi, double* scale, double* abnrm, double* rconde, double* rcondv, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* info , size_t, size_t, size_t, size_t );
enum { LAPACK_cgehrd = 0 };
void cgehrd_ ( int32_t const* n, int32_t const* ilo, int32_t const* ihi, float _Complex* A, int32_t const* lda, float _Complex* tau, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dgehrd = 0 };
void dgehrd_ ( int32_t const* n, int32_t const* ilo, int32_t const* ihi, double* A, int32_t const* lda, double* tau, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sgehrd = 0 };
void sgehrd_ ( int32_t const* n, int32_t const* ilo, int32_t const* ihi, float* A, int32_t const* lda, float* tau, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zgehrd = 0 };
void zgehrd_ ( int32_t const* n, int32_t const* ilo, int32_t const* ihi, double _Complex* A, int32_t const* lda, double _Complex* tau, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cgejsv_base = 0 };
void cgejsv_ ( char const* joba, char const* jobu, char const* jobv, char const* jobr, char const* jobt, char const* jobp, int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float* SVA, float _Complex* U, int32_t const* ldu, float _Complex* V, int32_t const* ldv, float _Complex* cwork, int32_t const* lwork, float* rwork, int32_t const* lrwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_dgejsv_base = 0 };
void dgejsv_ ( char const* joba, char const* jobu, char const* jobv, char const* jobr, char const* jobt, char const* jobp, int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* SVA, double* U, int32_t const* ldu, double* V, int32_t const* ldv, double* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_sgejsv_base = 0 };
void sgejsv_ ( char const* joba, char const* jobu, char const* jobv, char const* jobr, char const* jobt, char const* jobp, int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* SVA, float* U, int32_t const* ldu, float* V, int32_t const* ldv, float* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_zgejsv_base = 0 };
void zgejsv_ ( char const* joba, char const* jobu, char const* jobv, char const* jobr, char const* jobt, char const* jobp, int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double* SVA, double _Complex* U, int32_t const* ldu, double _Complex* V, int32_t const* ldv, double _Complex* cwork, int32_t const* lwork, double* rwork, int32_t const* lrwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_cgelq = 0 };
void cgelq_ ( int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* T, int32_t const* tsize, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dgelq = 0 };
void dgelq_ ( int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* T, int32_t const* tsize, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sgelq = 0 };
void sgelq_ ( int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* T, int32_t const* tsize, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zgelq = 0 };
void zgelq_ ( int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* T, int32_t const* tsize, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cgelq2 = 0 };
void cgelq2_ ( int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* tau, float _Complex* work, int32_t* info );
enum { LAPACK_dgelq2 = 0 };
void dgelq2_ ( int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* tau, double* work, int32_t* info );
enum { LAPACK_sgelq2 = 0 };
void sgelq2_ ( int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* tau, float* work, int32_t* info );
enum { LAPACK_zgelq2 = 0 };
void zgelq2_ ( int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* tau, double _Complex* work, int32_t* info );
enum { LAPACK_cgelqf = 0 };
void cgelqf_ ( int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* tau, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dgelqf = 0 };
void dgelqf_ ( int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* tau, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sgelqf = 0 };
void sgelqf_ ( int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* tau, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zgelqf = 0 };
void zgelqf_ ( int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* tau, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cgels_base = 0 };
void cgels_ ( char const* trans, int32_t const* m, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_dgels_base = 0 };
void dgels_ ( char const* trans, int32_t const* m, int32_t const* n, int32_t const* nrhs, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_sgels_base = 0 };
void sgels_ ( char const* trans, int32_t const* m, int32_t const* n, int32_t const* nrhs, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zgels_base = 0 };
void zgels_ ( char const* trans, int32_t const* m, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_cgelsd = 0 };
void cgelsd_ ( int32_t const* m, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float* S, float const* rcond, int32_t* rank, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* iwork, int32_t* info );
enum { LAPACK_dgelsd = 0 };
void dgelsd_ ( int32_t const* m, int32_t const* n, int32_t const* nrhs, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* S, double const* rcond, int32_t* rank, double* work, int32_t const* lwork, int32_t* iwork, int32_t* info );
enum { LAPACK_sgelsd = 0 };
void sgelsd_ ( int32_t const* m, int32_t const* n, int32_t const* nrhs, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* S, float const* rcond, int32_t* rank, float* work, int32_t const* lwork, int32_t* iwork, int32_t* info );
enum { LAPACK_zgelsd = 0 };
void zgelsd_ ( int32_t const* m, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double* S, double const* rcond, int32_t* rank, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* iwork, int32_t* info );
enum { LAPACK_cgelss = 0 };
void cgelss_ ( int32_t const* m, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float* S, float const* rcond, int32_t* rank, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* info );
enum { LAPACK_dgelss = 0 };
void dgelss_ ( int32_t const* m, int32_t const* n, int32_t const* nrhs, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* S, double const* rcond, int32_t* rank, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sgelss = 0 };
void sgelss_ ( int32_t const* m, int32_t const* n, int32_t const* nrhs, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* S, float const* rcond, int32_t* rank, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zgelss = 0 };
void zgelss_ ( int32_t const* m, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double* S, double const* rcond, int32_t* rank, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* info );
enum { LAPACK_cgelsy = 0 };
void cgelsy_ ( int32_t const* m, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, int32_t* JPVT, float const* rcond, int32_t* rank, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* info );
enum { LAPACK_dgelsy = 0 };
void dgelsy_ ( int32_t const* m, int32_t const* n, int32_t const* nrhs, double* A, int32_t const* lda, double* B, int32_t const* ldb, int32_t* JPVT, double const* rcond, int32_t* rank, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sgelsy = 0 };
void sgelsy_ ( int32_t const* m, int32_t const* n, int32_t const* nrhs, float* A, int32_t const* lda, float* B, int32_t const* ldb, int32_t* JPVT, float const* rcond, int32_t* rank, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zgelsy = 0 };
void zgelsy_ ( int32_t const* m, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, int32_t* JPVT, double const* rcond, int32_t* rank, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* info );
enum { LAPACK_cgemlq_base = 0 };
void cgemlq_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, float _Complex const* A, int32_t const* lda, float _Complex const* T, int32_t const* tsize, float _Complex* C, int32_t const* ldc, float _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_dgemlq_base = 0 };
void dgemlq_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, double const* A, int32_t const* lda, double const* T, int32_t const* tsize, double* C, int32_t const* ldc, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_sgemlq_base = 0 };
void sgemlq_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, float const* A, int32_t const* lda, float const* T, int32_t const* tsize, float* C, int32_t const* ldc, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_zgemlq_base = 0 };
void zgemlq_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, double _Complex const* A, int32_t const* lda, double _Complex const* T, int32_t const* tsize, double _Complex* C, int32_t const* ldc, double _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_cgemqr_base = 0 };
void cgemqr_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, float _Complex const* A, int32_t const* lda, float _Complex const* T, int32_t const* tsize, float _Complex* C, int32_t const* ldc, float _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_dgemqr_base = 0 };
void dgemqr_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, double const* A, int32_t const* lda, double const* T, int32_t const* tsize, double* C, int32_t const* ldc, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_sgemqr_base = 0 };
void sgemqr_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, float const* A, int32_t const* lda, float const* T, int32_t const* tsize, float* C, int32_t const* ldc, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_zgemqr_base = 0 };
void zgemqr_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, double _Complex const* A, int32_t const* lda, double _Complex const* T, int32_t const* tsize, double _Complex* C, int32_t const* ldc, double _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_cgemqrt_base = 0 };
void cgemqrt_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* nb, float _Complex const* V, int32_t const* ldv, float _Complex const* T, int32_t const* ldt, float _Complex* C, int32_t const* ldc, float _Complex* work, int32_t* info , size_t, size_t );
enum { LAPACK_dgemqrt_base = 0 };
void dgemqrt_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* nb, double const* V, int32_t const* ldv, double const* T, int32_t const* ldt, double* C, int32_t const* ldc, double* work, int32_t* info , size_t, size_t );
enum { LAPACK_sgemqrt_base = 0 };
void sgemqrt_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* nb, float const* V, int32_t const* ldv, float const* T, int32_t const* ldt, float* C, int32_t const* ldc, float* work, int32_t* info , size_t, size_t );
enum { LAPACK_zgemqrt_base = 0 };
void zgemqrt_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* nb, double _Complex const* V, int32_t const* ldv, double _Complex const* T, int32_t const* ldt, double _Complex* C, int32_t const* ldc, double _Complex* work, int32_t* info , size_t, size_t );
enum { LAPACK_cgeql2 = 0 };
void cgeql2_ ( int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* tau, float _Complex* work, int32_t* info );
enum { LAPACK_dgeql2 = 0 };
void dgeql2_ ( int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* tau, double* work, int32_t* info );
enum { LAPACK_sgeql2 = 0 };
void sgeql2_ ( int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* tau, float* work, int32_t* info );
enum { LAPACK_zgeql2 = 0 };
void zgeql2_ ( int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* tau, double _Complex* work, int32_t* info );
enum { LAPACK_cgeqlf = 0 };
void cgeqlf_ ( int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* tau, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dgeqlf = 0 };
void dgeqlf_ ( int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* tau, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sgeqlf = 0 };
void sgeqlf_ ( int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* tau, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zgeqlf = 0 };
void zgeqlf_ ( int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* tau, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sgeqpf = 0 };
void sgeqpf_ ( int32_t* m, int32_t* n, float* a, int32_t* lda, int32_t* jpvt, float* tau, float* work, int32_t *info );
enum { LAPACK_dgeqpf = 0 };
void dgeqpf_ ( int32_t* m, int32_t* n, double* a, int32_t* lda, int32_t* jpvt, double* tau, double* work, int32_t *info );
enum { LAPACK_cgeqpf = 0 };
void cgeqpf_ ( int32_t* m, int* n, float _Complex* a, int32_t* lda, int32_t* jpvt, float _Complex* tau, float _Complex* work, float* rwork, int32_t *info );
enum { LAPACK_zgeqpf = 0 };
void zgeqpf_ ( int32_t* m, int* n, double _Complex* a, int32_t* lda, int32_t* jpvt, double _Complex* tau, double _Complex* work, double* rwork, int32_t *info );
enum { LAPACK_cgeqp3 = 0 };
void cgeqp3_ ( int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* JPVT, float _Complex* tau, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* info );
enum { LAPACK_dgeqp3 = 0 };
void dgeqp3_ ( int32_t const* m, int32_t const* n, double* A, int32_t const* lda, int32_t* JPVT, double* tau, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sgeqp3 = 0 };
void sgeqp3_ ( int32_t const* m, int32_t const* n, float* A, int32_t const* lda, int32_t* JPVT, float* tau, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zgeqp3 = 0 };
void zgeqp3_ ( int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* JPVT, double _Complex* tau, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* info );
enum { LAPACK_cgeqr = 0 };
void cgeqr_ ( int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* T, int32_t const* tsize, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dgeqr = 0 };
void dgeqr_ ( int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* T, int32_t const* tsize, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sgeqr = 0 };
void sgeqr_ ( int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* T, int32_t const* tsize, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zgeqr = 0 };
void zgeqr_ ( int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* T, int32_t const* tsize, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cgeqr2 = 0 };
void cgeqr2_ ( int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* tau, float _Complex* work, int32_t* info );
enum { LAPACK_dgeqr2 = 0 };
void dgeqr2_ ( int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* tau, double* work, int32_t* info );
enum { LAPACK_sgeqr2 = 0 };
void sgeqr2_ ( int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* tau, float* work, int32_t* info );
enum { LAPACK_zgeqr2 = 0 };
void zgeqr2_ ( int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* tau, double _Complex* work, int32_t* info );
enum { LAPACK_cgeqrf = 0 };
void cgeqrf_ ( int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* tau, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dgeqrf = 0 };
void dgeqrf_ ( int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* tau, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sgeqrf = 0 };
void sgeqrf_ ( int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* tau, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zgeqrf = 0 };
void zgeqrf_ ( int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* tau, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cgeqrfp = 0 };
void cgeqrfp_ ( int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* tau, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dgeqrfp = 0 };
void dgeqrfp_ ( int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* tau, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sgeqrfp = 0 };
void sgeqrfp_ ( int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* tau, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zgeqrfp = 0 };
void zgeqrfp_ ( int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* tau, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cgeqrt = 0 };
void cgeqrt_ ( int32_t const* m, int32_t const* n, int32_t const* nb, float _Complex* A, int32_t const* lda, float _Complex* T, int32_t const* ldt, float _Complex* work, int32_t* info );
enum { LAPACK_dgeqrt = 0 };
void dgeqrt_ ( int32_t const* m, int32_t const* n, int32_t const* nb, double* A, int32_t const* lda, double* T, int32_t const* ldt, double* work, int32_t* info );
enum { LAPACK_sgeqrt = 0 };
void sgeqrt_ ( int32_t const* m, int32_t const* n, int32_t const* nb, float* A, int32_t const* lda, float* T, int32_t const* ldt, float* work, int32_t* info );
enum { LAPACK_zgeqrt = 0 };
void zgeqrt_ ( int32_t const* m, int32_t const* n, int32_t const* nb, double _Complex* A, int32_t const* lda, double _Complex* T, int32_t const* ldt, double _Complex* work, int32_t* info );
enum { LAPACK_cgeqrt2 = 0 };
void cgeqrt2_ ( int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* T, int32_t const* ldt, int32_t* info );
enum { LAPACK_dgeqrt2 = 0 };
void dgeqrt2_ ( int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* T, int32_t const* ldt, int32_t* info );
enum { LAPACK_sgeqrt2 = 0 };
void sgeqrt2_ ( int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* T, int32_t const* ldt, int32_t* info );
enum { LAPACK_zgeqrt2 = 0 };
void zgeqrt2_ ( int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* T, int32_t const* ldt, int32_t* info );
enum { LAPACK_cgeqrt3 = 0 };
void cgeqrt3_ ( int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* T, int32_t const* ldt, int32_t* info );
enum { LAPACK_dgeqrt3 = 0 };
void dgeqrt3_ ( int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* T, int32_t const* ldt, int32_t* info );
enum { LAPACK_sgeqrt3 = 0 };
void sgeqrt3_ ( int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* T, int32_t const* ldt, int32_t* info );
enum { LAPACK_zgeqrt3 = 0 };
void zgeqrt3_ ( int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* T, int32_t const* ldt, int32_t* info );
enum { LAPACK_cgerfs_base = 0 };
void cgerfs_ ( char const* trans, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, float _Complex const* AF, int32_t const* ldaf, int32_t const* ipiv, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t );
enum { LAPACK_dgerfs_base = 0 };
void dgerfs_ ( char const* trans, int32_t const* n, int32_t const* nrhs, double const* A, int32_t const* lda, double const* AF, int32_t const* ldaf, int32_t const* ipiv, double const* B, int32_t const* ldb, double* X, int32_t const* ldx, double* ferr, double* berr, double* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_sgerfs_base = 0 };
void sgerfs_ ( char const* trans, int32_t const* n, int32_t const* nrhs, float const* A, int32_t const* lda, float const* AF, int32_t const* ldaf, int32_t const* ipiv, float const* B, int32_t const* ldb, float* X, int32_t const* ldx, float* ferr, float* berr, float* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_zgerfs_base = 0 };
void zgerfs_ ( char const* trans, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, double _Complex const* AF, int32_t const* ldaf, int32_t const* ipiv, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t );
enum { LAPACK_cgerfsx_base = 0 };
void cgerfsx_ ( char const* trans, char const* equed, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, float _Complex const* AF, int32_t const* ldaf, int32_t const* ipiv, float const* R, float const* C, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* berr, int32_t const* n_err_bnds, float* err_bnds_norm, float* err_bnds_comp, int32_t const* nparams, float* params, float _Complex* work, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_dgerfsx_base = 0 };
void dgerfsx_ ( char const* trans, char const* equed, int32_t const* n, int32_t const* nrhs, double const* A, int32_t const* lda, double const* AF, int32_t const* ldaf, int32_t const* ipiv, double const* R, double const* C, double const* B, int32_t const* ldb, double* X, int32_t const* ldx, double* rcond, double* berr, int32_t const* n_err_bnds, double* err_bnds_norm, double* err_bnds_comp, int32_t const* nparams, double* params, double* work, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_sgerfsx_base = 0 };
void sgerfsx_ ( char const* trans, char const* equed, int32_t const* n, int32_t const* nrhs, float const* A, int32_t const* lda, float const* AF, int32_t const* ldaf, int32_t const* ipiv, float const* R, float const* C, float const* B, int32_t const* ldb, float* X, int32_t const* ldx, float* rcond, float* berr, int32_t const* n_err_bnds, float* err_bnds_norm, float* err_bnds_comp, int32_t const* nparams, float* params, float* work, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_zgerfsx_base = 0 };
void zgerfsx_ ( char const* trans, char const* equed, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, double _Complex const* AF, int32_t const* ldaf, int32_t const* ipiv, double const* R, double const* C, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* berr, int32_t const* n_err_bnds, double* err_bnds_norm, double* err_bnds_comp, int32_t const* nparams, double* params, double _Complex* work, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_cgerq2 = 0 };
void cgerq2_ ( int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* tau, float _Complex* work, int32_t* info );
enum { LAPACK_dgerq2 = 0 };
void dgerq2_ ( int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* tau, double* work, int32_t* info );
enum { LAPACK_sgerq2 = 0 };
void sgerq2_ ( int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* tau, float* work, int32_t* info );
enum { LAPACK_zgerq2 = 0 };
void zgerq2_ ( int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* tau, double _Complex* work, int32_t* info );
enum { LAPACK_cgerqf = 0 };
void cgerqf_ ( int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* tau, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dgerqf = 0 };
void dgerqf_ ( int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* tau, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sgerqf = 0 };
void sgerqf_ ( int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* tau, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zgerqf = 0 };
void zgerqf_ ( int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* tau, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cgesdd_base = 0 };
void cgesdd_ ( char const* jobz, int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float* S, float _Complex* U, int32_t const* ldu, float _Complex* VT, int32_t const* ldvt, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_dgesdd_base = 0 };
void dgesdd_ ( char const* jobz, int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* S, double* U, int32_t const* ldu, double* VT, int32_t const* ldvt, double* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_sgesdd_base = 0 };
void sgesdd_ ( char const* jobz, int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* S, float* U, int32_t const* ldu, float* VT, int32_t const* ldvt, float* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_zgesdd_base = 0 };
void zgesdd_ ( char const* jobz, int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double* S, double _Complex* U, int32_t const* ldu, double _Complex* VT, int32_t const* ldvt, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_cgesv = 0 };
void cgesv_ ( int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, int32_t* ipiv, float _Complex* B, int32_t const* ldb, int32_t* info );
enum { LAPACK_dgesv = 0 };
void dgesv_ ( int32_t const* n, int32_t const* nrhs, double* A, int32_t const* lda, int32_t* ipiv, double* B, int32_t const* ldb, int32_t* info );
enum { LAPACK_sgesv = 0 };
void sgesv_ ( int32_t const* n, int32_t const* nrhs, float* A, int32_t const* lda, int32_t* ipiv, float* B, int32_t const* ldb, int32_t* info );
enum { LAPACK_zgesv = 0 };
void zgesv_ ( int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, int32_t* ipiv, double _Complex* B, int32_t const* ldb, int32_t* info );
enum { LAPACK_dsgesv = 0 };
void dsgesv_ ( int32_t const* n, int32_t const* nrhs, double* A, int32_t const* lda, int32_t* ipiv, double const* B, int32_t const* ldb, double* X, int32_t const* ldx, double* work, float* swork, int32_t* iter, int32_t* info );
enum { LAPACK_zcgesv = 0 };
void zcgesv_ ( int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, int32_t* ipiv, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double _Complex* work, float _Complex* swork, double* rwork, int32_t* iter, int32_t* info );
enum { LAPACK_cgesvd_base = 0 };
void cgesvd_ ( char const* jobu, char const* jobvt, int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float* S, float _Complex* U, int32_t const* ldu, float _Complex* VT, int32_t const* ldvt, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_dgesvd_base = 0 };
void dgesvd_ ( char const* jobu, char const* jobvt, int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* S, double* U, int32_t const* ldu, double* VT, int32_t const* ldvt, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_sgesvd_base = 0 };
void sgesvd_ ( char const* jobu, char const* jobvt, int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* S, float* U, int32_t const* ldu, float* VT, int32_t const* ldvt, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_zgesvd_base = 0 };
void zgesvd_ ( char const* jobu, char const* jobvt, int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double* S, double _Complex* U, int32_t const* ldu, double _Complex* VT, int32_t const* ldvt, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_cgesvdq_base = 0 };
void cgesvdq_ ( char const* joba, char const* jobp, char const* jobr, char const* jobu, char const* jobv, int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float* S, float _Complex* U, int32_t const* ldu, float _Complex* V, int32_t const* ldv, int32_t* numrank, int32_t* iwork, int32_t const* liwork, float _Complex* cwork, int32_t* lcwork, float* rwork, int32_t const* lrwork, int32_t* info , size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_dgesvdq_base = 0 };
void dgesvdq_ ( char const* joba, char const* jobp, char const* jobr, char const* jobu, char const* jobv, int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* S, double* U, int32_t const* ldu, double* V, int32_t const* ldv, int32_t* numrank, int32_t* iwork, int32_t const* liwork, double* work, int32_t* lwork, double* rwork, int32_t const* lrwork, int32_t* info , size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_sgesvdq_base = 0 };
void sgesvdq_ ( char const* joba, char const* jobp, char const* jobr, char const* jobu, char const* jobv, int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* S, float* U, int32_t const* ldu, float* V, int32_t const* ldv, int32_t* numrank, int32_t* iwork, int32_t const* liwork, float* work, int32_t* lwork, float* rwork, int32_t const* lrwork, int32_t* info , size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_zgesvdq_base = 0 };
void zgesvdq_ ( char const* joba, char const* jobp, char const* jobr, char const* jobu, char const* jobv, int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double* S, double _Complex* U, int32_t const* ldu, double _Complex* V, int32_t const* ldv, int32_t* numrank, int32_t* iwork, int32_t const* liwork, double _Complex* cwork, int32_t* lcwork, double* rwork, int32_t const* lrwork, int32_t* info , size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_cgesvdx_base = 0 };
void cgesvdx_ ( char const* jobu, char const* jobvt, char const* range, int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, int32_t* ns, float* S, float _Complex* U, int32_t const* ldu, float _Complex* VT, int32_t const* ldvt, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dgesvdx_base = 0 };
void dgesvdx_ ( char const* jobu, char const* jobvt, char const* range, int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, int32_t* ns, double* S, double* U, int32_t const* ldu, double* VT, int32_t const* ldvt, double* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sgesvdx_base = 0 };
void sgesvdx_ ( char const* jobu, char const* jobvt, char const* range, int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, int32_t* ns, float* S, float* U, int32_t const* ldu, float* VT, int32_t const* ldvt, float* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zgesvdx_base = 0 };
void zgesvdx_ ( char const* jobu, char const* jobvt, char const* range, int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, int32_t* ns, double* S, double _Complex* U, int32_t const* ldu, double _Complex* VT, int32_t const* ldvt, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cgesvj_base = 0 };
void cgesvj_ ( char const* joba, char const* jobu, char const* jobv, int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float* SVA, int32_t const* mv, float _Complex* V, int32_t const* ldv, float _Complex* cwork, int32_t const* lwork, float* rwork, int32_t const* lrwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dgesvj_base = 0 };
void dgesvj_ ( char const* joba, char const* jobu, char const* jobv, int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* SVA, int32_t const* mv, double* V, int32_t const* ldv, double* work, int32_t const* lwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sgesvj_base = 0 };
void sgesvj_ ( char const* joba, char const* jobu, char const* jobv, int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* SVA, int32_t const* mv, float* V, int32_t const* ldv, float* work, int32_t const* lwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zgesvj_base = 0 };
void zgesvj_ ( char const* joba, char const* jobu, char const* jobv, int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double* SVA, int32_t const* mv, double _Complex* V, int32_t const* ldv, double _Complex* cwork, int32_t const* lwork, double* rwork, int32_t const* lrwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cgesvx_base = 0 };
void cgesvx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, float _Complex* AF, int32_t const* ldaf, int32_t* ipiv, char* equed, float* R, float* C, float _Complex* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dgesvx_base = 0 };
void dgesvx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* nrhs, double* A, int32_t const* lda, double* AF, int32_t const* ldaf, int32_t* ipiv, char* equed, double* R, double* C, double* B, int32_t const* ldb, double* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sgesvx_base = 0 };
void sgesvx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* nrhs, float* A, int32_t const* lda, float* AF, int32_t const* ldaf, int32_t* ipiv, char* equed, float* R, float* C, float* B, int32_t const* ldb, float* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zgesvx_base = 0 };
void zgesvx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, double _Complex* AF, int32_t const* ldaf, int32_t* ipiv, char* equed, double* R, double* C, double _Complex* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cgesvxx_base = 0 };
void cgesvxx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, float _Complex* AF, int32_t const* ldaf, int32_t* ipiv, char* equed, float* R, float* C, float _Complex* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* rpvgrw, float* berr, int32_t const* n_err_bnds, float* err_bnds_norm, float* err_bnds_comp, int32_t const* nparams, float* params, float _Complex* work, float* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dgesvxx_base = 0 };
void dgesvxx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* nrhs, double* A, int32_t const* lda, double* AF, int32_t const* ldaf, int32_t* ipiv, char* equed, double* R, double* C, double* B, int32_t const* ldb, double* X, int32_t const* ldx, double* rcond, double* rpvgrw, double* berr, int32_t const* n_err_bnds, double* err_bnds_norm, double* err_bnds_comp, int32_t const* nparams, double* params, double* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sgesvxx_base = 0 };
void sgesvxx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* nrhs, float* A, int32_t const* lda, float* AF, int32_t const* ldaf, int32_t* ipiv, char* equed, float* R, float* C, float* B, int32_t const* ldb, float* X, int32_t const* ldx, float* rcond, float* rpvgrw, float* berr, int32_t const* n_err_bnds, float* err_bnds_norm, float* err_bnds_comp, int32_t const* nparams, float* params, float* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zgesvxx_base = 0 };
void zgesvxx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, double _Complex* AF, int32_t const* ldaf, int32_t* ipiv, char* equed, double* R, double* C, double _Complex* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* rpvgrw, double* berr, int32_t const* n_err_bnds, double* err_bnds_norm, double* err_bnds_comp, int32_t const* nparams, double* params, double _Complex* work, double* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cgetf2 = 0 };
void cgetf2_ ( int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* ipiv, int32_t* info );
enum { LAPACK_dgetf2 = 0 };
void dgetf2_ ( int32_t const* m, int32_t const* n, double* A, int32_t const* lda, int32_t* ipiv, int32_t* info );
enum { LAPACK_sgetf2 = 0 };
void sgetf2_ ( int32_t const* m, int32_t const* n, float* A, int32_t const* lda, int32_t* ipiv, int32_t* info );
enum { LAPACK_zgetf2 = 0 };
void zgetf2_ ( int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* ipiv, int32_t* info );
enum { LAPACK_cgetrf = 0 };
void cgetrf_ ( int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* ipiv, int32_t* info );
enum { LAPACK_dgetrf = 0 };
void dgetrf_ ( int32_t const* m, int32_t const* n, double* A, int32_t const* lda, int32_t* ipiv, int32_t* info );
enum { LAPACK_sgetrf = 0 };
void sgetrf_ ( int32_t const* m, int32_t const* n, float* A, int32_t const* lda, int32_t* ipiv, int32_t* info );
enum { LAPACK_zgetrf = 0 };
void zgetrf_ ( int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* ipiv, int32_t* info );
enum { LAPACK_cgetrf2 = 0 };
void cgetrf2_ ( int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* ipiv, int32_t* info );
enum { LAPACK_dgetrf2 = 0 };
void dgetrf2_ ( int32_t const* m, int32_t const* n, double* A, int32_t const* lda, int32_t* ipiv, int32_t* info );
enum { LAPACK_sgetrf2 = 0 };
void sgetrf2_ ( int32_t const* m, int32_t const* n, float* A, int32_t const* lda, int32_t* ipiv, int32_t* info );
enum { LAPACK_zgetrf2 = 0 };
void zgetrf2_ ( int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* ipiv, int32_t* info );
enum { LAPACK_cgetri = 0 };
void cgetri_ ( int32_t const* n, float _Complex* A, int32_t const* lda, int32_t const* ipiv, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dgetri = 0 };
void dgetri_ ( int32_t const* n, double* A, int32_t const* lda, int32_t const* ipiv, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sgetri = 0 };
void sgetri_ ( int32_t const* n, float* A, int32_t const* lda, int32_t const* ipiv, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zgetri = 0 };
void zgetri_ ( int32_t const* n, double _Complex* A, int32_t const* lda, int32_t const* ipiv, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cgetrs_base = 0 };
void cgetrs_ ( char const* trans, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, int32_t const* ipiv, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dgetrs_base = 0 };
void dgetrs_ ( char const* trans, int32_t const* n, int32_t const* nrhs, double const* A, int32_t const* lda, int32_t const* ipiv, double* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_sgetrs_base = 0 };
void sgetrs_ ( char const* trans, int32_t const* n, int32_t const* nrhs, float const* A, int32_t const* lda, int32_t const* ipiv, float* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zgetrs_base = 0 };
void zgetrs_ ( char const* trans, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, int32_t const* ipiv, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_cgetsls_base = 0 };
void cgetsls_ ( char const* trans, int32_t const* m, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_dgetsls_base = 0 };
void dgetsls_ ( char const* trans, int32_t const* m, int32_t const* n, int32_t const* nrhs, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_sgetsls_base = 0 };
void sgetsls_ ( char const* trans, int32_t const* m, int32_t const* n, int32_t const* nrhs, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zgetsls_base = 0 };
void zgetsls_ ( char const* trans, int32_t const* m, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_cgetsqrhrt = 0 };
void cgetsqrhrt_ ( int32_t const* m, int32_t const* n, int32_t const* mb1, int32_t const* nb1, int32_t const* nb2, float _Complex* A, int32_t const* lda, float _Complex* T, int32_t const* ldt, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dgetsqrhrt = 0 };
void dgetsqrhrt_ ( int32_t const* m, int32_t const* n, int32_t const* mb1, int32_t const* nb1, int32_t const* nb2, double* A, int32_t const* lda, double* T, int32_t const* ldt, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sgetsqrhrt = 0 };
void sgetsqrhrt_ ( int32_t const* m, int32_t const* n, int32_t const* mb1, int32_t const* nb1, int32_t const* nb2, float* A, int32_t const* lda, float* T, int32_t const* ldt, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zgetsqrhrt = 0 };
void zgetsqrhrt_ ( int32_t const* m, int32_t const* n, int32_t const* mb1, int32_t const* nb1, int32_t const* nb2, double _Complex* A, int32_t const* lda, double _Complex* T, int32_t const* ldt, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cggbak_base = 0 };
void cggbak_ ( char const* job, char const* side, int32_t const* n, int32_t const* ilo, int32_t const* ihi, float const* lscale, float const* rscale, int32_t const* m, float _Complex* V, int32_t const* ldv, int32_t* info , size_t, size_t );
enum { LAPACK_dggbak_base = 0 };
void dggbak_ ( char const* job, char const* side, int32_t const* n, int32_t const* ilo, int32_t const* ihi, double const* lscale, double const* rscale, int32_t const* m, double* V, int32_t const* ldv, int32_t* info , size_t, size_t );
enum { LAPACK_sggbak_base = 0 };
void sggbak_ ( char const* job, char const* side, int32_t const* n, int32_t const* ilo, int32_t const* ihi, float const* lscale, float const* rscale, int32_t const* m, float* V, int32_t const* ldv, int32_t* info , size_t, size_t );
enum { LAPACK_zggbak_base = 0 };
void zggbak_ ( char const* job, char const* side, int32_t const* n, int32_t const* ilo, int32_t const* ihi, double const* lscale, double const* rscale, int32_t const* m, double _Complex* V, int32_t const* ldv, int32_t* info , size_t, size_t );
enum { LAPACK_cggbal_base = 0 };
void cggbal_ ( char const* job, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, int32_t* ilo, int32_t* ihi, float* lscale, float* rscale, float* work, int32_t* info , size_t );
enum { LAPACK_dggbal_base = 0 };
void dggbal_ ( char const* job, int32_t const* n, double* A, int32_t const* lda, double* B, int32_t const* ldb, int32_t* ilo, int32_t* ihi, double* lscale, double* rscale, double* work, int32_t* info , size_t );
enum { LAPACK_sggbal_base = 0 };
void sggbal_ ( char const* job, int32_t const* n, float* A, int32_t const* lda, float* B, int32_t const* ldb, int32_t* ilo, int32_t* ihi, float* lscale, float* rscale, float* work, int32_t* info , size_t );
enum { LAPACK_zggbal_base = 0 };
void zggbal_ ( char const* job, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, int32_t* ilo, int32_t* ihi, double* lscale, double* rscale, double* work, int32_t* info , size_t );
enum { LAPACK_cgges_base = 0 };
void cgges_ ( char const* jobvsl, char const* jobvsr, char const* sort, LAPACK_C_SELECT2 selctg, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, int32_t* sdim, float _Complex* alpha, float _Complex* beta, float _Complex* VSL, int32_t const* ldvsl, float _Complex* VSR, int32_t const* ldvsr, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dgges_base = 0 };
void dgges_ ( char const* jobvsl, char const* jobvsr, char const* sort, LAPACK_D_SELECT3 selctg, int32_t const* n, double* A, int32_t const* lda, double* B, int32_t const* ldb, int32_t* sdim, double* alphar, double* alphai, double* beta, double* VSL, int32_t const* ldvsl, double* VSR, int32_t const* ldvsr, double* work, int32_t const* lwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sgges_base = 0 };
void sgges_ ( char const* jobvsl, char const* jobvsr, char const* sort, LAPACK_S_SELECT3 selctg, int32_t const* n, float* A, int32_t const* lda, float* B, int32_t const* ldb, int32_t* sdim, float* alphar, float* alphai, float* beta, float* VSL, int32_t const* ldvsl, float* VSR, int32_t const* ldvsr, float* work, int32_t const* lwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zgges_base = 0 };
void zgges_ ( char const* jobvsl, char const* jobvsr, char const* sort, LAPACK_Z_SELECT2 selctg, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, int32_t* sdim, double _Complex* alpha, double _Complex* beta, double _Complex* VSL, int32_t const* ldvsl, double _Complex* VSR, int32_t const* ldvsr, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cgges3_base = 0 };
void cgges3_ ( char const* jobvsl, char const* jobvsr, char const* sort, LAPACK_C_SELECT2 selctg, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, int32_t* sdim, float _Complex* alpha, float _Complex* beta, float _Complex* VSL, int32_t const* ldvsl, float _Complex* VSR, int32_t const* ldvsr, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dgges3_base = 0 };
void dgges3_ ( char const* jobvsl, char const* jobvsr, char const* sort, LAPACK_D_SELECT3 selctg, int32_t const* n, double* A, int32_t const* lda, double* B, int32_t const* ldb, int32_t* sdim, double* alphar, double* alphai, double* beta, double* VSL, int32_t const* ldvsl, double* VSR, int32_t const* ldvsr, double* work, int32_t const* lwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sgges3_base = 0 };
void sgges3_ ( char const* jobvsl, char const* jobvsr, char const* sort, LAPACK_S_SELECT3 selctg, int32_t const* n, float* A, int32_t const* lda, float* B, int32_t const* ldb, int32_t* sdim, float* alphar, float* alphai, float* beta, float* VSL, int32_t const* ldvsl, float* VSR, int32_t const* ldvsr, float* work, int32_t const* lwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zgges3_base = 0 };
void zgges3_ ( char const* jobvsl, char const* jobvsr, char const* sort, LAPACK_Z_SELECT2 selctg, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, int32_t* sdim, double _Complex* alpha, double _Complex* beta, double _Complex* VSL, int32_t const* ldvsl, double _Complex* VSR, int32_t const* ldvsr, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cggesx_base = 0 };
void cggesx_ ( char const* jobvsl, char const* jobvsr, char const* sort, LAPACK_C_SELECT2 selctg, char const* sense, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, int32_t* sdim, float _Complex* alpha, float _Complex* beta, float _Complex* VSL, int32_t const* ldvsl, float _Complex* VSR, int32_t const* ldvsr, float* rconde, float* rcondv, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* iwork, int32_t const* liwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t, size_t );
enum { LAPACK_dggesx_base = 0 };
void dggesx_ ( char const* jobvsl, char const* jobvsr, char const* sort, LAPACK_D_SELECT3 selctg, char const* sense, int32_t const* n, double* A, int32_t const* lda, double* B, int32_t const* ldb, int32_t* sdim, double* alphar, double* alphai, double* beta, double* VSL, int32_t const* ldvsl, double* VSR, int32_t const* ldvsr, double* rconde, double* rcondv, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t, size_t );
enum { LAPACK_sggesx_base = 0 };
void sggesx_ ( char const* jobvsl, char const* jobvsr, char const* sort, LAPACK_S_SELECT3 selctg, char const* sense, int32_t const* n, float* A, int32_t const* lda, float* B, int32_t const* ldb, int32_t* sdim, float* alphar, float* alphai, float* beta, float* VSL, int32_t const* ldvsl, float* VSR, int32_t const* ldvsr, float* rconde, float* rcondv, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t, size_t );
enum { LAPACK_zggesx_base = 0 };
void zggesx_ ( char const* jobvsl, char const* jobvsr, char const* sort, LAPACK_Z_SELECT2 selctg, char const* sense, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, int32_t* sdim, double _Complex* alpha, double _Complex* beta, double _Complex* VSL, int32_t const* ldvsl, double _Complex* VSR, int32_t const* ldvsr, double* rconde, double* rcondv, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* iwork, int32_t const* liwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t, size_t );
enum { LAPACK_cggev_base = 0 };
void cggev_ ( char const* jobvl, char const* jobvr, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float _Complex* alpha, float _Complex* beta, float _Complex* VL, int32_t const* ldvl, float _Complex* VR, int32_t const* ldvr, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_dggev_base = 0 };
void dggev_ ( char const* jobvl, char const* jobvr, int32_t const* n, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* alphar, double* alphai, double* beta, double* VL, int32_t const* ldvl, double* VR, int32_t const* ldvr, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_sggev_base = 0 };
void sggev_ ( char const* jobvl, char const* jobvr, int32_t const* n, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* alphar, float* alphai, float* beta, float* VL, int32_t const* ldvl, float* VR, int32_t const* ldvr, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_zggev_base = 0 };
void zggev_ ( char const* jobvl, char const* jobvr, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double _Complex* alpha, double _Complex* beta, double _Complex* VL, int32_t const* ldvl, double _Complex* VR, int32_t const* ldvr, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_cggev3_base = 0 };
void cggev3_ ( char const* jobvl, char const* jobvr, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float _Complex* alpha, float _Complex* beta, float _Complex* VL, int32_t const* ldvl, float _Complex* VR, int32_t const* ldvr, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_dggev3_base = 0 };
void dggev3_ ( char const* jobvl, char const* jobvr, int32_t const* n, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* alphar, double* alphai, double* beta, double* VL, int32_t const* ldvl, double* VR, int32_t const* ldvr, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_sggev3_base = 0 };
void sggev3_ ( char const* jobvl, char const* jobvr, int32_t const* n, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* alphar, float* alphai, float* beta, float* VL, int32_t const* ldvl, float* VR, int32_t const* ldvr, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_zggev3_base = 0 };
void zggev3_ ( char const* jobvl, char const* jobvr, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double _Complex* alpha, double _Complex* beta, double _Complex* VL, int32_t const* ldvl, double _Complex* VR, int32_t const* ldvr, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_cggevx_base = 0 };
void cggevx_ ( char const* balanc, char const* jobvl, char const* jobvr, char const* sense, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float _Complex* alpha, float _Complex* beta, float _Complex* VL, int32_t const* ldvl, float _Complex* VR, int32_t const* ldvr, int32_t* ilo, int32_t* ihi, float* lscale, float* rscale, float* abnrm, float* bbnrm, float* rconde, float* rcondv, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* iwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t, size_t );
enum { LAPACK_dggevx_base = 0 };
void dggevx_ ( char const* balanc, char const* jobvl, char const* jobvr, char const* sense, int32_t const* n, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* alphar, double* alphai, double* beta, double* VL, int32_t const* ldvl, double* VR, int32_t const* ldvr, int32_t* ilo, int32_t* ihi, double* lscale, double* rscale, double* abnrm, double* bbnrm, double* rconde, double* rcondv, double* work, int32_t const* lwork, int32_t* iwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t, size_t );
enum { LAPACK_sggevx_base = 0 };
void sggevx_ ( char const* balanc, char const* jobvl, char const* jobvr, char const* sense, int32_t const* n, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* alphar, float* alphai, float* beta, float* VL, int32_t const* ldvl, float* VR, int32_t const* ldvr, int32_t* ilo, int32_t* ihi, float* lscale, float* rscale, float* abnrm, float* bbnrm, float* rconde, float* rcondv, float* work, int32_t const* lwork, int32_t* iwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t, size_t );
enum { LAPACK_zggevx_base = 0 };
void zggevx_ ( char const* balanc, char const* jobvl, char const* jobvr, char const* sense, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double _Complex* alpha, double _Complex* beta, double _Complex* VL, int32_t const* ldvl, double _Complex* VR, int32_t const* ldvr, int32_t* ilo, int32_t* ihi, double* lscale, double* rscale, double* abnrm, double* bbnrm, double* rconde, double* rcondv, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* iwork, int32_t* BWORK, int32_t* info , size_t, size_t, size_t, size_t );
enum { LAPACK_cggglm = 0 };
void cggglm_ ( int32_t const* n, int32_t const* m, int32_t const* p, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float _Complex* D, float _Complex* X, float _Complex* Y, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dggglm = 0 };
void dggglm_ ( int32_t const* n, int32_t const* m, int32_t const* p, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* D, double* X, double* Y, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sggglm = 0 };
void sggglm_ ( int32_t const* n, int32_t const* m, int32_t const* p, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* D, float* X, float* Y, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zggglm = 0 };
void zggglm_ ( int32_t const* n, int32_t const* m, int32_t const* p, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double _Complex* D, double _Complex* X, double _Complex* Y, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cgghd3_base = 0 };
void cgghd3_ ( char const* compq, char const* compz, int32_t const* n, int32_t const* ilo, int32_t const* ihi, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float _Complex* Q, int32_t const* ldq, float _Complex* Z, int32_t const* ldz, float _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_dgghd3_base = 0 };
void dgghd3_ ( char const* compq, char const* compz, int32_t const* n, int32_t const* ilo, int32_t const* ihi, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* Q, int32_t const* ldq, double* Z, int32_t const* ldz, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_sgghd3_base = 0 };
void sgghd3_ ( char const* compq, char const* compz, int32_t const* n, int32_t const* ilo, int32_t const* ihi, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* Q, int32_t const* ldq, float* Z, int32_t const* ldz, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_zgghd3_base = 0 };
void zgghd3_ ( char const* compq, char const* compz, int32_t const* n, int32_t const* ilo, int32_t const* ihi, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double _Complex* Q, int32_t const* ldq, double _Complex* Z, int32_t const* ldz, double _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_cgghrd_base = 0 };
void cgghrd_ ( char const* compq, char const* compz, int32_t const* n, int32_t const* ilo, int32_t const* ihi, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float _Complex* Q, int32_t const* ldq, float _Complex* Z, int32_t const* ldz, int32_t* info , size_t, size_t );
enum { LAPACK_dgghrd_base = 0 };
void dgghrd_ ( char const* compq, char const* compz, int32_t const* n, int32_t const* ilo, int32_t const* ihi, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* Q, int32_t const* ldq, double* Z, int32_t const* ldz, int32_t* info , size_t, size_t );
enum { LAPACK_sgghrd_base = 0 };
void sgghrd_ ( char const* compq, char const* compz, int32_t const* n, int32_t const* ilo, int32_t const* ihi, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* Q, int32_t const* ldq, float* Z, int32_t const* ldz, int32_t* info , size_t, size_t );
enum { LAPACK_zgghrd_base = 0 };
void zgghrd_ ( char const* compq, char const* compz, int32_t const* n, int32_t const* ilo, int32_t const* ihi, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double _Complex* Q, int32_t const* ldq, double _Complex* Z, int32_t const* ldz, int32_t* info , size_t, size_t );
enum { LAPACK_cgglse = 0 };
void cgglse_ ( int32_t const* m, int32_t const* n, int32_t const* p, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float _Complex* C, float _Complex* D, float _Complex* X, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dgglse = 0 };
void dgglse_ ( int32_t const* m, int32_t const* n, int32_t const* p, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* C, double* D, double* X, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sgglse = 0 };
void sgglse_ ( int32_t const* m, int32_t const* n, int32_t const* p, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* C, float* D, float* X, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zgglse = 0 };
void zgglse_ ( int32_t const* m, int32_t const* n, int32_t const* p, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double _Complex* C, double _Complex* D, double _Complex* X, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cggqrf = 0 };
void cggqrf_ ( int32_t const* n, int32_t const* m, int32_t const* p, float _Complex* A, int32_t const* lda, float _Complex* taua, float _Complex* B, int32_t const* ldb, float _Complex* taub, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dggqrf = 0 };
void dggqrf_ ( int32_t const* n, int32_t const* m, int32_t const* p, double* A, int32_t const* lda, double* taua, double* B, int32_t const* ldb, double* taub, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sggqrf = 0 };
void sggqrf_ ( int32_t const* n, int32_t const* m, int32_t const* p, float* A, int32_t const* lda, float* taua, float* B, int32_t const* ldb, float* taub, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zggqrf = 0 };
void zggqrf_ ( int32_t const* n, int32_t const* m, int32_t const* p, double _Complex* A, int32_t const* lda, double _Complex* taua, double _Complex* B, int32_t const* ldb, double _Complex* taub, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cggrqf = 0 };
void cggrqf_ ( int32_t const* m, int32_t const* p, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* taua, float _Complex* B, int32_t const* ldb, float _Complex* taub, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dggrqf = 0 };
void dggrqf_ ( int32_t const* m, int32_t const* p, int32_t const* n, double* A, int32_t const* lda, double* taua, double* B, int32_t const* ldb, double* taub, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sggrqf = 0 };
void sggrqf_ ( int32_t const* m, int32_t const* p, int32_t const* n, float* A, int32_t const* lda, float* taua, float* B, int32_t const* ldb, float* taub, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zggrqf = 0 };
void zggrqf_ ( int32_t const* m, int32_t const* p, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* taua, double _Complex* B, int32_t const* ldb, double _Complex* taub, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cggsvd_base = 0 };
int32_t cggsvd_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* n, int32_t const* p, int32_t* k, int32_t* l, float _Complex* a, int32_t const* lda, float _Complex* b, int32_t const* ldb, float* alpha, float* beta, float _Complex* u, int32_t const* ldu, float _Complex* v, int32_t const* ldv, float _Complex* q, int32_t const* ldq, float _Complex* work, float* rwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sggsvd_base = 0 };
int32_t sggsvd_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* n, int32_t const* p, int32_t* k, int32_t* l, float* a, int32_t const* lda, float* b, int32_t const* ldb, float* alpha, float* beta, float* u, int32_t const* ldu, float* v, int32_t const* ldv, float* q, int32_t const* ldq, float* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dggsvd_base = 0 };
int32_t dggsvd_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* n, int32_t const* p, int32_t* k, int32_t* l, double* a, int32_t const* lda, double* b, int32_t const* ldb, double* alpha, double* beta, double* u, int32_t const* ldu, double* v, int32_t const* ldv, double* q, int32_t const* ldq, double* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zggsvd_base = 0 };
int32_t zggsvd_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* n, int32_t const* p, int32_t* k, int32_t* l, double _Complex* a, int32_t const* lda, double _Complex* b, int32_t const* ldb, double* alpha, double* beta, double _Complex* u, int32_t const* ldu, double _Complex* v, int32_t const* ldv, double _Complex* q, int32_t const* ldq, double _Complex* work, double* rwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cggsvd3_base = 0 };
void cggsvd3_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* n, int32_t const* p, int32_t* k, int32_t* l, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float* alpha, float* beta, float _Complex* U, int32_t const* ldu, float _Complex* V, int32_t const* ldv, float _Complex* Q, int32_t const* ldq, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dggsvd3_base = 0 };
void dggsvd3_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* n, int32_t const* p, int32_t* k, int32_t* l, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* alpha, double* beta, double* U, int32_t const* ldu, double* V, int32_t const* ldv, double* Q, int32_t const* ldq, double* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sggsvd3_base = 0 };
void sggsvd3_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* n, int32_t const* p, int32_t* k, int32_t* l, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* alpha, float* beta, float* U, int32_t const* ldu, float* V, int32_t const* ldv, float* Q, int32_t const* ldq, float* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zggsvd3_base = 0 };
void zggsvd3_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* n, int32_t const* p, int32_t* k, int32_t* l, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double* alpha, double* beta, double _Complex* U, int32_t const* ldu, double _Complex* V, int32_t const* ldv, double _Complex* Q, int32_t const* ldq, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sggsvp_base = 0 };
int32_t sggsvp_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* p, int32_t const* n, float* a, int32_t const* lda, float* b, int32_t const* ldb, float* tola, float* tolb, int32_t* k, int32_t* l, float* u, int32_t const* ldu, float* v, int32_t const* ldv, float* q, int32_t const* ldq, int32_t* iwork, float* tau, float* work, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dggsvp_base = 0 };
int32_t dggsvp_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* p, int32_t const* n, double* a, int32_t const* lda, double* b, int32_t const* ldb, double* tola, double* tolb, int32_t* k, int32_t* l, double* u, int32_t const* ldu, double* v, int32_t const* ldv, double* q, int32_t const* ldq, int32_t* iwork, double* tau, double* work, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cggsvp_base = 0 };
int32_t cggsvp_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* p, int32_t const* n, float _Complex* a, int32_t const* lda, float _Complex* b, int32_t const* ldb, float* tola, float* tolb, int32_t* k, int32_t* l, float _Complex* u, int32_t const* ldu, float _Complex* v, int32_t const* ldv, float _Complex* q, int32_t const* ldq, int32_t* iwork, float* rwork, float _Complex* tau, float _Complex* work, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zggsvp_base = 0 };
int32_t zggsvp_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* p, int32_t const* n, double _Complex* a, int32_t const* lda, double _Complex* b, int32_t const* ldb, double* tola, double* tolb, int32_t* k, int32_t* l, double _Complex* u, int32_t const* ldu, double _Complex* v, int32_t const* ldv, double _Complex* q, int32_t const* ldq, int32_t* iwork, double* rwork, double _Complex* tau, double _Complex* work, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cggsvp3_base = 0 };
void cggsvp3_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* p, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float const* tola, float const* tolb, int32_t* k, int32_t* l, float _Complex* U, int32_t const* ldu, float _Complex* V, int32_t const* ldv, float _Complex* Q, int32_t const* ldq, int32_t* iwork, float* rwork, float _Complex* tau, float _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dggsvp3_base = 0 };
void dggsvp3_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* p, int32_t const* n, double* A, int32_t const* lda, double* B, int32_t const* ldb, double const* tola, double const* tolb, int32_t* k, int32_t* l, double* U, int32_t const* ldu, double* V, int32_t const* ldv, double* Q, int32_t const* ldq, int32_t* iwork, double* tau, double* work, int32_t const* lwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sggsvp3_base = 0 };
void sggsvp3_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* p, int32_t const* n, float* A, int32_t const* lda, float* B, int32_t const* ldb, float const* tola, float const* tolb, int32_t* k, int32_t* l, float* U, int32_t const* ldu, float* V, int32_t const* ldv, float* Q, int32_t const* ldq, int32_t* iwork, float* tau, float* work, int32_t const* lwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zggsvp3_base = 0 };
void zggsvp3_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* p, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double const* tola, double const* tolb, int32_t* k, int32_t* l, double _Complex* U, int32_t const* ldu, double _Complex* V, int32_t const* ldv, double _Complex* Q, int32_t const* ldq, int32_t* iwork, double* rwork, double _Complex* tau, double _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cgtcon_base = 0 };
void cgtcon_ ( char const* norm, int32_t const* n, float _Complex const* DL, float _Complex const* D, float _Complex const* DU, float _Complex const* DU2, int32_t const* ipiv, float const* anorm, float* rcond, float _Complex* work, int32_t* info , size_t );
enum { LAPACK_dgtcon_base = 0 };
void dgtcon_ ( char const* norm, int32_t const* n, double const* DL, double const* D, double const* DU, double const* DU2, int32_t const* ipiv, double const* anorm, double* rcond, double* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_sgtcon_base = 0 };
void sgtcon_ ( char const* norm, int32_t const* n, float const* DL, float const* D, float const* DU, float const* DU2, int32_t const* ipiv, float const* anorm, float* rcond, float* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_zgtcon_base = 0 };
void zgtcon_ ( char const* norm, int32_t const* n, double _Complex const* DL, double _Complex const* D, double _Complex const* DU, double _Complex const* DU2, int32_t const* ipiv, double const* anorm, double* rcond, double _Complex* work, int32_t* info , size_t );
enum { LAPACK_cgtrfs_base = 0 };
void cgtrfs_ ( char const* trans, int32_t const* n, int32_t const* nrhs, float _Complex const* DL, float _Complex const* D, float _Complex const* DU, float _Complex const* DLF, float _Complex const* DF, float _Complex const* DUF, float _Complex const* DU2, int32_t const* ipiv, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t );
enum { LAPACK_dgtrfs_base = 0 };
void dgtrfs_ ( char const* trans, int32_t const* n, int32_t const* nrhs, double const* DL, double const* D, double const* DU, double const* DLF, double const* DF, double const* DUF, double const* DU2, int32_t const* ipiv, double const* B, int32_t const* ldb, double* X, int32_t const* ldx, double* ferr, double* berr, double* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_sgtrfs_base = 0 };
void sgtrfs_ ( char const* trans, int32_t const* n, int32_t const* nrhs, float const* DL, float const* D, float const* DU, float const* DLF, float const* DF, float const* DUF, float const* DU2, int32_t const* ipiv, float const* B, int32_t const* ldb, float* X, int32_t const* ldx, float* ferr, float* berr, float* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_zgtrfs_base = 0 };
void zgtrfs_ ( char const* trans, int32_t const* n, int32_t const* nrhs, double _Complex const* DL, double _Complex const* D, double _Complex const* DU, double _Complex const* DLF, double _Complex const* DF, double _Complex const* DUF, double _Complex const* DU2, int32_t const* ipiv, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t );
enum { LAPACK_cgtsv = 0 };
void cgtsv_ ( int32_t const* n, int32_t const* nrhs, float _Complex* DL, float _Complex* D, float _Complex* DU, float _Complex* B, int32_t const* ldb, int32_t* info );
enum { LAPACK_dgtsv = 0 };
void dgtsv_ ( int32_t const* n, int32_t const* nrhs, double* DL, double* D, double* DU, double* B, int32_t const* ldb, int32_t* info );
enum { LAPACK_sgtsv = 0 };
void sgtsv_ ( int32_t const* n, int32_t const* nrhs, float* DL, float* D, float* DU, float* B, int32_t const* ldb, int32_t* info );
enum { LAPACK_zgtsv = 0 };
void zgtsv_ ( int32_t const* n, int32_t const* nrhs, double _Complex* DL, double _Complex* D, double _Complex* DU, double _Complex* B, int32_t const* ldb, int32_t* info );
enum { LAPACK_cgtsvx_base = 0 };
void cgtsvx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* nrhs, float _Complex const* DL, float _Complex const* D, float _Complex const* DU, float _Complex* DLF, float _Complex* DF, float _Complex* DUF, float _Complex* DU2, int32_t* ipiv, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_dgtsvx_base = 0 };
void dgtsvx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* nrhs, double const* DL, double const* D, double const* DU, double* DLF, double* DF, double* DUF, double* DU2, int32_t* ipiv, double const* B, int32_t const* ldb, double* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double* work, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_sgtsvx_base = 0 };
void sgtsvx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* nrhs, float const* DL, float const* D, float const* DU, float* DLF, float* DF, float* DUF, float* DU2, int32_t* ipiv, float const* B, int32_t const* ldb, float* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float* work, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_zgtsvx_base = 0 };
void zgtsvx_ ( char const* fact, char const* trans, int32_t const* n, int32_t const* nrhs, double _Complex const* DL, double _Complex const* D, double _Complex const* DU, double _Complex* DLF, double _Complex* DF, double _Complex* DUF, double _Complex* DU2, int32_t* ipiv, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_cgttrf = 0 };
void cgttrf_ ( int32_t const* n, float _Complex* DL, float _Complex* D, float _Complex* DU, float _Complex* DU2, int32_t* ipiv, int32_t* info );
enum { LAPACK_dgttrf = 0 };
void dgttrf_ ( int32_t const* n, double* DL, double* D, double* DU, double* DU2, int32_t* ipiv, int32_t* info );
enum { LAPACK_sgttrf = 0 };
void sgttrf_ ( int32_t const* n, float* DL, float* D, float* DU, float* DU2, int32_t* ipiv, int32_t* info );
enum { LAPACK_zgttrf = 0 };
void zgttrf_ ( int32_t const* n, double _Complex* DL, double _Complex* D, double _Complex* DU, double _Complex* DU2, int32_t* ipiv, int32_t* info );
enum { LAPACK_cgttrs_base = 0 };
void cgttrs_ ( char const* trans, int32_t const* n, int32_t const* nrhs, float _Complex const* DL, float _Complex const* D, float _Complex const* DU, float _Complex const* DU2, int32_t const* ipiv, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dgttrs_base = 0 };
void dgttrs_ ( char const* trans, int32_t const* n, int32_t const* nrhs, double const* DL, double const* D, double const* DU, double const* DU2, int32_t const* ipiv, double* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_sgttrs_base = 0 };
void sgttrs_ ( char const* trans, int32_t const* n, int32_t const* nrhs, float const* DL, float const* D, float const* DU, float const* DU2, int32_t const* ipiv, float* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zgttrs_base = 0 };
void zgttrs_ ( char const* trans, int32_t const* n, int32_t const* nrhs, double _Complex const* DL, double _Complex const* D, double _Complex const* DU, double _Complex const* DU2, int32_t const* ipiv, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_chbev_base = 0 };
void chbev_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* kd, float _Complex* AB, int32_t const* ldab, float* W, float _Complex* Z, int32_t const* ldz, float _Complex* work, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_zhbev_base = 0 };
void zhbev_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* kd, double _Complex* AB, int32_t const* ldab, double* W, double _Complex* Z, int32_t const* ldz, double _Complex* work, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_chbev_2stage_base = 0 };
void chbev_2stage_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* kd, float _Complex* AB, int32_t const* ldab, float* W, float _Complex* Z, int32_t const* ldz, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_zhbev_2stage_base = 0 };
void zhbev_2stage_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* kd, double _Complex* AB, int32_t const* ldab, double* W, double _Complex* Z, int32_t const* ldz, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_chbevd_base = 0 };
void chbevd_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* kd, float _Complex* AB, int32_t const* ldab, float* W, float _Complex* Z, int32_t const* ldz, float _Complex* work, int32_t const* lwork, float* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_zhbevd_base = 0 };
void zhbevd_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* kd, double _Complex* AB, int32_t const* ldab, double* W, double _Complex* Z, int32_t const* ldz, double _Complex* work, int32_t const* lwork, double* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_chbevd_2stage_base = 0 };
void chbevd_2stage_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* kd, float _Complex* AB, int32_t const* ldab, float* W, float _Complex* Z, int32_t const* ldz, float _Complex* work, int32_t const* lwork, float* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_zhbevd_2stage_base = 0 };
void zhbevd_2stage_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* kd, double _Complex* AB, int32_t const* ldab, double* W, double _Complex* Z, int32_t const* ldz, double _Complex* work, int32_t const* lwork, double* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_chbevx_base = 0 };
void chbevx_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, int32_t const* kd, float _Complex* AB, int32_t const* ldab, float _Complex* Q, int32_t const* ldq, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float _Complex* Z, int32_t const* ldz, float _Complex* work, float* rwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zhbevx_base = 0 };
void zhbevx_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, int32_t const* kd, double _Complex* AB, int32_t const* ldab, double _Complex* Q, int32_t const* ldq, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double _Complex* Z, int32_t const* ldz, double _Complex* work, double* rwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_chbevx_2stage_base = 0 };
void chbevx_2stage_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, int32_t const* kd, float _Complex* AB, int32_t const* ldab, float _Complex* Q, int32_t const* ldq, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float _Complex* Z, int32_t const* ldz, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zhbevx_2stage_base = 0 };
void zhbevx_2stage_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, int32_t const* kd, double _Complex* AB, int32_t const* ldab, double _Complex* Q, int32_t const* ldq, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double _Complex* Z, int32_t const* ldz, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_chbgst_base = 0 };
void chbgst_ ( char const* vect, char const* uplo, int32_t const* n, int32_t const* ka, int32_t const* kb, float _Complex* AB, int32_t const* ldab, float _Complex const* BB, int32_t const* ldbb, float _Complex* X, int32_t const* ldx, float _Complex* work, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_zhbgst_base = 0 };
void zhbgst_ ( char const* vect, char const* uplo, int32_t const* n, int32_t const* ka, int32_t const* kb, double _Complex* AB, int32_t const* ldab, double _Complex const* BB, int32_t const* ldbb, double _Complex* X, int32_t const* ldx, double _Complex* work, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_chbgv_base = 0 };
void chbgv_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* ka, int32_t const* kb, float _Complex* AB, int32_t const* ldab, float _Complex* BB, int32_t const* ldbb, float* W, float _Complex* Z, int32_t const* ldz, float _Complex* work, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_zhbgv_base = 0 };
void zhbgv_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* ka, int32_t const* kb, double _Complex* AB, int32_t const* ldab, double _Complex* BB, int32_t const* ldbb, double* W, double _Complex* Z, int32_t const* ldz, double _Complex* work, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_chbgvd_base = 0 };
void chbgvd_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* ka, int32_t const* kb, float _Complex* AB, int32_t const* ldab, float _Complex* BB, int32_t const* ldbb, float* W, float _Complex* Z, int32_t const* ldz, float _Complex* work, int32_t const* lwork, float* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_zhbgvd_base = 0 };
void zhbgvd_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* ka, int32_t const* kb, double _Complex* AB, int32_t const* ldab, double _Complex* BB, int32_t const* ldbb, double* W, double _Complex* Z, int32_t const* ldz, double _Complex* work, int32_t const* lwork, double* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_chbgvx_base = 0 };
void chbgvx_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, int32_t const* ka, int32_t const* kb, float _Complex* AB, int32_t const* ldab, float _Complex* BB, int32_t const* ldbb, float _Complex* Q, int32_t const* ldq, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float _Complex* Z, int32_t const* ldz, float _Complex* work, float* rwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zhbgvx_base = 0 };
void zhbgvx_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, int32_t const* ka, int32_t const* kb, double _Complex* AB, int32_t const* ldab, double _Complex* BB, int32_t const* ldbb, double _Complex* Q, int32_t const* ldq, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double _Complex* Z, int32_t const* ldz, double _Complex* work, double* rwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_chbtrd_base = 0 };
void chbtrd_ ( char const* vect, char const* uplo, int32_t const* n, int32_t const* kd, float _Complex* AB, int32_t const* ldab, float* D, float* E, float _Complex* Q, int32_t const* ldq, float _Complex* work, int32_t* info , size_t, size_t );
enum { LAPACK_zhbtrd_base = 0 };
void zhbtrd_ ( char const* vect, char const* uplo, int32_t const* n, int32_t const* kd, double _Complex* AB, int32_t const* ldab, double* D, double* E, double _Complex* Q, int32_t const* ldq, double _Complex* work, int32_t* info , size_t, size_t );
enum { LAPACK_checon_base = 0 };
void checon_ ( char const* uplo, int32_t const* n, float _Complex const* A, int32_t const* lda, int32_t const* ipiv, float const* anorm, float* rcond, float _Complex* work, int32_t* info , size_t );
enum { LAPACK_zhecon_base = 0 };
void zhecon_ ( char const* uplo, int32_t const* n, double _Complex const* A, int32_t const* lda, int32_t const* ipiv, double const* anorm, double* rcond, double _Complex* work, int32_t* info , size_t );
enum { LAPACK_checon_3_base = 0 };
void checon_3_ ( char const* uplo, int32_t const* n, float _Complex const* A, int32_t const* lda, float _Complex const* E, int32_t const* ipiv, float const* anorm, float* rcond, float _Complex* work, int32_t* info , size_t );
enum { LAPACK_zhecon_3_base = 0 };
void zhecon_3_ ( char const* uplo, int32_t const* n, double _Complex const* A, int32_t const* lda, double _Complex const* E, int32_t const* ipiv, double const* anorm, double* rcond, double _Complex* work, int32_t* info , size_t );
enum { LAPACK_cheequb_base = 0 };
void cheequb_ ( char const* uplo, int32_t const* n, float _Complex const* A, int32_t const* lda, float* S, float* scond, float* amax, float _Complex* work, int32_t* info , size_t );
enum { LAPACK_zheequb_base = 0 };
void zheequb_ ( char const* uplo, int32_t const* n, double _Complex const* A, int32_t const* lda, double* S, double* scond, double* amax, double _Complex* work, int32_t* info , size_t );
enum { LAPACK_cheev_base = 0 };
void cheev_ ( char const* jobz, char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float* W, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_zheev_base = 0 };
void zheev_ ( char const* jobz, char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double* W, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_cheev_2stage_base = 0 };
void cheev_2stage_ ( char const* jobz, char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float* W, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_zheev_2stage_base = 0 };
void zheev_2stage_ ( char const* jobz, char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double* W, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_cheevd_base = 0 };
void cheevd_ ( char const* jobz, char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float* W, float _Complex* work, int32_t const* lwork, float* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_zheevd_base = 0 };
void zheevd_ ( char const* jobz, char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double* W, double _Complex* work, int32_t const* lwork, double* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_cheevd_2stage_base = 0 };
void cheevd_2stage_ ( char const* jobz, char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float* W, float _Complex* work, int32_t const* lwork, float* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_zheevd_2stage_base = 0 };
void zheevd_2stage_ ( char const* jobz, char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double* W, double _Complex* work, int32_t const* lwork, double* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_cheevr_base = 0 };
void cheevr_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float _Complex* Z, int32_t const* ldz, int32_t* ISUPPZ, float _Complex* work, int32_t const* lwork, float* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zheevr_base = 0 };
void zheevr_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double _Complex* Z, int32_t const* ldz, int32_t* ISUPPZ, double _Complex* work, int32_t const* lwork, double* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cheevr_2stage_base = 0 };
void cheevr_2stage_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float _Complex* Z, int32_t const* ldz, int32_t* ISUPPZ, float _Complex* work, int32_t const* lwork, float* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zheevr_2stage_base = 0 };
void zheevr_2stage_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double _Complex* Z, int32_t const* ldz, int32_t* ISUPPZ, double _Complex* work, int32_t const* lwork, double* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cheevx_base = 0 };
void cheevx_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float _Complex* Z, int32_t const* ldz, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zheevx_base = 0 };
void zheevx_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double _Complex* Z, int32_t const* ldz, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cheevx_2stage_base = 0 };
void cheevx_2stage_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float _Complex* Z, int32_t const* ldz, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zheevx_2stage_base = 0 };
void zheevx_2stage_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double _Complex* Z, int32_t const* ldz, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_chegst_base = 0 };
void chegst_ ( int32_t const* itype, char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, const float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zhegst_base = 0 };
void zhegst_ ( int32_t const* itype, char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, const double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_chegv_base = 0 };
void chegv_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float* W, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_zhegv_base = 0 };
void zhegv_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double* W, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_chegv_2stage_base = 0 };
void chegv_2stage_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float* W, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_zhegv_2stage_base = 0 };
void zhegv_2stage_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double* W, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_chegvd_base = 0 };
void chegvd_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float* W, float _Complex* work, int32_t const* lwork, float* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_zhegvd_base = 0 };
void zhegvd_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double* W, double _Complex* work, int32_t const* lwork, double* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_chegvx_base = 0 };
void chegvx_ ( int32_t const* itype, char const* jobz, char const* range, char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float _Complex* Z, int32_t const* ldz, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zhegvx_base = 0 };
void zhegvx_ ( int32_t const* itype, char const* jobz, char const* range, char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double _Complex* Z, int32_t const* ldz, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cherfs_base = 0 };
void cherfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, float _Complex const* AF, int32_t const* ldaf, int32_t const* ipiv, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t );
enum { LAPACK_zherfs_base = 0 };
void zherfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, double _Complex const* AF, int32_t const* ldaf, int32_t const* ipiv, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t );
enum { LAPACK_cherfsx_base = 0 };
void cherfsx_ ( char const* uplo, char const* equed, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, float _Complex const* AF, int32_t const* ldaf, int32_t const* ipiv, const float* S, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* berr, int32_t const* n_err_bnds, float* err_bnds_norm, float* err_bnds_comp, int32_t const* nparams, float* params, float _Complex* work, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_zherfsx_base = 0 };
void zherfsx_ ( char const* uplo, char const* equed, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, double _Complex const* AF, int32_t const* ldaf, int32_t const* ipiv, const double* S, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* berr, int32_t const* n_err_bnds, double* err_bnds_norm, double* err_bnds_comp, int32_t const* nparams, double* params, double _Complex* work, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_chesv_base = 0 };
void chesv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, int32_t* ipiv, float _Complex* B, int32_t const* ldb, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zhesv_base = 0 };
void zhesv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, int32_t* ipiv, double _Complex* B, int32_t const* ldb, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_chesv_aa_base = 0 };
void chesv_aa_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, int32_t* ipiv, float _Complex* B, int32_t const* ldb, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zhesv_aa_base = 0 };
void zhesv_aa_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, int32_t* ipiv, double _Complex* B, int32_t const* ldb, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_chesv_aa_2stage_base = 0 };
void chesv_aa_2stage_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, float _Complex* TB, int32_t const* ltb, int32_t* ipiv, int32_t* ipiv2, float _Complex* B, int32_t const* ldb, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zhesv_aa_2stage_base = 0 };
void zhesv_aa_2stage_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, double _Complex* TB, int32_t const* ltb, int32_t* ipiv, int32_t* ipiv2, double _Complex* B, int32_t const* ldb, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_chesv_rk_base = 0 };
void chesv_rk_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, float _Complex* E, int32_t* ipiv, float _Complex* B, int32_t const* ldb, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zhesv_rk_base = 0 };
void zhesv_rk_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, double _Complex* E, int32_t* ipiv, double _Complex* B, int32_t const* ldb, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_chesv_rook_base = 0 };
void chesv_rook_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, int32_t* ipiv, float _Complex* B, int32_t const* ldb, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zhesv_rook_base = 0 };
void zhesv_rook_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, int32_t* ipiv, double _Complex* B, int32_t const* ldb, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_chesvx_base = 0 };
void chesvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, float _Complex* AF, int32_t const* ldaf, int32_t* ipiv, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_zhesvx_base = 0 };
void zhesvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, double _Complex* AF, int32_t const* ldaf, int32_t* ipiv, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_chesvxx_base = 0 };
void chesvxx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, float _Complex* AF, int32_t const* ldaf, int32_t* ipiv, char* equed, float* S, float _Complex* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* rpvgrw, float* berr, int32_t const* n_err_bnds, float* err_bnds_norm, float* err_bnds_comp, int32_t const* nparams, float* params, float _Complex* work, float* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zhesvxx_base = 0 };
void zhesvxx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, double _Complex* AF, int32_t const* ldaf, int32_t* ipiv, char* equed, double* S, double _Complex* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* rpvgrw, double* berr, int32_t const* n_err_bnds, double* err_bnds_norm, double* err_bnds_comp, int32_t const* nparams, double* params, double _Complex* work, double* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cheswapr_base = 0 };
void cheswapr_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t const* i1, int32_t const* i2 , size_t );
enum { LAPACK_zheswapr_base = 0 };
void zheswapr_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t const* i1, int32_t const* i2 , size_t );
enum { LAPACK_chetrd_base = 0 };
void chetrd_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float* D, float* E, float _Complex* tau, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zhetrd_base = 0 };
void zhetrd_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double* D, double* E, double _Complex* tau, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_chetrd_2stage_base = 0 };
void chetrd_2stage_ ( char const* vect, char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float* D, float* E, float _Complex* tau, float _Complex* HOUS2, int32_t const* lhous2, float _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_zhetrd_2stage_base = 0 };
void zhetrd_2stage_ ( char const* vect, char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double* D, double* E, double _Complex* tau, double _Complex* HOUS2, int32_t const* lhous2, double _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_chetrf_base = 0 };
void chetrf_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* ipiv, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zhetrf_base = 0 };
void zhetrf_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* ipiv, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_chetrf_aa_base = 0 };
void chetrf_aa_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* ipiv, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zhetrf_aa_base = 0 };
void zhetrf_aa_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* ipiv, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_chetrf_aa_2stage_base = 0 };
void chetrf_aa_2stage_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* TB, int32_t const* ltb, int32_t* ipiv, int32_t* ipiv2, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zhetrf_aa_2stage_base = 0 };
void zhetrf_aa_2stage_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* TB, int32_t const* ltb, int32_t* ipiv, int32_t* ipiv2, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_chetrf_rk_base = 0 };
void chetrf_rk_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* E, int32_t* ipiv, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zhetrf_rk_base = 0 };
void zhetrf_rk_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* E, int32_t* ipiv, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_chetrf_rook_base = 0 };
void chetrf_rook_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* ipiv, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zhetrf_rook_base = 0 };
void zhetrf_rook_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* ipiv, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_chetri_base = 0 };
void chetri_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t const* ipiv, float _Complex* work, int32_t* info , size_t );
enum { LAPACK_zhetri_base = 0 };
void zhetri_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t const* ipiv, double _Complex* work, int32_t* info , size_t );
enum { LAPACK_chetri2_base = 0 };
void chetri2_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t const* ipiv, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zhetri2_base = 0 };
void zhetri2_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t const* ipiv, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_chetri2x_base = 0 };
void chetri2x_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t const* ipiv, float _Complex* work, int32_t const* nb, int32_t* info , size_t );
enum { LAPACK_zhetri2x_base = 0 };
void zhetri2x_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t const* ipiv, double _Complex* work, int32_t const* nb, int32_t* info , size_t );
enum { LAPACK_chetri_3_base = 0 };
void chetri_3_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex const* E, int32_t const* ipiv, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zhetri_3_base = 0 };
void zhetri_3_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex const* E, int32_t const* ipiv, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_chetrs_base = 0 };
void chetrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, int32_t const* ipiv, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zhetrs_base = 0 };
void zhetrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, int32_t const* ipiv, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_chetrs2_base = 0 };
void chetrs2_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, int32_t const* ipiv, float _Complex* B, int32_t const* ldb, float _Complex* work, int32_t* info , size_t );
enum { LAPACK_zhetrs2_base = 0 };
void zhetrs2_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, int32_t const* ipiv, double _Complex* B, int32_t const* ldb, double _Complex* work, int32_t* info , size_t );
enum { LAPACK_chetrs_3_base = 0 };
void chetrs_3_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, float _Complex const* E, int32_t const* ipiv, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zhetrs_3_base = 0 };
void zhetrs_3_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, double _Complex const* E, int32_t const* ipiv, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_chetrs_aa_base = 0 };
void chetrs_aa_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, int32_t const* ipiv, float _Complex* B, int32_t const* ldb, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zhetrs_aa_base = 0 };
void zhetrs_aa_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, int32_t const* ipiv, double _Complex* B, int32_t const* ldb, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_chetrs_aa_2stage_base = 0 };
void chetrs_aa_2stage_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, float _Complex* TB, int32_t const* ltb, int32_t const* ipiv, int32_t const* ipiv2, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zhetrs_aa_2stage_base = 0 };
void zhetrs_aa_2stage_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, double _Complex* TB, int32_t const* ltb, int32_t const* ipiv, int32_t const* ipiv2, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_chetrs_rook_base = 0 };
void chetrs_rook_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, int32_t const* ipiv, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zhetrs_rook_base = 0 };
void zhetrs_rook_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, int32_t const* ipiv, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_chfrk_base = 0 };
void chfrk_ ( char const* transr, char const* uplo, char const* trans, int32_t const* n, int32_t const* k, float const* alpha, float _Complex const* A, int32_t const* lda, float const* beta, float _Complex* C , size_t, size_t, size_t );
enum { LAPACK_zhfrk_base = 0 };
void zhfrk_ ( char const* transr, char const* uplo, char const* trans, int32_t const* n, int32_t const* k, double const* alpha, double _Complex const* A, int32_t const* lda, double const* beta, double _Complex* C , size_t, size_t, size_t );
enum { LAPACK_chgeqz_base = 0 };
void chgeqz_ ( char const* job, char const* compq, char const* compz, int32_t const* n, int32_t const* ilo, int32_t const* ihi, float _Complex* H, int32_t const* ldh, float _Complex* T, int32_t const* ldt, float _Complex* alpha, float _Complex* beta, float _Complex* Q, int32_t const* ldq, float _Complex* Z, int32_t const* ldz, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dhgeqz_base = 0 };
void dhgeqz_ ( char const* job, char const* compq, char const* compz, int32_t const* n, int32_t const* ilo, int32_t const* ihi, double* H, int32_t const* ldh, double* T, int32_t const* ldt, double* alphar, double* alphai, double* beta, double* Q, int32_t const* ldq, double* Z, int32_t const* ldz, double* work, int32_t const* lwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_shgeqz_base = 0 };
void shgeqz_ ( char const* job, char const* compq, char const* compz, int32_t const* n, int32_t const* ilo, int32_t const* ihi, float* H, int32_t const* ldh, float* T, int32_t const* ldt, float* alphar, float* alphai, float* beta, float* Q, int32_t const* ldq, float* Z, int32_t const* ldz, float* work, int32_t const* lwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zhgeqz_base = 0 };
void zhgeqz_ ( char const* job, char const* compq, char const* compz, int32_t const* n, int32_t const* ilo, int32_t const* ihi, double _Complex* H, int32_t const* ldh, double _Complex* T, int32_t const* ldt, double _Complex* alpha, double _Complex* beta, double _Complex* Q, int32_t const* ldq, double _Complex* Z, int32_t const* ldz, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_chpcon_base = 0 };
void chpcon_ ( char const* uplo, int32_t const* n, float _Complex const* AP, int32_t const* ipiv, float const* anorm, float* rcond, float _Complex* work, int32_t* info , size_t );
enum { LAPACK_zhpcon_base = 0 };
void zhpcon_ ( char const* uplo, int32_t const* n, double _Complex const* AP, int32_t const* ipiv, double const* anorm, double* rcond, double _Complex* work, int32_t* info , size_t );
enum { LAPACK_chpev_base = 0 };
void chpev_ ( char const* jobz, char const* uplo, int32_t const* n, float _Complex* AP, float* W, float _Complex* Z, int32_t const* ldz, float _Complex* work, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_zhpev_base = 0 };
void zhpev_ ( char const* jobz, char const* uplo, int32_t const* n, double _Complex* AP, double* W, double _Complex* Z, int32_t const* ldz, double _Complex* work, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_chpevd_base = 0 };
void chpevd_ ( char const* jobz, char const* uplo, int32_t const* n, float _Complex* AP, float* W, float _Complex* Z, int32_t const* ldz, float _Complex* work, int32_t const* lwork, float* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_zhpevd_base = 0 };
void zhpevd_ ( char const* jobz, char const* uplo, int32_t const* n, double _Complex* AP, double* W, double _Complex* Z, int32_t const* ldz, double _Complex* work, int32_t const* lwork, double* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_chpevx_base = 0 };
void chpevx_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, float _Complex* AP, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float _Complex* Z, int32_t const* ldz, float _Complex* work, float* rwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zhpevx_base = 0 };
void zhpevx_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, double _Complex* AP, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double _Complex* Z, int32_t const* ldz, double _Complex* work, double* rwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_chpgst_base = 0 };
void chpgst_ ( int32_t const* itype, char const* uplo, int32_t const* n, float _Complex* AP, float _Complex const* BP, int32_t* info , size_t );
enum { LAPACK_zhpgst_base = 0 };
void zhpgst_ ( int32_t const* itype, char const* uplo, int32_t const* n, double _Complex* AP, double _Complex const* BP, int32_t* info , size_t );
enum { LAPACK_chpgv_base = 0 };
void chpgv_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, float _Complex* AP, float _Complex* BP, float* W, float _Complex* Z, int32_t const* ldz, float _Complex* work, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_zhpgv_base = 0 };
void zhpgv_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, double _Complex* AP, double _Complex* BP, double* W, double _Complex* Z, int32_t const* ldz, double _Complex* work, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_chpgvd_base = 0 };
void chpgvd_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, float _Complex* AP, float _Complex* BP, float* W, float _Complex* Z, int32_t const* ldz, float _Complex* work, int32_t const* lwork, float* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_zhpgvd_base = 0 };
void zhpgvd_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, double _Complex* AP, double _Complex* BP, double* W, double _Complex* Z, int32_t const* ldz, double _Complex* work, int32_t const* lwork, double* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_chpgvx_base = 0 };
void chpgvx_ ( int32_t const* itype, char const* jobz, char const* range, char const* uplo, int32_t const* n, float _Complex* AP, float _Complex* BP, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float _Complex* Z, int32_t const* ldz, float _Complex* work, float* rwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zhpgvx_base = 0 };
void zhpgvx_ ( int32_t const* itype, char const* jobz, char const* range, char const* uplo, int32_t const* n, double _Complex* AP, double _Complex* BP, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double _Complex* Z, int32_t const* ldz, double _Complex* work, double* rwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_chprfs_base = 0 };
void chprfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* AP, float _Complex const* AFP, int32_t const* ipiv, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t );
enum { LAPACK_zhprfs_base = 0 };
void zhprfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* AP, double _Complex const* AFP, int32_t const* ipiv, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t );
enum { LAPACK_chpsv_base = 0 };
void chpsv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex* AP, int32_t* ipiv, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zhpsv_base = 0 };
void zhpsv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* AP, int32_t* ipiv, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_chpsvx_base = 0 };
void chpsvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* AP, float _Complex* AFP, int32_t* ipiv, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_zhpsvx_base = 0 };
void zhpsvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* AP, double _Complex* AFP, int32_t* ipiv, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_chptrd_base = 0 };
void chptrd_ ( char const* uplo, int32_t const* n, float _Complex* AP, float* D, float* E, float _Complex* tau, int32_t* info , size_t );
enum { LAPACK_zhptrd_base = 0 };
void zhptrd_ ( char const* uplo, int32_t const* n, double _Complex* AP, double* D, double* E, double _Complex* tau, int32_t* info , size_t );
enum { LAPACK_chptrf_base = 0 };
void chptrf_ ( char const* uplo, int32_t const* n, float _Complex* AP, int32_t* ipiv, int32_t* info , size_t );
enum { LAPACK_zhptrf_base = 0 };
void zhptrf_ ( char const* uplo, int32_t const* n, double _Complex* AP, int32_t* ipiv, int32_t* info , size_t );
enum { LAPACK_chptri_base = 0 };
void chptri_ ( char const* uplo, int32_t const* n, float _Complex* AP, int32_t const* ipiv, float _Complex* work, int32_t* info , size_t );
enum { LAPACK_zhptri_base = 0 };
void zhptri_ ( char const* uplo, int32_t const* n, double _Complex* AP, int32_t const* ipiv, double _Complex* work, int32_t* info , size_t );
enum { LAPACK_chptrs_base = 0 };
void chptrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* AP, int32_t const* ipiv, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zhptrs_base = 0 };
void zhptrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* AP, int32_t const* ipiv, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_chsein_base = 0 };
void chsein_ ( char const* side, char const* eigsrc, char const* initv, int32_t const* select, int32_t const* n, float _Complex const* H, int32_t const* ldh, float _Complex* W, float _Complex* VL, int32_t const* ldvl, float _Complex* VR, int32_t const* ldvr, int32_t const* mm, int32_t* m, float _Complex* work, float* rwork, int32_t* IFAILL, int32_t* IFAILR, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dhsein_base = 0 };
void dhsein_ ( char const* side, char const* eigsrc, char const* initv, int32_t* select, int32_t const* n, double const* H, int32_t const* ldh, double* WR, double const* WI, double* VL, int32_t const* ldvl, double* VR, int32_t const* ldvr, int32_t const* mm, int32_t* m, double* work, int32_t* IFAILL, int32_t* IFAILR, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_shsein_base = 0 };
void shsein_ ( char const* side, char const* eigsrc, char const* initv, int32_t* select, int32_t const* n, float const* H, int32_t const* ldh, float* WR, float const* WI, float* VL, int32_t const* ldvl, float* VR, int32_t const* ldvr, int32_t const* mm, int32_t* m, float* work, int32_t* IFAILL, int32_t* IFAILR, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zhsein_base = 0 };
void zhsein_ ( char const* side, char const* eigsrc, char const* initv, int32_t const* select, int32_t const* n, double _Complex const* H, int32_t const* ldh, double _Complex* W, double _Complex* VL, int32_t const* ldvl, double _Complex* VR, int32_t const* ldvr, int32_t const* mm, int32_t* m, double _Complex* work, double* rwork, int32_t* IFAILL, int32_t* IFAILR, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_chseqr_base = 0 };
void chseqr_ ( char const* job, char const* compz, int32_t const* n, int32_t const* ilo, int32_t const* ihi, float _Complex* H, int32_t const* ldh, float _Complex* W, float _Complex* Z, int32_t const* ldz, float _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_dhseqr_base = 0 };
void dhseqr_ ( char const* job, char const* compz, int32_t const* n, int32_t const* ilo, int32_t const* ihi, double* H, int32_t const* ldh, double* WR, double* WI, double* Z, int32_t const* ldz, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_shseqr_base = 0 };
void shseqr_ ( char const* job, char const* compz, int32_t const* n, int32_t const* ilo, int32_t const* ihi, float* H, int32_t const* ldh, float* WR, float* WI, float* Z, int32_t const* ldz, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_zhseqr_base = 0 };
void zhseqr_ ( char const* job, char const* compz, int32_t const* n, int32_t const* ilo, int32_t const* ihi, double _Complex* H, int32_t const* ldh, double _Complex* W, double _Complex* Z, int32_t const* ldz, double _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_clacgv = 0 };
void clacgv_ ( int32_t const* n, float _Complex* X, int32_t const* incx );
enum { LAPACK_zlacgv = 0 };
void zlacgv_ ( int32_t const* n, double _Complex* X, int32_t const* incx );
enum { LAPACK_clacn2 = 0 };
void clacn2_ ( int32_t const* n, float _Complex* V, float _Complex* X, float* est, int32_t* kase, int32_t* ISAVE );
enum { LAPACK_dlacn2 = 0 };
void dlacn2_ ( int32_t const* n, double* V, double* X, int32_t* ISGN, double* est, int32_t* kase, int32_t* ISAVE );
enum { LAPACK_slacn2 = 0 };
void slacn2_ ( int32_t const* n, float* V, float* X, int32_t* ISGN, float* est, int32_t* kase, int32_t* ISAVE );
enum { LAPACK_zlacn2 = 0 };
void zlacn2_ ( int32_t const* n, double _Complex* V, double _Complex* X, double* est, int32_t* kase, int32_t* ISAVE );
enum { LAPACK_clacp2_base = 0 };
void clacp2_ ( char const* uplo, int32_t const* m, int32_t const* n, float const* A, int32_t const* lda, float _Complex* B, int32_t const* ldb , size_t );
enum { LAPACK_zlacp2_base = 0 };
void zlacp2_ ( char const* uplo, int32_t const* m, int32_t const* n, double const* A, int32_t const* lda, double _Complex* B, int32_t const* ldb , size_t );
enum { LAPACK_clacpy_base = 0 };
void clacpy_ ( char const* uplo, int32_t const* m, int32_t const* n, float _Complex const* A, int32_t const* lda, float _Complex* B, int32_t const* ldb , size_t );
enum { LAPACK_dlacpy_base = 0 };
void dlacpy_ ( char const* uplo, int32_t const* m, int32_t const* n, double const* A, int32_t const* lda, double* B, int32_t const* ldb , size_t );
enum { LAPACK_slacpy_base = 0 };
void slacpy_ ( char const* uplo, int32_t const* m, int32_t const* n, float const* A, int32_t const* lda, float* B, int32_t const* ldb , size_t );
enum { LAPACK_zlacpy_base = 0 };
void zlacpy_ ( char const* uplo, int32_t const* m, int32_t const* n, double _Complex const* A, int32_t const* lda, double _Complex* B, int32_t const* ldb , size_t );
enum { LAPACK_clacrm = 0 };
void clacrm_ ( int32_t const* m, int32_t const* n, float _Complex const* A, int32_t const* lda, float const* B, int32_t const* ldb, float _Complex* C, int32_t const* ldc, float* rwork );
enum { LAPACK_zlacrm = 0 };
void zlacrm_ ( int32_t const* m, int32_t const* n, double _Complex const* A, int32_t const* lda, double const* B, int32_t const* ldb, double _Complex* C, int32_t const* ldc, double* rwork );
enum { LAPACK_zlag2c = 0 };
void zlag2c_ ( int32_t const* m, int32_t const* n, double _Complex const* A, int32_t const* lda, float _Complex* SA, int32_t const* ldsa, int32_t* info );
enum { LAPACK_slag2d = 0 };
void slag2d_ ( int32_t const* m, int32_t const* n, float const* SA, int32_t const* ldsa, double* A, int32_t const* lda, int32_t* info );
enum { LAPACK_dlag2s = 0 };
void dlag2s_ ( int32_t const* m, int32_t const* n, double const* A, int32_t const* lda, float* SA, int32_t const* ldsa, int32_t* info );
enum { LAPACK_clag2z = 0 };
void clag2z_ ( int32_t const* m, int32_t const* n, float _Complex const* SA, int32_t const* ldsa, double _Complex* A, int32_t const* lda, int32_t* info );
enum { LAPACK_clagge = 0 };
void clagge_ ( int32_t const* m, int32_t const* n, int32_t const* kl, int32_t const* ku, float const* D, float _Complex* A, int32_t const* lda, int32_t* iseed, float _Complex* work, int32_t* info );
enum { LAPACK_dlagge = 0 };
void dlagge_ ( int32_t const* m, int32_t const* n, int32_t const* kl, int32_t const* ku, double const* D, double* A, int32_t const* lda, int32_t* iseed, double* work, int32_t* info );
enum { LAPACK_slagge = 0 };
void slagge_ ( int32_t const* m, int32_t const* n, int32_t const* kl, int32_t const* ku, float const* D, float* A, int32_t const* lda, int32_t* iseed, float* work, int32_t* info );
enum { LAPACK_zlagge = 0 };
void zlagge_ ( int32_t const* m, int32_t const* n, int32_t const* kl, int32_t const* ku, double const* D, double _Complex* A, int32_t const* lda, int32_t* iseed, double _Complex* work, int32_t* info );
enum { LAPACK_claghe = 0 };
void claghe_ ( int32_t const* n, int32_t const* k, float const* D, float _Complex* A, int32_t const* lda, int32_t* iseed, float _Complex* work, int32_t* info );
enum { LAPACK_zlaghe = 0 };
void zlaghe_ ( int32_t const* n, int32_t const* k, double const* D, double _Complex* A, int32_t const* lda, int32_t* iseed, double _Complex* work, int32_t* info );
enum { LAPACK_clagsy = 0 };
void clagsy_ ( int32_t const* n, int32_t const* k, float const* D, float _Complex* A, int32_t const* lda, int32_t* iseed, float _Complex* work, int32_t* info );
enum { LAPACK_dlagsy = 0 };
void dlagsy_ ( int32_t const* n, int32_t const* k, double const* D, double* A, int32_t const* lda, int32_t* iseed, double* work, int32_t* info );
enum { LAPACK_slagsy = 0 };
void slagsy_ ( int32_t const* n, int32_t const* k, float const* D, float* A, int32_t const* lda, int32_t* iseed, float* work, int32_t* info );
enum { LAPACK_zlagsy = 0 };
void zlagsy_ ( int32_t const* n, int32_t const* k, double const* D, double _Complex* A, int32_t const* lda, int32_t* iseed, double _Complex* work, int32_t* info );
enum { LAPACK_dlamch_base = 0 };
double dlamch_ ( char const* cmach , size_t );
enum { LAPACK_slamch_base = 0 };
lapack_float_return slamch_ ( char const* cmach , size_t );
enum { LAPACK_clangb_base = 0 };
lapack_float_return clangb_ ( char const* norm, int32_t const* n, int32_t const* kl, int32_t const* ku, float _Complex const* AB, int32_t const* ldab, float* work , size_t );
enum { LAPACK_dlangb_base = 0 };
double dlangb_ ( char const* norm, int32_t const* n, int32_t const* kl, int32_t const* ku, double const* AB, int32_t const* ldab, double* work , size_t );
enum { LAPACK_slangb_base = 0 };
lapack_float_return slangb_ ( char const* norm, int32_t const* n, int32_t const* kl, int32_t const* ku, float const* AB, int32_t const* ldab, float* work , size_t );
enum { LAPACK_zlangb_base = 0 };
double zlangb_ ( char const* norm, int32_t const* n, int32_t const* kl, int32_t const* ku, double _Complex const* AB, int32_t const* ldab, double* work , size_t );
enum { LAPACK_clange_base = 0 };
lapack_float_return clange_ ( char const* norm, int32_t const* m, int32_t const* n, float _Complex const* A, int32_t const* lda, float* work , size_t );
enum { LAPACK_dlange_base = 0 };
double dlange_ ( char const* norm, int32_t const* m, int32_t const* n, double const* A, int32_t const* lda, double* work , size_t );
enum { LAPACK_slange_base = 0 };
lapack_float_return slange_ ( char const* norm, int32_t const* m, int32_t const* n, float const* A, int32_t const* lda, float* work , size_t );
enum { LAPACK_zlange_base = 0 };
double zlange_ ( char const* norm, int32_t const* m, int32_t const* n, double _Complex const* A, int32_t const* lda, double* work , size_t );
enum { LAPACK_clangt_base = 0 };
lapack_float_return clangt_ ( char const* norm, int32_t const* n, float _Complex const* DL, float _Complex const* D, float _Complex const* DU , size_t );
enum { LAPACK_dlangt_base = 0 };
double dlangt_ ( char const* norm, int32_t const* n, double const* DL, double const* D, double const* DU , size_t );
enum { LAPACK_slangt_base = 0 };
lapack_float_return slangt_ ( char const* norm, int32_t const* n, float const* DL, float const* D, float const* DU , size_t );
enum { LAPACK_zlangt_base = 0 };
double zlangt_ ( char const* norm, int32_t const* n, double _Complex const* DL, double _Complex const* D, double _Complex const* DU , size_t );
enum { LAPACK_clanhb_base = 0 };
lapack_float_return clanhb_ ( char const* norm, char const* uplo, int32_t const* n, int32_t const* k, float _Complex const* AB, int32_t const* ldab, float* work , size_t, size_t );
enum { LAPACK_zlanhb_base = 0 };
double zlanhb_ ( char const* norm, char const* uplo, int32_t const* n, int32_t const* k, double _Complex const* AB, int32_t const* ldab, double* work , size_t, size_t );
enum { LAPACK_clanhe_base = 0 };
lapack_float_return clanhe_ ( char const* norm, char const* uplo, int32_t const* n, float _Complex const* A, int32_t const* lda, float* work , size_t, size_t );
enum { LAPACK_zlanhe_base = 0 };
double zlanhe_ ( char const* norm, char const* uplo, int32_t const* n, double _Complex const* A, int32_t const* lda, double* work , size_t, size_t );
enum { LAPACK_clanhp_base = 0 };
lapack_float_return clanhp_ ( char const* norm, char const* uplo, int32_t const* n, float _Complex const* AP, float* work , size_t, size_t );
enum { LAPACK_zlanhp_base = 0 };
double zlanhp_ ( char const* norm, char const* uplo, int32_t const* n, double _Complex const* AP, double* work , size_t, size_t );
enum { LAPACK_clanhs_base = 0 };
lapack_float_return clanhs_ ( char const* norm, int32_t const* n, float _Complex const* A, int32_t const* lda, float* work , size_t );
enum { LAPACK_dlanhs_base = 0 };
double dlanhs_ ( char const* norm, int32_t const* n, double const* A, int32_t const* lda, double* work , size_t );
enum { LAPACK_slanhs_base = 0 };
lapack_float_return slanhs_ ( char const* norm, int32_t const* n, float const* A, int32_t const* lda, float* work , size_t );
enum { LAPACK_zlanhs_base = 0 };
double zlanhs_ ( char const* norm, int32_t const* n, double _Complex const* A, int32_t const* lda, double* work , size_t );
enum { LAPACK_clanht_base = 0 };
lapack_float_return clanht_ ( char const* norm, int32_t const* n, float const* D, float _Complex const* E , size_t );
enum { LAPACK_zlanht_base = 0 };
double zlanht_ ( char const* norm, int32_t const* n, double const* D, double _Complex const* E , size_t );
enum { LAPACK_clansb_base = 0 };
lapack_float_return clansb_ ( char const* norm, char const* uplo, int32_t const* n, int32_t const* k, float _Complex const* AB, int32_t const* ldab, float* work , size_t, size_t );
enum { LAPACK_dlansb_base = 0 };
double dlansb_ ( char const* norm, char const* uplo, int32_t const* n, int32_t const* k, double const* AB, int32_t const* ldab, double* work , size_t, size_t );
enum { LAPACK_slansb_base = 0 };
lapack_float_return slansb_ ( char const* norm, char const* uplo, int32_t const* n, int32_t const* k, float const* AB, int32_t const* ldab, float* work , size_t, size_t );
enum { LAPACK_zlansb_base = 0 };
double zlansb_ ( char const* norm, char const* uplo, int32_t const* n, int32_t const* k, double _Complex const* AB, int32_t const* ldab, double* work , size_t, size_t );
enum { LAPACK_clansp_base = 0 };
lapack_float_return clansp_ ( char const* norm, char const* uplo, int32_t const* n, float _Complex const* AP, float* work , size_t, size_t );
enum { LAPACK_dlansp_base = 0 };
double dlansp_ ( char const* norm, char const* uplo, int32_t const* n, double const* AP, double* work , size_t, size_t );
enum { LAPACK_slansp_base = 0 };
lapack_float_return slansp_ ( char const* norm, char const* uplo, int32_t const* n, float const* AP, float* work , size_t, size_t );
enum { LAPACK_zlansp_base = 0 };
double zlansp_ ( char const* norm, char const* uplo, int32_t const* n, double _Complex const* AP, double* work , size_t, size_t );
enum { LAPACK_dlanst_base = 0 };
double dlanst_ ( char const* norm, int32_t const* n, double const* D, double const* E , size_t );
enum { LAPACK_slanst_base = 0 };
lapack_float_return slanst_ ( char const* norm, int32_t const* n, float const* D, float const* E , size_t );
enum { LAPACK_clansy_base = 0 };
lapack_float_return clansy_ ( char const* norm, char const* uplo, int32_t const* n, float _Complex const* A, int32_t const* lda, float* work , size_t, size_t );
enum { LAPACK_dlansy_base = 0 };
double dlansy_ ( char const* norm, char const* uplo, int32_t const* n, double const* A, int32_t const* lda, double* work , size_t, size_t );
enum { LAPACK_slansy_base = 0 };
lapack_float_return slansy_ ( char const* norm, char const* uplo, int32_t const* n, float const* A, int32_t const* lda, float* work , size_t, size_t );
enum { LAPACK_zlansy_base = 0 };
double zlansy_ ( char const* norm, char const* uplo, int32_t const* n, double _Complex const* A, int32_t const* lda, double* work , size_t, size_t );
enum { LAPACK_clantb_base = 0 };
lapack_float_return clantb_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, int32_t const* k, float _Complex const* AB, int32_t const* ldab, float* work , size_t, size_t, size_t );
enum { LAPACK_dlantb_base = 0 };
double dlantb_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, int32_t const* k, double const* AB, int32_t const* ldab, double* work , size_t, size_t, size_t );
enum { LAPACK_slantb_base = 0 };
lapack_float_return slantb_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, int32_t const* k, float const* AB, int32_t const* ldab, float* work , size_t, size_t, size_t );
enum { LAPACK_zlantb_base = 0 };
double zlantb_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, int32_t const* k, double _Complex const* AB, int32_t const* ldab, double* work , size_t, size_t, size_t );
enum { LAPACK_clantp_base = 0 };
lapack_float_return clantp_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, float _Complex const* AP, float* work , size_t, size_t, size_t );
enum { LAPACK_dlantp_base = 0 };
double dlantp_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, double const* AP, double* work , size_t, size_t, size_t );
enum { LAPACK_slantp_base = 0 };
lapack_float_return slantp_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, float const* AP, float* work , size_t, size_t, size_t );
enum { LAPACK_zlantp_base = 0 };
double zlantp_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, double _Complex const* AP, double* work , size_t, size_t, size_t );
enum { LAPACK_clantr_base = 0 };
lapack_float_return clantr_ ( char const* norm, char const* uplo, char const* diag, int32_t const* m, int32_t const* n, float _Complex const* A, int32_t const* lda, float* work , size_t, size_t, size_t );
enum { LAPACK_dlantr_base = 0 };
double dlantr_ ( char const* norm, char const* uplo, char const* diag, int32_t const* m, int32_t const* n, double const* A, int32_t const* lda, double* work , size_t, size_t, size_t );
enum { LAPACK_slantr_base = 0 };
lapack_float_return slantr_ ( char const* norm, char const* uplo, char const* diag, int32_t const* m, int32_t const* n, float const* A, int32_t const* lda, float* work , size_t, size_t, size_t );
enum { LAPACK_zlantr_base = 0 };
double zlantr_ ( char const* norm, char const* uplo, char const* diag, int32_t const* m, int32_t const* n, double _Complex const* A, int32_t const* lda, double* work , size_t, size_t, size_t );
enum { LAPACK_clapmr = 0 };
void clapmr_ ( int32_t const* forwrd, int32_t const* m, int32_t const* n, float _Complex* X, int32_t const* ldx, int32_t* K );
enum { LAPACK_dlapmr = 0 };
void dlapmr_ ( int32_t const* forwrd, int32_t const* m, int32_t const* n, double* X, int32_t const* ldx, int32_t* K );
enum { LAPACK_slapmr = 0 };
void slapmr_ ( int32_t const* forwrd, int32_t const* m, int32_t const* n, float* X, int32_t const* ldx, int32_t* K );
enum { LAPACK_zlapmr = 0 };
void zlapmr_ ( int32_t const* forwrd, int32_t const* m, int32_t const* n, double _Complex* X, int32_t const* ldx, int32_t* K );
enum { LAPACK_clapmt = 0 };
void clapmt_ ( int32_t const* forwrd, int32_t const* m, int32_t const* n, float _Complex* X, int32_t const* ldx, int32_t* K );
enum { LAPACK_dlapmt = 0 };
void dlapmt_ ( int32_t const* forwrd, int32_t const* m, int32_t const* n, double* X, int32_t const* ldx, int32_t* K );
enum { LAPACK_slapmt = 0 };
void slapmt_ ( int32_t const* forwrd, int32_t const* m, int32_t const* n, float* X, int32_t const* ldx, int32_t* K );
enum { LAPACK_zlapmt = 0 };
void zlapmt_ ( int32_t const* forwrd, int32_t const* m, int32_t const* n, double _Complex* X, int32_t const* ldx, int32_t* K );
enum { LAPACK_dlapy2 = 0 };
double dlapy2_ ( double const* x, double const* y );
enum { LAPACK_slapy2 = 0 };
lapack_float_return slapy2_ ( float const* x, float const* y );
enum { LAPACK_dlapy3 = 0 };
double dlapy3_ ( double const* x, double const* y, double const* z );
enum { LAPACK_slapy3 = 0 };
lapack_float_return slapy3_ ( float const* x, float const* y, float const* z );
enum { LAPACK_clarcm = 0 };
void clarcm_ ( int32_t const* m, int32_t const* n, float const* A, int32_t const* lda, float _Complex const* B, int32_t const* ldb, float _Complex* C, int32_t const* ldc, float* rwork );
enum { LAPACK_zlarcm = 0 };
void zlarcm_ ( int32_t const* m, int32_t const* n, double const* A, int32_t const* lda, double _Complex const* B, int32_t const* ldb, double _Complex* C, int32_t const* ldc, double* rwork );
enum { LAPACK_clarf_base = 0 };
void clarf_ ( char const* side, int32_t const* m, int32_t const* n, float _Complex const* V, int32_t const* incv, float _Complex const* tau, float _Complex* C, int32_t const* ldc, float _Complex* work , size_t );
enum { LAPACK_dlarf_base = 0 };
void dlarf_ ( char const* side, int32_t const* m, int32_t const* n, double const* V, int32_t const* incv, double const* tau, double* C, int32_t const* ldc, double* work , size_t );
enum { LAPACK_slarf_base = 0 };
void slarf_ ( char const* side, int32_t const* m, int32_t const* n, float const* V, int32_t const* incv, float const* tau, float* C, int32_t const* ldc, float* work , size_t );
enum { LAPACK_zlarf_base = 0 };
void zlarf_ ( char const* side, int32_t const* m, int32_t const* n, double _Complex const* V, int32_t const* incv, double _Complex const* tau, double _Complex* C, int32_t const* ldc, double _Complex* work , size_t );
enum { LAPACK_clarfb_base = 0 };
void clarfb_ ( char const* side, char const* trans, char const* direct, char const* storev, int32_t const* m, int32_t const* n, int32_t const* k, float _Complex const* V, int32_t const* ldv, float _Complex const* T, int32_t const* ldt, float _Complex* C, int32_t const* ldc, float _Complex* work, int32_t const* ldwork , size_t, size_t, size_t, size_t );
enum { LAPACK_dlarfb_base = 0 };
void dlarfb_ ( char const* side, char const* trans, char const* direct, char const* storev, int32_t const* m, int32_t const* n, int32_t const* k, double const* V, int32_t const* ldv, double const* T, int32_t const* ldt, double* C, int32_t const* ldc, double* work, int32_t const* ldwork , size_t, size_t, size_t, size_t );
enum { LAPACK_slarfb_base = 0 };
void slarfb_ ( char const* side, char const* trans, char const* direct, char const* storev, int32_t const* m, int32_t const* n, int32_t const* k, float const* V, int32_t const* ldv, float const* T, int32_t const* ldt, float* C, int32_t const* ldc, float* work, int32_t const* ldwork , size_t, size_t, size_t, size_t );
enum { LAPACK_zlarfb_base = 0 };
void zlarfb_ ( char const* side, char const* trans, char const* direct, char const* storev, int32_t const* m, int32_t const* n, int32_t const* k, double _Complex const* V, int32_t const* ldv, double _Complex const* T, int32_t const* ldt, double _Complex* C, int32_t const* ldc, double _Complex* work, int32_t const* ldwork , size_t, size_t, size_t, size_t );
enum { LAPACK_clarfg = 0 };
void clarfg_ ( int32_t const* n, float _Complex* alpha, float _Complex* X, int32_t const* incx, float _Complex* tau );
enum { LAPACK_dlarfg = 0 };
void dlarfg_ ( int32_t const* n, double* alpha, double* X, int32_t const* incx, double* tau );
enum { LAPACK_slarfg = 0 };
void slarfg_ ( int32_t const* n, float* alpha, float* X, int32_t const* incx, float* tau );
enum { LAPACK_zlarfg = 0 };
void zlarfg_ ( int32_t const* n, double _Complex* alpha, double _Complex* X, int32_t const* incx, double _Complex* tau );
enum { LAPACK_clarft_base = 0 };
void clarft_ ( char const* direct, char const* storev, int32_t const* n, int32_t const* k, float _Complex const* V, int32_t const* ldv, float _Complex const* tau, float _Complex* T, int32_t const* ldt , size_t, size_t );
enum { LAPACK_dlarft_base = 0 };
void dlarft_ ( char const* direct, char const* storev, int32_t const* n, int32_t const* k, double const* V, int32_t const* ldv, double const* tau, double* T, int32_t const* ldt , size_t, size_t );
enum { LAPACK_slarft_base = 0 };
void slarft_ ( char const* direct, char const* storev, int32_t const* n, int32_t const* k, float const* V, int32_t const* ldv, float const* tau, float* T, int32_t const* ldt , size_t, size_t );
enum { LAPACK_zlarft_base = 0 };
void zlarft_ ( char const* direct, char const* storev, int32_t const* n, int32_t const* k, double _Complex const* V, int32_t const* ldv, double _Complex const* tau, double _Complex* T, int32_t const* ldt , size_t, size_t );
enum { LAPACK_clarfx_base = 0 };
void clarfx_ ( char const* side, int32_t const* m, int32_t const* n, float _Complex const* V, float _Complex const* tau, float _Complex* C, int32_t const* ldc, float _Complex* work , size_t );
enum { LAPACK_dlarfx_base = 0 };
void dlarfx_ ( char const* side, int32_t const* m, int32_t const* n, double const* V, double const* tau, double* C, int32_t const* ldc, double* work , size_t );
enum { LAPACK_slarfx_base = 0 };
void slarfx_ ( char const* side, int32_t const* m, int32_t const* n, float const* V, float const* tau, float* C, int32_t const* ldc, float* work , size_t );
enum { LAPACK_zlarfx_base = 0 };
void zlarfx_ ( char const* side, int32_t const* m, int32_t const* n, double _Complex const* V, double _Complex const* tau, double _Complex* C, int32_t const* ldc, double _Complex* work , size_t );
enum { LAPACK_clarnv = 0 };
void clarnv_ ( int32_t const* idist, int32_t* iseed, int32_t const* n, float _Complex* X );
enum { LAPACK_dlarnv = 0 };
void dlarnv_ ( int32_t const* idist, int32_t* iseed, int32_t const* n, double* X );
enum { LAPACK_slarnv = 0 };
void slarnv_ ( int32_t const* idist, int32_t* iseed, int32_t const* n, float* X );
enum { LAPACK_zlarnv = 0 };
void zlarnv_ ( int32_t const* idist, int32_t* iseed, int32_t const* n, double _Complex* X );
enum { LAPACK_dlartgp = 0 };
void dlartgp_ ( double const* f, double const* g, double* cs, double* sn, double* r );
enum { LAPACK_slartgp = 0 };
void slartgp_ ( float const* f, float const* g, float* cs, float* sn, float* r );
enum { LAPACK_dlartgs = 0 };
void dlartgs_ ( double const* x, double const* y, double const* sigma, double* cs, double* sn );
enum { LAPACK_slartgs = 0 };
void slartgs_ ( float const* x, float const* y, float const* sigma, float* cs, float* sn );
enum { LAPACK_clascl_base = 0 };
void clascl_ ( char const* type, int32_t const* kl, int32_t const* ku, float const* cfrom, float const* cto, int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_dlascl_base = 0 };
void dlascl_ ( char const* type, int32_t const* kl, int32_t const* ku, double const* cfrom, double const* cto, int32_t const* m, int32_t const* n, double* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_slascl_base = 0 };
void slascl_ ( char const* type, int32_t const* kl, int32_t const* ku, float const* cfrom, float const* cto, int32_t const* m, int32_t const* n, float* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_zlascl_base = 0 };
void zlascl_ ( char const* type, int32_t const* kl, int32_t const* ku, double const* cfrom, double const* cto, int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_claset_base = 0 };
void claset_ ( char const* uplo, int32_t const* m, int32_t const* n, float _Complex const* alpha, float _Complex const* beta, float _Complex* A, int32_t const* lda , size_t );
enum { LAPACK_dlaset_base = 0 };
void dlaset_ ( char const* uplo, int32_t const* m, int32_t const* n, double const* alpha, double const* beta, double* A, int32_t const* lda , size_t );
enum { LAPACK_slaset_base = 0 };
void slaset_ ( char const* uplo, int32_t const* m, int32_t const* n, float const* alpha, float const* beta, float* A, int32_t const* lda , size_t );
enum { LAPACK_zlaset_base = 0 };
void zlaset_ ( char const* uplo, int32_t const* m, int32_t const* n, double _Complex const* alpha, double _Complex const* beta, double _Complex* A, int32_t const* lda , size_t );
enum { LAPACK_dlasrt_base = 0 };
void dlasrt_ ( char const* id, int32_t const* n, double* D, int32_t* info , size_t );
enum { LAPACK_slasrt_base = 0 };
void slasrt_ ( char const* id, int32_t const* n, float* D, int32_t* info , size_t );
enum { LAPACK_classq = 0 };
void classq_ ( int32_t const* n, float _Complex const* X, int32_t const* incx, float* scale, float* sumsq );
enum { LAPACK_dlassq = 0 };
void dlassq_ ( int32_t const* n, double const* X, int32_t const* incx, double* scale, double* sumsq );
enum { LAPACK_slassq = 0 };
void slassq_ ( int32_t const* n, float const* X, int32_t const* incx, float* scale, float* sumsq );
enum { LAPACK_zlassq = 0 };
void zlassq_ ( int32_t const* n, double _Complex const* X, int32_t const* incx, double* scale, double* sumsq );
enum { LAPACK_claswp = 0 };
void claswp_ ( int32_t const* n, float _Complex* A, int32_t const* lda, int32_t const* k1, int32_t const* k2, int32_t const* ipiv, int32_t const* incx );
enum { LAPACK_dlaswp = 0 };
void dlaswp_ ( int32_t const* n, double* A, int32_t const* lda, int32_t const* k1, int32_t const* k2, int32_t const* ipiv, int32_t const* incx );
enum { LAPACK_slaswp = 0 };
void slaswp_ ( int32_t const* n, float* A, int32_t const* lda, int32_t const* k1, int32_t const* k2, int32_t const* ipiv, int32_t const* incx );
enum { LAPACK_zlaswp = 0 };
void zlaswp_ ( int32_t const* n, double _Complex* A, int32_t const* lda, int32_t const* k1, int32_t const* k2, int32_t const* ipiv, int32_t const* incx );
enum { LAPACK_clatms_base = 0 };
void clatms_ ( int32_t const* m, int32_t const* n, char const* dist, int32_t* iseed, char const* sym, float* D, int32_t const* mode, float const* cond, float const* dmax, int32_t const* kl, int32_t const* ku, char const* pack, float _Complex* A, int32_t const* lda, float _Complex* work, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dlatms_base = 0 };
void dlatms_ ( int32_t const* m, int32_t const* n, char const* dist, int32_t* iseed, char const* sym, double* D, int32_t const* mode, double const* cond, double const* dmax, int32_t const* kl, int32_t const* ku, char const* pack, double* A, int32_t const* lda, double* work, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_slatms_base = 0 };
void slatms_ ( int32_t const* m, int32_t const* n, char const* dist, int32_t* iseed, char const* sym, float* D, int32_t const* mode, float const* cond, float const* dmax, int32_t const* kl, int32_t const* ku, char const* pack, float* A, int32_t const* lda, float* work, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zlatms_base = 0 };
void zlatms_ ( int32_t const* m, int32_t const* n, char const* dist, int32_t* iseed, char const* sym, double* D, int32_t const* mode, double const* cond, double const* dmax, int32_t const* kl, int32_t const* ku, char const* pack, double _Complex* A, int32_t const* lda, double _Complex* work, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_clauum_base = 0 };
void clauum_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_dlauum_base = 0 };
void dlauum_ ( char const* uplo, int32_t const* n, double* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_slauum_base = 0 };
void slauum_ ( char const* uplo, int32_t const* n, float* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_zlauum_base = 0 };
void zlauum_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_ilaver = 0 };
void ilaver_ ( int32_t* vers_major, int32_t* vers_minor, int32_t* vers_patch );
enum { LAPACK_dopgtr_base = 0 };
void dopgtr_ ( char const* uplo, int32_t const* n, double const* AP, double const* tau, double* Q, int32_t const* ldq, double* work, int32_t* info , size_t );
enum { LAPACK_sopgtr_base = 0 };
void sopgtr_ ( char const* uplo, int32_t const* n, float const* AP, float const* tau, float* Q, int32_t const* ldq, float* work, int32_t* info , size_t );
enum { LAPACK_dopmtr_base = 0 };
void dopmtr_ ( char const* side, char const* uplo, char const* trans, int32_t const* m, int32_t const* n, double const* AP, double const* tau, double* C, int32_t const* ldc, double* work, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sopmtr_base = 0 };
void sopmtr_ ( char const* side, char const* uplo, char const* trans, int32_t const* m, int32_t const* n, float const* AP, float const* tau, float* C, int32_t const* ldc, float* work, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dorbdb_base = 0 };
void dorbdb_ ( char const* trans, char const* signs, int32_t const* m, int32_t const* p, int32_t const* q, double* X11, int32_t const* ldx11, double* X12, int32_t const* ldx12, double* X21, int32_t const* ldx21, double* X22, int32_t const* ldx22, double* theta, double* phi, double* TAUP1, double* TAUP2, double* TAUQ1, double* TAUQ2, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_sorbdb_base = 0 };
void sorbdb_ ( char const* trans, char const* signs, int32_t const* m, int32_t const* p, int32_t const* q, float* X11, int32_t const* ldx11, float* X12, int32_t const* ldx12, float* X21, int32_t const* ldx21, float* X22, int32_t const* ldx22, float* theta, float* phi, float* TAUP1, float* TAUP2, float* TAUQ1, float* TAUQ2, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_dorcsd_base = 0 };
void dorcsd_ ( char const* jobu1, char const* jobu2, char const* jobv1t, char const* jobv2t, char const* trans, char const* signs, int32_t const* m, int32_t const* p, int32_t const* q, double* X11, int32_t const* ldx11, double* X12, int32_t const* ldx12, double* X21, int32_t const* ldx21, double* X22, int32_t const* ldx22, double* theta, double* U1, int32_t const* ldu1, double* U2, int32_t const* ldu2, double* V1T, int32_t const* ldv1t, double* V2T, int32_t const* ldv2t, double* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_sorcsd_base = 0 };
void sorcsd_ ( char const* jobu1, char const* jobu2, char const* jobv1t, char const* jobv2t, char const* trans, char const* signs, int32_t const* m, int32_t const* p, int32_t const* q, float* X11, int32_t const* ldx11, float* X12, int32_t const* ldx12, float* X21, int32_t const* ldx21, float* X22, int32_t const* ldx22, float* theta, float* U1, int32_t const* ldu1, float* U2, int32_t const* ldu2, float* V1T, int32_t const* ldv1t, float* V2T, int32_t const* ldv2t, float* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_dorcsd2by1_base = 0 };
void dorcsd2by1_ ( char const* jobu1, char const* jobu2, char const* jobv1t, int32_t const* m, int32_t const* p, int32_t const* q, double* X11, int32_t const* ldx11, double* X21, int32_t const* ldx21, double* theta, double* U1, int32_t const* ldu1, double* U2, int32_t const* ldu2, double* V1T, int32_t const* ldv1t, double* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sorcsd2by1_base = 0 };
void sorcsd2by1_ ( char const* jobu1, char const* jobu2, char const* jobv1t, int32_t const* m, int32_t const* p, int32_t const* q, float* X11, int32_t const* ldx11, float* X21, int32_t const* ldx21, float* theta, float* U1, int32_t const* ldu1, float* U2, int32_t const* ldu2, float* V1T, int32_t const* ldv1t, float* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dorgbr_base = 0 };
void dorgbr_ ( char const* vect, int32_t const* m, int32_t const* n, int32_t const* k, double* A, int32_t const* lda, double const* tau, double* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_sorgbr_base = 0 };
void sorgbr_ ( char const* vect, int32_t const* m, int32_t const* n, int32_t const* k, float* A, int32_t const* lda, float const* tau, float* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_dorghr = 0 };
void dorghr_ ( int32_t const* n, int32_t const* ilo, int32_t const* ihi, double* A, int32_t const* lda, double const* tau, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sorghr = 0 };
void sorghr_ ( int32_t const* n, int32_t const* ilo, int32_t const* ihi, float* A, int32_t const* lda, float const* tau, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dorglq = 0 };
void dorglq_ ( int32_t const* m, int32_t const* n, int32_t const* k, double* A, int32_t const* lda, double const* tau, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sorglq = 0 };
void sorglq_ ( int32_t const* m, int32_t const* n, int32_t const* k, float* A, int32_t const* lda, float const* tau, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dorgql = 0 };
void dorgql_ ( int32_t const* m, int32_t const* n, int32_t const* k, double* A, int32_t const* lda, double const* tau, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sorgql = 0 };
void sorgql_ ( int32_t const* m, int32_t const* n, int32_t const* k, float* A, int32_t const* lda, float const* tau, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dorgqr = 0 };
void dorgqr_ ( int32_t const* m, int32_t const* n, int32_t const* k, double* A, int32_t const* lda, double const* tau, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sorgqr = 0 };
void sorgqr_ ( int32_t const* m, int32_t const* n, int32_t const* k, float* A, int32_t const* lda, float const* tau, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dorgrq = 0 };
void dorgrq_ ( int32_t const* m, int32_t const* n, int32_t const* k, double* A, int32_t const* lda, double const* tau, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sorgrq = 0 };
void sorgrq_ ( int32_t const* m, int32_t const* n, int32_t const* k, float* A, int32_t const* lda, float const* tau, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dorgtr_base = 0 };
void dorgtr_ ( char const* uplo, int32_t const* n, double* A, int32_t const* lda, double const* tau, double* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_sorgtr_base = 0 };
void sorgtr_ ( char const* uplo, int32_t const* n, float* A, int32_t const* lda, float const* tau, float* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_dorgtsqr_row = 0 };
void dorgtsqr_row_ ( int32_t const* m, int32_t const* n, int32_t const* mb, int32_t const* nb, double* A, int32_t const* lda, double const* T, int32_t const* ldt, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_sorgtsqr_row = 0 };
void sorgtsqr_row_ ( int32_t const* m, int32_t const* n, int32_t const* mb, int32_t const* nb, float* A, int32_t const* lda, float const* T, int32_t const* ldt, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dormbr_base = 0 };
void dormbr_ ( char const* vect, char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, double const* A, int32_t const* lda, double const* tau, double* C, int32_t const* ldc, double* work, int32_t const* lwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sormbr_base = 0 };
void sormbr_ ( char const* vect, char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, float const* A, int32_t const* lda, float const* tau, float* C, int32_t const* ldc, float* work, int32_t const* lwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dormhr_base = 0 };
void dormhr_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* ilo, int32_t const* ihi, double const* A, int32_t const* lda, double const* tau, double* C, int32_t const* ldc, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_sormhr_base = 0 };
void sormhr_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* ilo, int32_t const* ihi, float const* A, int32_t const* lda, float const* tau, float* C, int32_t const* ldc, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_dormlq_base = 0 };
void dormlq_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, double const* A, int32_t const* lda, double const* tau, double* C, int32_t const* ldc, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_sormlq_base = 0 };
void sormlq_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, float const* A, int32_t const* lda, float const* tau, float* C, int32_t const* ldc, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_dormql_base = 0 };
void dormql_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, double const* A, int32_t const* lda, double const* tau, double* C, int32_t const* ldc, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_sormql_base = 0 };
void sormql_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, float const* A, int32_t const* lda, float const* tau, float* C, int32_t const* ldc, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_dormqr_base = 0 };
void dormqr_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, double const* A, int32_t const* lda, double const* tau, double* C, int32_t const* ldc, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_sormqr_base = 0 };
void sormqr_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, float const* A, int32_t const* lda, float const* tau, float* C, int32_t const* ldc, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_dormrq_base = 0 };
void dormrq_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, double const* A, int32_t const* lda, double const* tau, double* C, int32_t const* ldc, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_sormrq_base = 0 };
void sormrq_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, float const* A, int32_t const* lda, float const* tau, float* C, int32_t const* ldc, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_dormrz_base = 0 };
void dormrz_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* l, double const* A, int32_t const* lda, double const* tau, double* C, int32_t const* ldc, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_sormrz_base = 0 };
void sormrz_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* l, float const* A, int32_t const* lda, float const* tau, float* C, int32_t const* ldc, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_dormtr_base = 0 };
void dormtr_ ( char const* side, char const* uplo, char const* trans, int32_t const* m, int32_t const* n, double const* A, int32_t const* lda, double const* tau, double* C, int32_t const* ldc, double* work, int32_t const* lwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sormtr_base = 0 };
void sormtr_ ( char const* side, char const* uplo, char const* trans, int32_t const* m, int32_t const* n, float const* A, int32_t const* lda, float const* tau, float* C, int32_t const* ldc, float* work, int32_t const* lwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cpbcon_base = 0 };
void cpbcon_ ( char const* uplo, int32_t const* n, int32_t const* kd, float _Complex const* AB, int32_t const* ldab, float const* anorm, float* rcond, float _Complex* work, float* rwork, int32_t* info , size_t );
enum { LAPACK_dpbcon_base = 0 };
void dpbcon_ ( char const* uplo, int32_t const* n, int32_t const* kd, double const* AB, int32_t const* ldab, double const* anorm, double* rcond, double* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_spbcon_base = 0 };
void spbcon_ ( char const* uplo, int32_t const* n, int32_t const* kd, float const* AB, int32_t const* ldab, float const* anorm, float* rcond, float* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_zpbcon_base = 0 };
void zpbcon_ ( char const* uplo, int32_t const* n, int32_t const* kd, double _Complex const* AB, int32_t const* ldab, double const* anorm, double* rcond, double _Complex* work, double* rwork, int32_t* info , size_t );
enum { LAPACK_cpbequ_base = 0 };
void cpbequ_ ( char const* uplo, int32_t const* n, int32_t const* kd, float _Complex const* AB, int32_t const* ldab, float* S, float* scond, float* amax, int32_t* info , size_t );
enum { LAPACK_dpbequ_base = 0 };
void dpbequ_ ( char const* uplo, int32_t const* n, int32_t const* kd, double const* AB, int32_t const* ldab, double* S, double* scond, double* amax, int32_t* info , size_t );
enum { LAPACK_spbequ_base = 0 };
void spbequ_ ( char const* uplo, int32_t const* n, int32_t const* kd, float const* AB, int32_t const* ldab, float* S, float* scond, float* amax, int32_t* info , size_t );
enum { LAPACK_zpbequ_base = 0 };
void zpbequ_ ( char const* uplo, int32_t const* n, int32_t const* kd, double _Complex const* AB, int32_t const* ldab, double* S, double* scond, double* amax, int32_t* info , size_t );
enum { LAPACK_cpbrfs_base = 0 };
void cpbrfs_ ( char const* uplo, int32_t const* n, int32_t const* kd, int32_t const* nrhs, float _Complex const* AB, int32_t const* ldab, float _Complex const* AFB, int32_t const* ldafb, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t );
enum { LAPACK_dpbrfs_base = 0 };
void dpbrfs_ ( char const* uplo, int32_t const* n, int32_t const* kd, int32_t const* nrhs, double const* AB, int32_t const* ldab, double const* AFB, int32_t const* ldafb, double const* B, int32_t const* ldb, double* X, int32_t const* ldx, double* ferr, double* berr, double* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_spbrfs_base = 0 };
void spbrfs_ ( char const* uplo, int32_t const* n, int32_t const* kd, int32_t const* nrhs, float const* AB, int32_t const* ldab, float const* AFB, int32_t const* ldafb, float const* B, int32_t const* ldb, float* X, int32_t const* ldx, float* ferr, float* berr, float* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_zpbrfs_base = 0 };
void zpbrfs_ ( char const* uplo, int32_t const* n, int32_t const* kd, int32_t const* nrhs, double _Complex const* AB, int32_t const* ldab, double _Complex const* AFB, int32_t const* ldafb, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t );
enum { LAPACK_cpbstf_base = 0 };
void cpbstf_ ( char const* uplo, int32_t const* n, int32_t const* kd, float _Complex* AB, int32_t const* ldab, int32_t* info , size_t );
enum { LAPACK_dpbstf_base = 0 };
void dpbstf_ ( char const* uplo, int32_t const* n, int32_t const* kd, double* AB, int32_t const* ldab, int32_t* info , size_t );
enum { LAPACK_spbstf_base = 0 };
void spbstf_ ( char const* uplo, int32_t const* n, int32_t const* kd, float* AB, int32_t const* ldab, int32_t* info , size_t );
enum { LAPACK_zpbstf_base = 0 };
void zpbstf_ ( char const* uplo, int32_t const* n, int32_t const* kd, double _Complex* AB, int32_t const* ldab, int32_t* info , size_t );
enum { LAPACK_cpbsv_base = 0 };
void cpbsv_ ( char const* uplo, int32_t const* n, int32_t const* kd, int32_t const* nrhs, float _Complex* AB, int32_t const* ldab, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dpbsv_base = 0 };
void dpbsv_ ( char const* uplo, int32_t const* n, int32_t const* kd, int32_t const* nrhs, double* AB, int32_t const* ldab, double* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_spbsv_base = 0 };
void spbsv_ ( char const* uplo, int32_t const* n, int32_t const* kd, int32_t const* nrhs, float* AB, int32_t const* ldab, float* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zpbsv_base = 0 };
void zpbsv_ ( char const* uplo, int32_t const* n, int32_t const* kd, int32_t const* nrhs, double _Complex* AB, int32_t const* ldab, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_cpbsvx_base = 0 };
void cpbsvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* kd, int32_t const* nrhs, float _Complex* AB, int32_t const* ldab, float _Complex* AFB, int32_t const* ldafb, char* equed, float* S, float _Complex* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dpbsvx_base = 0 };
void dpbsvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* kd, int32_t const* nrhs, double* AB, int32_t const* ldab, double* AFB, int32_t const* ldafb, char* equed, double* S, double* B, int32_t const* ldb, double* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_spbsvx_base = 0 };
void spbsvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* kd, int32_t const* nrhs, float* AB, int32_t const* ldab, float* AFB, int32_t const* ldafb, char* equed, float* S, float* B, int32_t const* ldb, float* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zpbsvx_base = 0 };
void zpbsvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* kd, int32_t const* nrhs, double _Complex* AB, int32_t const* ldab, double _Complex* AFB, int32_t const* ldafb, char* equed, double* S, double _Complex* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cpbtrf_base = 0 };
void cpbtrf_ ( char const* uplo, int32_t const* n, int32_t const* kd, float _Complex* AB, int32_t const* ldab, int32_t* info , size_t );
enum { LAPACK_dpbtrf_base = 0 };
void dpbtrf_ ( char const* uplo, int32_t const* n, int32_t const* kd, double* AB, int32_t const* ldab, int32_t* info , size_t );
enum { LAPACK_spbtrf_base = 0 };
void spbtrf_ ( char const* uplo, int32_t const* n, int32_t const* kd, float* AB, int32_t const* ldab, int32_t* info , size_t );
enum { LAPACK_zpbtrf_base = 0 };
void zpbtrf_ ( char const* uplo, int32_t const* n, int32_t const* kd, double _Complex* AB, int32_t const* ldab, int32_t* info , size_t );
enum { LAPACK_cpbtrs_base = 0 };
void cpbtrs_ ( char const* uplo, int32_t const* n, int32_t const* kd, int32_t const* nrhs, float _Complex const* AB, int32_t const* ldab, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dpbtrs_base = 0 };
void dpbtrs_ ( char const* uplo, int32_t const* n, int32_t const* kd, int32_t const* nrhs, double const* AB, int32_t const* ldab, double* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_spbtrs_base = 0 };
void spbtrs_ ( char const* uplo, int32_t const* n, int32_t const* kd, int32_t const* nrhs, float const* AB, int32_t const* ldab, float* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zpbtrs_base = 0 };
void zpbtrs_ ( char const* uplo, int32_t const* n, int32_t const* kd, int32_t const* nrhs, double _Complex const* AB, int32_t const* ldab, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_cpftrf_base = 0 };
void cpftrf_ ( char const* transr, char const* uplo, int32_t const* n, float _Complex* A, int32_t* info , size_t, size_t );
enum { LAPACK_dpftrf_base = 0 };
void dpftrf_ ( char const* transr, char const* uplo, int32_t const* n, double* A, int32_t* info , size_t, size_t );
enum { LAPACK_spftrf_base = 0 };
void spftrf_ ( char const* transr, char const* uplo, int32_t const* n, float* A, int32_t* info , size_t, size_t );
enum { LAPACK_zpftrf_base = 0 };
void zpftrf_ ( char const* transr, char const* uplo, int32_t const* n, double _Complex* A, int32_t* info , size_t, size_t );
enum { LAPACK_cpftri_base = 0 };
void cpftri_ ( char const* transr, char const* uplo, int32_t const* n, float _Complex* A, int32_t* info , size_t, size_t );
enum { LAPACK_dpftri_base = 0 };
void dpftri_ ( char const* transr, char const* uplo, int32_t const* n, double* A, int32_t* info , size_t, size_t );
enum { LAPACK_spftri_base = 0 };
void spftri_ ( char const* transr, char const* uplo, int32_t const* n, float* A, int32_t* info , size_t, size_t );
enum { LAPACK_zpftri_base = 0 };
void zpftri_ ( char const* transr, char const* uplo, int32_t const* n, double _Complex* A, int32_t* info , size_t, size_t );
enum { LAPACK_cpftrs_base = 0 };
void cpftrs_ ( char const* transr, char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* A, float _Complex* B, int32_t const* ldb, int32_t* info , size_t, size_t );
enum { LAPACK_dpftrs_base = 0 };
void dpftrs_ ( char const* transr, char const* uplo, int32_t const* n, int32_t const* nrhs, double const* A, double* B, int32_t const* ldb, int32_t* info , size_t, size_t );
enum { LAPACK_spftrs_base = 0 };
void spftrs_ ( char const* transr, char const* uplo, int32_t const* n, int32_t const* nrhs, float const* A, float* B, int32_t const* ldb, int32_t* info , size_t, size_t );
enum { LAPACK_zpftrs_base = 0 };
void zpftrs_ ( char const* transr, char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* A, double _Complex* B, int32_t const* ldb, int32_t* info , size_t, size_t );
enum { LAPACK_cpocon_base = 0 };
void cpocon_ ( char const* uplo, int32_t const* n, float _Complex const* A, int32_t const* lda, float const* anorm, float* rcond, float _Complex* work, float* rwork, int32_t* info , size_t );
enum { LAPACK_dpocon_base = 0 };
void dpocon_ ( char const* uplo, int32_t const* n, double const* A, int32_t const* lda, double const* anorm, double* rcond, double* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_spocon_base = 0 };
void spocon_ ( char const* uplo, int32_t const* n, float const* A, int32_t const* lda, float const* anorm, float* rcond, float* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_zpocon_base = 0 };
void zpocon_ ( char const* uplo, int32_t const* n, double _Complex const* A, int32_t const* lda, double const* anorm, double* rcond, double _Complex* work, double* rwork, int32_t* info , size_t );
enum { LAPACK_cpoequ = 0 };
void cpoequ_ ( int32_t const* n, float _Complex const* A, int32_t const* lda, float* S, float* scond, float* amax, int32_t* info );
enum { LAPACK_dpoequ = 0 };
void dpoequ_ ( int32_t const* n, double const* A, int32_t const* lda, double* S, double* scond, double* amax, int32_t* info );
enum { LAPACK_spoequ = 0 };
void spoequ_ ( int32_t const* n, float const* A, int32_t const* lda, float* S, float* scond, float* amax, int32_t* info );
enum { LAPACK_zpoequ = 0 };
void zpoequ_ ( int32_t const* n, double _Complex const* A, int32_t const* lda, double* S, double* scond, double* amax, int32_t* info );
enum { LAPACK_cpoequb = 0 };
void cpoequb_ ( int32_t const* n, float _Complex const* A, int32_t const* lda, float* S, float* scond, float* amax, int32_t* info );
enum { LAPACK_dpoequb = 0 };
void dpoequb_ ( int32_t const* n, double const* A, int32_t const* lda, double* S, double* scond, double* amax, int32_t* info );
enum { LAPACK_spoequb = 0 };
void spoequb_ ( int32_t const* n, float const* A, int32_t const* lda, float* S, float* scond, float* amax, int32_t* info );
enum { LAPACK_zpoequb = 0 };
void zpoequb_ ( int32_t const* n, double _Complex const* A, int32_t const* lda, double* S, double* scond, double* amax, int32_t* info );
enum { LAPACK_cporfs_base = 0 };
void cporfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, float _Complex const* AF, int32_t const* ldaf, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t );
enum { LAPACK_dporfs_base = 0 };
void dporfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double const* A, int32_t const* lda, double const* AF, int32_t const* ldaf, double const* B, int32_t const* ldb, double* X, int32_t const* ldx, double* ferr, double* berr, double* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_sporfs_base = 0 };
void sporfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float const* A, int32_t const* lda, float const* AF, int32_t const* ldaf, float const* B, int32_t const* ldb, float* X, int32_t const* ldx, float* ferr, float* berr, float* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_zporfs_base = 0 };
void zporfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, double _Complex const* AF, int32_t const* ldaf, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t );
enum { LAPACK_cporfsx_base = 0 };
void cporfsx_ ( char const* uplo, char const* equed, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, float _Complex const* AF, int32_t const* ldaf, const float* S, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* berr, int32_t const* n_err_bnds, float* err_bnds_norm, float* err_bnds_comp, int32_t const* nparams, float* params, float _Complex* work, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_dporfsx_base = 0 };
void dporfsx_ ( char const* uplo, char const* equed, int32_t const* n, int32_t const* nrhs, double const* A, int32_t const* lda, double const* AF, int32_t const* ldaf, const double* S, double const* B, int32_t const* ldb, double* X, int32_t const* ldx, double* rcond, double* berr, int32_t const* n_err_bnds, double* err_bnds_norm, double* err_bnds_comp, int32_t const* nparams, double* params, double* work, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_sporfsx_base = 0 };
void sporfsx_ ( char const* uplo, char const* equed, int32_t const* n, int32_t const* nrhs, float const* A, int32_t const* lda, float const* AF, int32_t const* ldaf, const float* S, float const* B, int32_t const* ldb, float* X, int32_t const* ldx, float* rcond, float* berr, int32_t const* n_err_bnds, float* err_bnds_norm, float* err_bnds_comp, int32_t const* nparams, float* params, float* work, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_zporfsx_base = 0 };
void zporfsx_ ( char const* uplo, char const* equed, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, double _Complex const* AF, int32_t const* ldaf, const double* S, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* berr, int32_t const* n_err_bnds, double* err_bnds_norm, double* err_bnds_comp, int32_t const* nparams, double* params, double _Complex* work, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_cposv_base = 0 };
void cposv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dposv_base = 0 };
void dposv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double* A, int32_t const* lda, double* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_sposv_base = 0 };
void sposv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float* A, int32_t const* lda, float* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zposv_base = 0 };
void zposv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dsposv_base = 0 };
void dsposv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double* A, int32_t const* lda, double const* B, int32_t const* ldb, double* X, int32_t const* ldx, double* work, float* swork, int32_t* iter, int32_t* info , size_t );
enum { LAPACK_zcposv_base = 0 };
void zcposv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double _Complex* work, float _Complex* swork, double* rwork, int32_t* iter, int32_t* info , size_t );
enum { LAPACK_cposvx_base = 0 };
void cposvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, float _Complex* AF, int32_t const* ldaf, char* equed, float* S, float _Complex* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dposvx_base = 0 };
void dposvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, double* A, int32_t const* lda, double* AF, int32_t const* ldaf, char* equed, double* S, double* B, int32_t const* ldb, double* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sposvx_base = 0 };
void sposvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, float* A, int32_t const* lda, float* AF, int32_t const* ldaf, char* equed, float* S, float* B, int32_t const* ldb, float* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zposvx_base = 0 };
void zposvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, double _Complex* AF, int32_t const* ldaf, char* equed, double* S, double _Complex* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cposvxx_base = 0 };
void cposvxx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, float _Complex* AF, int32_t const* ldaf, char* equed, float* S, float _Complex* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* rpvgrw, float* berr, int32_t const* n_err_bnds, float* err_bnds_norm, float* err_bnds_comp, int32_t const* nparams, float* params, float _Complex* work, float* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dposvxx_base = 0 };
void dposvxx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, double* A, int32_t const* lda, double* AF, int32_t const* ldaf, char* equed, double* S, double* B, int32_t const* ldb, double* X, int32_t const* ldx, double* rcond, double* rpvgrw, double* berr, int32_t const* n_err_bnds, double* err_bnds_norm, double* err_bnds_comp, int32_t const* nparams, double* params, double* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sposvxx_base = 0 };
void sposvxx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, float* A, int32_t const* lda, float* AF, int32_t const* ldaf, char* equed, float* S, float* B, int32_t const* ldb, float* X, int32_t const* ldx, float* rcond, float* rpvgrw, float* berr, int32_t const* n_err_bnds, float* err_bnds_norm, float* err_bnds_comp, int32_t const* nparams, float* params, float* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zposvxx_base = 0 };
void zposvxx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, double _Complex* AF, int32_t const* ldaf, char* equed, double* S, double _Complex* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* rpvgrw, double* berr, int32_t const* n_err_bnds, double* err_bnds_norm, double* err_bnds_comp, int32_t const* nparams, double* params, double _Complex* work, double* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cpotf2_base = 0 };
void cpotf2_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_dpotf2_base = 0 };
void dpotf2_ ( char const* uplo, int32_t const* n, double* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_spotf2_base = 0 };
void spotf2_ ( char const* uplo, int32_t const* n, float* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_zpotf2_base = 0 };
void zpotf2_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_cpotrf_base = 0 };
void cpotrf_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_dpotrf_base = 0 };
void dpotrf_ ( char const* uplo, int32_t const* n, double* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_spotrf_base = 0 };
void spotrf_ ( char const* uplo, int32_t const* n, float* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_zpotrf_base = 0 };
void zpotrf_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_cpotrf2_base = 0 };
void cpotrf2_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_dpotrf2_base = 0 };
void dpotrf2_ ( char const* uplo, int32_t const* n, double* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_spotrf2_base = 0 };
void spotrf2_ ( char const* uplo, int32_t const* n, float* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_zpotrf2_base = 0 };
void zpotrf2_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_cpotri_base = 0 };
void cpotri_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_dpotri_base = 0 };
void dpotri_ ( char const* uplo, int32_t const* n, double* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_spotri_base = 0 };
void spotri_ ( char const* uplo, int32_t const* n, float* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_zpotri_base = 0 };
void zpotri_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_cpotrs_base = 0 };
void cpotrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dpotrs_base = 0 };
void dpotrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double const* A, int32_t const* lda, double* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_spotrs_base = 0 };
void spotrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float const* A, int32_t const* lda, float* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zpotrs_base = 0 };
void zpotrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_cppcon_base = 0 };
void cppcon_ ( char const* uplo, int32_t const* n, float _Complex const* AP, float const* anorm, float* rcond, float _Complex* work, float* rwork, int32_t* info , size_t );
enum { LAPACK_dppcon_base = 0 };
void dppcon_ ( char const* uplo, int32_t const* n, double const* AP, double const* anorm, double* rcond, double* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_sppcon_base = 0 };
void sppcon_ ( char const* uplo, int32_t const* n, float const* AP, float const* anorm, float* rcond, float* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_zppcon_base = 0 };
void zppcon_ ( char const* uplo, int32_t const* n, double _Complex const* AP, double const* anorm, double* rcond, double _Complex* work, double* rwork, int32_t* info , size_t );
enum { LAPACK_cppequ_base = 0 };
void cppequ_ ( char const* uplo, int32_t const* n, float _Complex const* AP, float* S, float* scond, float* amax, int32_t* info , size_t );
enum { LAPACK_dppequ_base = 0 };
void dppequ_ ( char const* uplo, int32_t const* n, double const* AP, double* S, double* scond, double* amax, int32_t* info , size_t );
enum { LAPACK_sppequ_base = 0 };
void sppequ_ ( char const* uplo, int32_t const* n, float const* AP, float* S, float* scond, float* amax, int32_t* info , size_t );
enum { LAPACK_zppequ_base = 0 };
void zppequ_ ( char const* uplo, int32_t const* n, double _Complex const* AP, double* S, double* scond, double* amax, int32_t* info , size_t );
enum { LAPACK_cpprfs_base = 0 };
void cpprfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* AP, float _Complex const* AFP, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t );
enum { LAPACK_dpprfs_base = 0 };
void dpprfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double const* AP, double const* AFP, double const* B, int32_t const* ldb, double* X, int32_t const* ldx, double* ferr, double* berr, double* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_spprfs_base = 0 };
void spprfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float const* AP, float const* AFP, float const* B, int32_t const* ldb, float* X, int32_t const* ldx, float* ferr, float* berr, float* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_zpprfs_base = 0 };
void zpprfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* AP, double _Complex const* AFP, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t );
enum { LAPACK_cppsv_base = 0 };
void cppsv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex* AP, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dppsv_base = 0 };
void dppsv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double* AP, double* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_sppsv_base = 0 };
void sppsv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float* AP, float* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zppsv_base = 0 };
void zppsv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* AP, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_cppsvx_base = 0 };
void cppsvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex* AP, float _Complex* AFP, char* equed, float* S, float _Complex* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dppsvx_base = 0 };
void dppsvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, double* AP, double* AFP, char* equed, double* S, double* B, int32_t const* ldb, double* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sppsvx_base = 0 };
void sppsvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, float* AP, float* AFP, char* equed, float* S, float* B, int32_t const* ldb, float* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zppsvx_base = 0 };
void zppsvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* AP, double _Complex* AFP, char* equed, double* S, double _Complex* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cpptrf_base = 0 };
void cpptrf_ ( char const* uplo, int32_t const* n, float _Complex* AP, int32_t* info , size_t );
enum { LAPACK_dpptrf_base = 0 };
void dpptrf_ ( char const* uplo, int32_t const* n, double* AP, int32_t* info , size_t );
enum { LAPACK_spptrf_base = 0 };
void spptrf_ ( char const* uplo, int32_t const* n, float* AP, int32_t* info , size_t );
enum { LAPACK_zpptrf_base = 0 };
void zpptrf_ ( char const* uplo, int32_t const* n, double _Complex* AP, int32_t* info , size_t );
enum { LAPACK_cpptri_base = 0 };
void cpptri_ ( char const* uplo, int32_t const* n, float _Complex* AP, int32_t* info , size_t );
enum { LAPACK_dpptri_base = 0 };
void dpptri_ ( char const* uplo, int32_t const* n, double* AP, int32_t* info , size_t );
enum { LAPACK_spptri_base = 0 };
void spptri_ ( char const* uplo, int32_t const* n, float* AP, int32_t* info , size_t );
enum { LAPACK_zpptri_base = 0 };
void zpptri_ ( char const* uplo, int32_t const* n, double _Complex* AP, int32_t* info , size_t );
enum { LAPACK_cpptrs_base = 0 };
void cpptrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* AP, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dpptrs_base = 0 };
void dpptrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double const* AP, double* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_spptrs_base = 0 };
void spptrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float const* AP, float* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zpptrs_base = 0 };
void zpptrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* AP, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_cpstrf_base = 0 };
void cpstrf_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* piv, int32_t* rank, float const* tol, float* work, int32_t* info , size_t );
enum { LAPACK_dpstrf_base = 0 };
void dpstrf_ ( char const* uplo, int32_t const* n, double* A, int32_t const* lda, int32_t* piv, int32_t* rank, double const* tol, double* work, int32_t* info , size_t );
enum { LAPACK_spstrf_base = 0 };
void spstrf_ ( char const* uplo, int32_t const* n, float* A, int32_t const* lda, int32_t* piv, int32_t* rank, float const* tol, float* work, int32_t* info , size_t );
enum { LAPACK_zpstrf_base = 0 };
void zpstrf_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* piv, int32_t* rank, double const* tol, double* work, int32_t* info , size_t );
enum { LAPACK_cptcon = 0 };
void cptcon_ ( int32_t const* n, float const* D, float _Complex const* E, float const* anorm, float* rcond, float* rwork, int32_t* info );
enum { LAPACK_dptcon = 0 };
void dptcon_ ( int32_t const* n, double const* D, double const* E, double const* anorm, double* rcond, double* work, int32_t* info );
enum { LAPACK_sptcon = 0 };
void sptcon_ ( int32_t const* n, float const* D, float const* E, float const* anorm, float* rcond, float* work, int32_t* info );
enum { LAPACK_zptcon = 0 };
void zptcon_ ( int32_t const* n, double const* D, double _Complex const* E, double const* anorm, double* rcond, double* rwork, int32_t* info );
enum { LAPACK_cpteqr_base = 0 };
void cpteqr_ ( char const* compz, int32_t const* n, float* D, float* E, float _Complex* Z, int32_t const* ldz, float* work, int32_t* info , size_t );
enum { LAPACK_dpteqr_base = 0 };
void dpteqr_ ( char const* compz, int32_t const* n, double* D, double* E, double* Z, int32_t const* ldz, double* work, int32_t* info , size_t );
enum { LAPACK_spteqr_base = 0 };
void spteqr_ ( char const* compz, int32_t const* n, float* D, float* E, float* Z, int32_t const* ldz, float* work, int32_t* info , size_t );
enum { LAPACK_zpteqr_base = 0 };
void zpteqr_ ( char const* compz, int32_t const* n, double* D, double* E, double _Complex* Z, int32_t const* ldz, double* work, int32_t* info , size_t );
enum { LAPACK_cptrfs_base = 0 };
void cptrfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float const* D, float _Complex const* E, float const* DF, float _Complex const* EF, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t );
enum { LAPACK_dptrfs = 0 };
void dptrfs_ ( int32_t const* n, int32_t const* nrhs, double const* D, double const* E, double const* DF, double const* EF, double const* B, int32_t const* ldb, double* X, int32_t const* ldx, double* ferr, double* berr, double* work, int32_t* info );
enum { LAPACK_sptrfs = 0 };
void sptrfs_ ( int32_t const* n, int32_t const* nrhs, float const* D, float const* E, float const* DF, float const* EF, float const* B, int32_t const* ldb, float* X, int32_t const* ldx, float* ferr, float* berr, float* work, int32_t* info );
enum { LAPACK_zptrfs_base = 0 };
void zptrfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double const* D, double _Complex const* E, double const* DF, double _Complex const* EF, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t );
enum { LAPACK_cptsv = 0 };
void cptsv_ ( int32_t const* n, int32_t const* nrhs, float* D, float _Complex* E, float _Complex* B, int32_t const* ldb, int32_t* info );
enum { LAPACK_dptsv = 0 };
void dptsv_ ( int32_t const* n, int32_t const* nrhs, double* D, double* E, double* B, int32_t const* ldb, int32_t* info );
enum { LAPACK_sptsv = 0 };
void sptsv_ ( int32_t const* n, int32_t const* nrhs, float* D, float* E, float* B, int32_t const* ldb, int32_t* info );
enum { LAPACK_zptsv = 0 };
void zptsv_ ( int32_t const* n, int32_t const* nrhs, double* D, double _Complex* E, double _Complex* B, int32_t const* ldb, int32_t* info );
enum { LAPACK_cptsvx_base = 0 };
void cptsvx_ ( char const* fact, int32_t const* n, int32_t const* nrhs, float const* D, float _Complex const* E, float* DF, float _Complex* EF, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t );
enum { LAPACK_dptsvx_base = 0 };
void dptsvx_ ( char const* fact, int32_t const* n, int32_t const* nrhs, double const* D, double const* E, double* DF, double* EF, double const* B, int32_t const* ldb, double* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double* work, int32_t* info , size_t );
enum { LAPACK_sptsvx_base = 0 };
void sptsvx_ ( char const* fact, int32_t const* n, int32_t const* nrhs, float const* D, float const* E, float* DF, float* EF, float const* B, int32_t const* ldb, float* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float* work, int32_t* info , size_t );
enum { LAPACK_zptsvx_base = 0 };
void zptsvx_ ( char const* fact, int32_t const* n, int32_t const* nrhs, double const* D, double _Complex const* E, double* DF, double _Complex* EF, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t );
enum { LAPACK_cpttrf = 0 };
void cpttrf_ ( int32_t const* n, float* D, float _Complex* E, int32_t* info );
enum { LAPACK_dpttrf = 0 };
void dpttrf_ ( int32_t const* n, double* D, double* E, int32_t* info );
enum { LAPACK_spttrf = 0 };
void spttrf_ ( int32_t const* n, float* D, float* E, int32_t* info );
enum { LAPACK_zpttrf = 0 };
void zpttrf_ ( int32_t const* n, double* D, double _Complex* E, int32_t* info );
enum { LAPACK_cpttrs_base = 0 };
void cpttrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float const* D, float _Complex const* E, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dpttrs = 0 };
void dpttrs_ ( int32_t const* n, int32_t const* nrhs, double const* D, double const* E, double* B, int32_t const* ldb, int32_t* info );
enum { LAPACK_spttrs = 0 };
void spttrs_ ( int32_t const* n, int32_t const* nrhs, float const* D, float const* E, float* B, int32_t const* ldb, int32_t* info );
enum { LAPACK_zpttrs_base = 0 };
void zpttrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double const* D, double _Complex const* E, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dsbev_base = 0 };
void dsbev_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* kd, double* AB, int32_t const* ldab, double* W, double* Z, int32_t const* ldz, double* work, int32_t* info , size_t, size_t );
enum { LAPACK_ssbev_base = 0 };
void ssbev_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* kd, float* AB, int32_t const* ldab, float* W, float* Z, int32_t const* ldz, float* work, int32_t* info , size_t, size_t );
enum { LAPACK_dsbev_2stage_base = 0 };
void dsbev_2stage_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* kd, double* AB, int32_t const* ldab, double* W, double* Z, int32_t const* ldz, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_ssbev_2stage_base = 0 };
void ssbev_2stage_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* kd, float* AB, int32_t const* ldab, float* W, float* Z, int32_t const* ldz, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_dsbevd_base = 0 };
void dsbevd_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* kd, double* AB, int32_t const* ldab, double* W, double* Z, int32_t const* ldz, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_ssbevd_base = 0 };
void ssbevd_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* kd, float* AB, int32_t const* ldab, float* W, float* Z, int32_t const* ldz, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_dsbevd_2stage_base = 0 };
void dsbevd_2stage_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* kd, double* AB, int32_t const* ldab, double* W, double* Z, int32_t const* ldz, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_ssbevd_2stage_base = 0 };
void ssbevd_2stage_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* kd, float* AB, int32_t const* ldab, float* W, float* Z, int32_t const* ldz, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_dsbevx_base = 0 };
void dsbevx_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, int32_t const* kd, double* AB, int32_t const* ldab, double* Q, int32_t const* ldq, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double* Z, int32_t const* ldz, double* work, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ssbevx_base = 0 };
void ssbevx_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, int32_t const* kd, float* AB, int32_t const* ldab, float* Q, int32_t const* ldq, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float* Z, int32_t const* ldz, float* work, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dsbevx_2stage_base = 0 };
void dsbevx_2stage_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, int32_t const* kd, double* AB, int32_t const* ldab, double* Q, int32_t const* ldq, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double* Z, int32_t const* ldz, double* work, int32_t const* lwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ssbevx_2stage_base = 0 };
void ssbevx_2stage_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, int32_t const* kd, float* AB, int32_t const* ldab, float* Q, int32_t const* ldq, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float* Z, int32_t const* ldz, float* work, int32_t const* lwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dsbgst_base = 0 };
void dsbgst_ ( char const* vect, char const* uplo, int32_t const* n, int32_t const* ka, int32_t const* kb, double* AB, int32_t const* ldab, double const* BB, int32_t const* ldbb, double* X, int32_t const* ldx, double* work, int32_t* info , size_t, size_t );
enum { LAPACK_ssbgst_base = 0 };
void ssbgst_ ( char const* vect, char const* uplo, int32_t const* n, int32_t const* ka, int32_t const* kb, float* AB, int32_t const* ldab, float const* BB, int32_t const* ldbb, float* X, int32_t const* ldx, float* work, int32_t* info , size_t, size_t );
enum { LAPACK_dsbgv_base = 0 };
void dsbgv_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* ka, int32_t const* kb, double* AB, int32_t const* ldab, double* BB, int32_t const* ldbb, double* W, double* Z, int32_t const* ldz, double* work, int32_t* info , size_t, size_t );
enum { LAPACK_ssbgv_base = 0 };
void ssbgv_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* ka, int32_t const* kb, float* AB, int32_t const* ldab, float* BB, int32_t const* ldbb, float* W, float* Z, int32_t const* ldz, float* work, int32_t* info , size_t, size_t );
enum { LAPACK_dsbgvd_base = 0 };
void dsbgvd_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* ka, int32_t const* kb, double* AB, int32_t const* ldab, double* BB, int32_t const* ldbb, double* W, double* Z, int32_t const* ldz, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_ssbgvd_base = 0 };
void ssbgvd_ ( char const* jobz, char const* uplo, int32_t const* n, int32_t const* ka, int32_t const* kb, float* AB, int32_t const* ldab, float* BB, int32_t const* ldbb, float* W, float* Z, int32_t const* ldz, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_dsbgvx_base = 0 };
void dsbgvx_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, int32_t const* ka, int32_t const* kb, double* AB, int32_t const* ldab, double* BB, int32_t const* ldbb, double* Q, int32_t const* ldq, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double* Z, int32_t const* ldz, double* work, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ssbgvx_base = 0 };
void ssbgvx_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, int32_t const* ka, int32_t const* kb, float* AB, int32_t const* ldab, float* BB, int32_t const* ldbb, float* Q, int32_t const* ldq, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float* Z, int32_t const* ldz, float* work, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dsbtrd_base = 0 };
void dsbtrd_ ( char const* vect, char const* uplo, int32_t const* n, int32_t const* kd, double* AB, int32_t const* ldab, double* D, double* E, double* Q, int32_t const* ldq, double* work, int32_t* info , size_t, size_t );
enum { LAPACK_ssbtrd_base = 0 };
void ssbtrd_ ( char const* vect, char const* uplo, int32_t const* n, int32_t const* kd, float* AB, int32_t const* ldab, float* D, float* E, float* Q, int32_t const* ldq, float* work, int32_t* info , size_t, size_t );
enum { LAPACK_dsfrk_base = 0 };
void dsfrk_ ( char const* transr, char const* uplo, char const* trans, int32_t const* n, int32_t const* k, double const* alpha, double const* A, int32_t const* lda, double const* beta, double* C , size_t, size_t, size_t );
enum { LAPACK_ssfrk_base = 0 };
void ssfrk_ ( char const* transr, char const* uplo, char const* trans, int32_t const* n, int32_t const* k, float const* alpha, float const* A, int32_t const* lda, float const* beta, float* C , size_t, size_t, size_t );
enum { LAPACK_cspcon_base = 0 };
void cspcon_ ( char const* uplo, int32_t const* n, float _Complex const* AP, int32_t const* ipiv, float const* anorm, float* rcond, float _Complex* work, int32_t* info , size_t );
enum { LAPACK_dspcon_base = 0 };
void dspcon_ ( char const* uplo, int32_t const* n, double const* AP, int32_t const* ipiv, double const* anorm, double* rcond, double* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_sspcon_base = 0 };
void sspcon_ ( char const* uplo, int32_t const* n, float const* AP, int32_t const* ipiv, float const* anorm, float* rcond, float* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_zspcon_base = 0 };
void zspcon_ ( char const* uplo, int32_t const* n, double _Complex const* AP, int32_t const* ipiv, double const* anorm, double* rcond, double _Complex* work, int32_t* info , size_t );
enum { LAPACK_dspev_base = 0 };
void dspev_ ( char const* jobz, char const* uplo, int32_t const* n, double* AP, double* W, double* Z, int32_t const* ldz, double* work, int32_t* info , size_t, size_t );
enum { LAPACK_sspev_base = 0 };
void sspev_ ( char const* jobz, char const* uplo, int32_t const* n, float* AP, float* W, float* Z, int32_t const* ldz, float* work, int32_t* info , size_t, size_t );
enum { LAPACK_dspevd_base = 0 };
void dspevd_ ( char const* jobz, char const* uplo, int32_t const* n, double* AP, double* W, double* Z, int32_t const* ldz, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_sspevd_base = 0 };
void sspevd_ ( char const* jobz, char const* uplo, int32_t const* n, float* AP, float* W, float* Z, int32_t const* ldz, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_dspevx_base = 0 };
void dspevx_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, double* AP, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double* Z, int32_t const* ldz, double* work, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sspevx_base = 0 };
void sspevx_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, float* AP, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float* Z, int32_t const* ldz, float* work, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dspgst_base = 0 };
void dspgst_ ( int32_t const* itype, char const* uplo, int32_t const* n, double* AP, double const* BP, int32_t* info , size_t );
enum { LAPACK_sspgst_base = 0 };
void sspgst_ ( int32_t const* itype, char const* uplo, int32_t const* n, float* AP, float const* BP, int32_t* info , size_t );
enum { LAPACK_dspgv_base = 0 };
void dspgv_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, double* AP, double* BP, double* W, double* Z, int32_t const* ldz, double* work, int32_t* info , size_t, size_t );
enum { LAPACK_sspgv_base = 0 };
void sspgv_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, float* AP, float* BP, float* W, float* Z, int32_t const* ldz, float* work, int32_t* info , size_t, size_t );
enum { LAPACK_dspgvd_base = 0 };
void dspgvd_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, double* AP, double* BP, double* W, double* Z, int32_t const* ldz, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_sspgvd_base = 0 };
void sspgvd_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, float* AP, float* BP, float* W, float* Z, int32_t const* ldz, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_dspgvx_base = 0 };
void dspgvx_ ( int32_t const* itype, char const* jobz, char const* range, char const* uplo, int32_t const* n, double* AP, double* BP, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double* Z, int32_t const* ldz, double* work, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_sspgvx_base = 0 };
void sspgvx_ ( int32_t const* itype, char const* jobz, char const* range, char const* uplo, int32_t const* n, float* AP, float* BP, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float* Z, int32_t const* ldz, float* work, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_csprfs_base = 0 };
void csprfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* AP, float _Complex const* AFP, int32_t const* ipiv, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t );
enum { LAPACK_dsprfs_base = 0 };
void dsprfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double const* AP, double const* AFP, int32_t const* ipiv, double const* B, int32_t const* ldb, double* X, int32_t const* ldx, double* ferr, double* berr, double* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_ssprfs_base = 0 };
void ssprfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float const* AP, float const* AFP, int32_t const* ipiv, float const* B, int32_t const* ldb, float* X, int32_t const* ldx, float* ferr, float* berr, float* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_zsprfs_base = 0 };
void zsprfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* AP, double _Complex const* AFP, int32_t const* ipiv, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t );
enum { LAPACK_cspsv_base = 0 };
void cspsv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex* AP, int32_t* ipiv, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dspsv_base = 0 };
void dspsv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double* AP, int32_t* ipiv, double* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_sspsv_base = 0 };
void sspsv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float* AP, int32_t* ipiv, float* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zspsv_base = 0 };
void zspsv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* AP, int32_t* ipiv, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_cspsvx_base = 0 };
void cspsvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* AP, float _Complex* AFP, int32_t* ipiv, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_dspsvx_base = 0 };
void dspsvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, double const* AP, double* AFP, int32_t* ipiv, double const* B, int32_t const* ldb, double* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double* work, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_sspsvx_base = 0 };
void sspsvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, float const* AP, float* AFP, int32_t* ipiv, float const* B, int32_t const* ldb, float* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float* work, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_zspsvx_base = 0 };
void zspsvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* AP, double _Complex* AFP, int32_t* ipiv, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_dsptrd_base = 0 };
void dsptrd_ ( char const* uplo, int32_t const* n, double* AP, double* D, double* E, double* tau, int32_t* info , size_t );
enum { LAPACK_ssptrd_base = 0 };
void ssptrd_ ( char const* uplo, int32_t const* n, float* AP, float* D, float* E, float* tau, int32_t* info , size_t );
enum { LAPACK_csptrf_base = 0 };
void csptrf_ ( char const* uplo, int32_t const* n, float _Complex* AP, int32_t* ipiv, int32_t* info , size_t );
enum { LAPACK_dsptrf_base = 0 };
void dsptrf_ ( char const* uplo, int32_t const* n, double* AP, int32_t* ipiv, int32_t* info , size_t );
enum { LAPACK_ssptrf_base = 0 };
void ssptrf_ ( char const* uplo, int32_t const* n, float* AP, int32_t* ipiv, int32_t* info , size_t );
enum { LAPACK_zsptrf_base = 0 };
void zsptrf_ ( char const* uplo, int32_t const* n, double _Complex* AP, int32_t* ipiv, int32_t* info , size_t );
enum { LAPACK_csptri_base = 0 };
void csptri_ ( char const* uplo, int32_t const* n, float _Complex* AP, int32_t const* ipiv, float _Complex* work, int32_t* info , size_t );
enum { LAPACK_dsptri_base = 0 };
void dsptri_ ( char const* uplo, int32_t const* n, double* AP, int32_t const* ipiv, double* work, int32_t* info , size_t );
enum { LAPACK_ssptri_base = 0 };
void ssptri_ ( char const* uplo, int32_t const* n, float* AP, int32_t const* ipiv, float* work, int32_t* info , size_t );
enum { LAPACK_zsptri_base = 0 };
void zsptri_ ( char const* uplo, int32_t const* n, double _Complex* AP, int32_t const* ipiv, double _Complex* work, int32_t* info , size_t );
enum { LAPACK_csptrs_base = 0 };
void csptrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* AP, int32_t const* ipiv, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dsptrs_base = 0 };
void dsptrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double const* AP, int32_t const* ipiv, double* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_ssptrs_base = 0 };
void ssptrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float const* AP, int32_t const* ipiv, float* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zsptrs_base = 0 };
void zsptrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* AP, int32_t const* ipiv, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dstebz_base = 0 };
void dstebz_ ( char const* range, char const* order, int32_t const* n, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, double const* D, double const* E, int32_t* m, int32_t* nsplit, double* W, int32_t* IBLOCK, int32_t* ISPLIT, double* work, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_sstebz_base = 0 };
void sstebz_ ( char const* range, char const* order, int32_t const* n, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, float const* D, float const* E, int32_t* m, int32_t* nsplit, float* W, int32_t* IBLOCK, int32_t* ISPLIT, float* work, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_cstedc_base = 0 };
void cstedc_ ( char const* compz, int32_t const* n, float* D, float* E, float _Complex* Z, int32_t const* ldz, float _Complex* work, int32_t const* lwork, float* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t );
enum { LAPACK_dstedc_base = 0 };
void dstedc_ ( char const* compz, int32_t const* n, double* D, double* E, double* Z, int32_t const* ldz, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t );
enum { LAPACK_sstedc_base = 0 };
void sstedc_ ( char const* compz, int32_t const* n, float* D, float* E, float* Z, int32_t const* ldz, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t );
enum { LAPACK_zstedc_base = 0 };
void zstedc_ ( char const* compz, int32_t const* n, double* D, double* E, double _Complex* Z, int32_t const* ldz, double _Complex* work, int32_t const* lwork, double* rwork, int32_t const* lrwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t );
enum { LAPACK_cstegr_base = 0 };
void cstegr_ ( char const* jobz, char const* range, int32_t const* n, float* D, float* E, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float _Complex* Z, int32_t const* ldz, int32_t* ISUPPZ, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_dstegr_base = 0 };
void dstegr_ ( char const* jobz, char const* range, int32_t const* n, double* D, double* E, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double* Z, int32_t const* ldz, int32_t* ISUPPZ, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_sstegr_base = 0 };
void sstegr_ ( char const* jobz, char const* range, int32_t const* n, float* D, float* E, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float* Z, int32_t const* ldz, int32_t* ISUPPZ, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_zstegr_base = 0 };
void zstegr_ ( char const* jobz, char const* range, int32_t const* n, double* D, double* E, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double _Complex* Z, int32_t const* ldz, int32_t* ISUPPZ, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_cstein = 0 };
void cstein_ ( int32_t const* n, float const* D, float const* E, int32_t const* m, float const* W, int32_t const* IBLOCK, int32_t const* ISPLIT, float _Complex* Z, int32_t const* ldz, float* work, int32_t* iwork, int32_t* IFAIL, int32_t* info );
enum { LAPACK_dstein = 0 };
void dstein_ ( int32_t const* n, double const* D, double const* E, int32_t const* m, double const* W, int32_t const* IBLOCK, int32_t const* ISPLIT, double* Z, int32_t const* ldz, double* work, int32_t* iwork, int32_t* IFAIL, int32_t* info );
enum { LAPACK_sstein = 0 };
void sstein_ ( int32_t const* n, float const* D, float const* E, int32_t const* m, float const* W, int32_t const* IBLOCK, int32_t const* ISPLIT, float* Z, int32_t const* ldz, float* work, int32_t* iwork, int32_t* IFAIL, int32_t* info );
enum { LAPACK_zstein = 0 };
void zstein_ ( int32_t const* n, double const* D, double const* E, int32_t const* m, double const* W, int32_t const* IBLOCK, int32_t const* ISPLIT, double _Complex* Z, int32_t const* ldz, double* work, int32_t* iwork, int32_t* IFAIL, int32_t* info );
enum { LAPACK_cstemr_base = 0 };
void cstemr_ ( char const* jobz, char const* range, int32_t const* n, float* D, float* E, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, int32_t* m, float* W, float _Complex* Z, int32_t const* ldz, int32_t const* nzc, int32_t* ISUPPZ, int32_t* tryrac, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_dstemr_base = 0 };
void dstemr_ ( char const* jobz, char const* range, int32_t const* n, double* D, double* E, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, int32_t* m, double* W, double* Z, int32_t const* ldz, int32_t const* nzc, int32_t* ISUPPZ, int32_t* tryrac, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_sstemr_base = 0 };
void sstemr_ ( char const* jobz, char const* range, int32_t const* n, float* D, float* E, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, int32_t* m, float* W, float* Z, int32_t const* ldz, int32_t const* nzc, int32_t* ISUPPZ, int32_t* tryrac, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_zstemr_base = 0 };
void zstemr_ ( char const* jobz, char const* range, int32_t const* n, double* D, double* E, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, int32_t* m, double* W, double _Complex* Z, int32_t const* ldz, int32_t const* nzc, int32_t* ISUPPZ, int32_t* tryrac, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_csteqr_base = 0 };
void csteqr_ ( char const* compz, int32_t const* n, float* D, float* E, float _Complex* Z, int32_t const* ldz, float* work, int32_t* info , size_t );
enum { LAPACK_dsteqr_base = 0 };
void dsteqr_ ( char const* compz, int32_t const* n, double* D, double* E, double* Z, int32_t const* ldz, double* work, int32_t* info , size_t );
enum { LAPACK_ssteqr_base = 0 };
void ssteqr_ ( char const* compz, int32_t const* n, float* D, float* E, float* Z, int32_t const* ldz, float* work, int32_t* info , size_t );
enum { LAPACK_zsteqr_base = 0 };
void zsteqr_ ( char const* compz, int32_t const* n, double* D, double* E, double _Complex* Z, int32_t const* ldz, double* work, int32_t* info , size_t );
enum { LAPACK_dsterf = 0 };
void dsterf_ ( int32_t const* n, double* D, double* E, int32_t* info );
enum { LAPACK_ssterf = 0 };
void ssterf_ ( int32_t const* n, float* D, float* E, int32_t* info );
enum { LAPACK_dstev_base = 0 };
void dstev_ ( char const* jobz, int32_t const* n, double* D, double* E, double* Z, int32_t const* ldz, double* work, int32_t* info , size_t );
enum { LAPACK_sstev_base = 0 };
void sstev_ ( char const* jobz, int32_t const* n, float* D, float* E, float* Z, int32_t const* ldz, float* work, int32_t* info , size_t );
enum { LAPACK_dstevd_base = 0 };
void dstevd_ ( char const* jobz, int32_t const* n, double* D, double* E, double* Z, int32_t const* ldz, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t );
enum { LAPACK_sstevd_base = 0 };
void sstevd_ ( char const* jobz, int32_t const* n, float* D, float* E, float* Z, int32_t const* ldz, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t );
enum { LAPACK_dstevr_base = 0 };
void dstevr_ ( char const* jobz, char const* range, int32_t const* n, double* D, double* E, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double* Z, int32_t const* ldz, int32_t* ISUPPZ, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_sstevr_base = 0 };
void sstevr_ ( char const* jobz, char const* range, int32_t const* n, float* D, float* E, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float* Z, int32_t const* ldz, int32_t* ISUPPZ, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_dstevx_base = 0 };
void dstevx_ ( char const* jobz, char const* range, int32_t const* n, double* D, double* E, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double* Z, int32_t const* ldz, double* work, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t );
enum { LAPACK_sstevx_base = 0 };
void sstevx_ ( char const* jobz, char const* range, int32_t const* n, float* D, float* E, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float* Z, int32_t const* ldz, float* work, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t );
enum { LAPACK_csycon_base = 0 };
void csycon_ ( char const* uplo, int32_t const* n, float _Complex const* A, int32_t const* lda, int32_t const* ipiv, float const* anorm, float* rcond, float _Complex* work, int32_t* info , size_t );
enum { LAPACK_dsycon_base = 0 };
void dsycon_ ( char const* uplo, int32_t const* n, double const* A, int32_t const* lda, int32_t const* ipiv, double const* anorm, double* rcond, double* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_ssycon_base = 0 };
void ssycon_ ( char const* uplo, int32_t const* n, float const* A, int32_t const* lda, int32_t const* ipiv, float const* anorm, float* rcond, float* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_zsycon_base = 0 };
void zsycon_ ( char const* uplo, int32_t const* n, double _Complex const* A, int32_t const* lda, int32_t const* ipiv, double const* anorm, double* rcond, double _Complex* work, int32_t* info , size_t );
enum { LAPACK_csycon_3_base = 0 };
void csycon_3_ ( char const* uplo, int32_t const* n, float _Complex const* A, int32_t const* lda, float _Complex const* E, int32_t const* ipiv, float const* anorm, float* rcond, float _Complex* work, int32_t* info , size_t );
enum { LAPACK_dsycon_3_base = 0 };
void dsycon_3_ ( char const* uplo, int32_t const* n, double const* A, int32_t const* lda, double const* E, int32_t const* ipiv, double const* anorm, double* rcond, double* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_ssycon_3_base = 0 };
void ssycon_3_ ( char const* uplo, int32_t const* n, float const* A, int32_t const* lda, float const* E, int32_t const* ipiv, float const* anorm, float* rcond, float* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_zsycon_3_base = 0 };
void zsycon_3_ ( char const* uplo, int32_t const* n, double _Complex const* A, int32_t const* lda, double _Complex const* E, int32_t const* ipiv, double const* anorm, double* rcond, double _Complex* work, int32_t* info , size_t );
enum { LAPACK_csyconv_base = 0 };
void csyconv_ ( char const* uplo, char const* way, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t const* ipiv, float _Complex* E, int32_t* info , size_t, size_t );
enum { LAPACK_dsyconv_base = 0 };
void dsyconv_ ( char const* uplo, char const* way, int32_t const* n, double* A, int32_t const* lda, int32_t const* ipiv, double* E, int32_t* info , size_t, size_t );
enum { LAPACK_ssyconv_base = 0 };
void ssyconv_ ( char const* uplo, char const* way, int32_t const* n, float* A, int32_t const* lda, int32_t const* ipiv, float* E, int32_t* info , size_t, size_t );
enum { LAPACK_zsyconv_base = 0 };
void zsyconv_ ( char const* uplo, char const* way, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t const* ipiv, double _Complex* E, int32_t* info , size_t, size_t );
enum { LAPACK_csyequb_base = 0 };
void csyequb_ ( char const* uplo, int32_t const* n, float _Complex const* A, int32_t const* lda, float* S, float* scond, float* amax, float _Complex* work, int32_t* info , size_t );
enum { LAPACK_dsyequb_base = 0 };
void dsyequb_ ( char const* uplo, int32_t const* n, double const* A, int32_t const* lda, double* S, double* scond, double* amax, double* work, int32_t* info , size_t );
enum { LAPACK_ssyequb_base = 0 };
void ssyequb_ ( char const* uplo, int32_t const* n, float const* A, int32_t const* lda, float* S, float* scond, float* amax, float* work, int32_t* info , size_t );
enum { LAPACK_zsyequb_base = 0 };
void zsyequb_ ( char const* uplo, int32_t const* n, double _Complex const* A, int32_t const* lda, double* S, double* scond, double* amax, double _Complex* work, int32_t* info , size_t );
enum { LAPACK_dsyev_base = 0 };
void dsyev_ ( char const* jobz, char const* uplo, int32_t const* n, double* A, int32_t const* lda, double* W, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_ssyev_base = 0 };
void ssyev_ ( char const* jobz, char const* uplo, int32_t const* n, float* A, int32_t const* lda, float* W, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_dsyev_2stage_base = 0 };
void dsyev_2stage_ ( char const* jobz, char const* uplo, int32_t const* n, double* A, int32_t const* lda, double* W, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_ssyev_2stage_base = 0 };
void ssyev_2stage_ ( char const* jobz, char const* uplo, int32_t const* n, float* A, int32_t const* lda, float* W, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_dsyevd_base = 0 };
void dsyevd_ ( char const* jobz, char const* uplo, int32_t const* n, double* A, int32_t const* lda, double* W, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_ssyevd_base = 0 };
void ssyevd_ ( char const* jobz, char const* uplo, int32_t const* n, float* A, int32_t const* lda, float* W, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_dsyevd_2stage_base = 0 };
void dsyevd_2stage_ ( char const* jobz, char const* uplo, int32_t const* n, double* A, int32_t const* lda, double* W, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_ssyevd_2stage_base = 0 };
void ssyevd_2stage_ ( char const* jobz, char const* uplo, int32_t const* n, float* A, int32_t const* lda, float* W, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_dsyevr_base = 0 };
void dsyevr_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, double* A, int32_t const* lda, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double* Z, int32_t const* ldz, int32_t* ISUPPZ, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ssyevr_base = 0 };
void ssyevr_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, float* A, int32_t const* lda, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float* Z, int32_t const* ldz, int32_t* ISUPPZ, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dsyevr_2stage_base = 0 };
void dsyevr_2stage_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, double* A, int32_t const* lda, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double* Z, int32_t const* ldz, int32_t* ISUPPZ, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ssyevr_2stage_base = 0 };
void ssyevr_2stage_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, float* A, int32_t const* lda, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float* Z, int32_t const* ldz, int32_t* ISUPPZ, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dsyevx_base = 0 };
void dsyevx_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, double* A, int32_t const* lda, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double* Z, int32_t const* ldz, double* work, int32_t const* lwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ssyevx_base = 0 };
void ssyevx_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, float* A, int32_t const* lda, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float* Z, int32_t const* ldz, float* work, int32_t const* lwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dsyevx_2stage_base = 0 };
void dsyevx_2stage_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, double* A, int32_t const* lda, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double* Z, int32_t const* ldz, double* work, int32_t const* lwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ssyevx_2stage_base = 0 };
void ssyevx_2stage_ ( char const* jobz, char const* range, char const* uplo, int32_t const* n, float* A, int32_t const* lda, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float* Z, int32_t const* ldz, float* work, int32_t const* lwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dsygst_base = 0 };
void dsygst_ ( int32_t const* itype, char const* uplo, int32_t const* n, double* A, int32_t const* lda, double const* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_ssygst_base = 0 };
void ssygst_ ( int32_t const* itype, char const* uplo, int32_t const* n, float* A, int32_t const* lda, float const* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dsygv_base = 0 };
void dsygv_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* W, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_ssygv_base = 0 };
void ssygv_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* W, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_dsygv_2stage_base = 0 };
void dsygv_2stage_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* W, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_ssygv_2stage_base = 0 };
void ssygv_2stage_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* W, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_dsygvd_base = 0 };
void dsygvd_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* W, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_ssygvd_base = 0 };
void ssygvd_ ( int32_t const* itype, char const* jobz, char const* uplo, int32_t const* n, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* W, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_dsygvx_base = 0 };
void dsygvx_ ( int32_t const* itype, char const* jobz, char const* range, char const* uplo, int32_t const* n, double* A, int32_t const* lda, double* B, int32_t const* ldb, double const* vl, double const* vu, int32_t const* il, int32_t const* iu, double const* abstol, int32_t* m, double* W, double* Z, int32_t const* ldz, double* work, int32_t const* lwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ssygvx_base = 0 };
void ssygvx_ ( int32_t const* itype, char const* jobz, char const* range, char const* uplo, int32_t const* n, float* A, int32_t const* lda, float* B, int32_t const* ldb, float const* vl, float const* vu, int32_t const* il, int32_t const* iu, float const* abstol, int32_t* m, float* W, float* Z, int32_t const* ldz, float* work, int32_t const* lwork, int32_t* iwork, int32_t* IFAIL, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_csyr_base = 0 };
void csyr_ ( char const* uplo, int32_t const* n, float _Complex const* alpha, float _Complex const* X, int32_t const* incx, float _Complex* A, int32_t const* lda , size_t );
enum { LAPACK_zsyr_base = 0 };
void zsyr_ ( char const* uplo, int32_t const* n, double _Complex const* alpha, double _Complex const* X, int32_t const* incx, double _Complex* A, int32_t const* lda , size_t );
enum { LAPACK_csyrfs_base = 0 };
void csyrfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, float _Complex const* AF, int32_t const* ldaf, int32_t const* ipiv, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t );
enum { LAPACK_dsyrfs_base = 0 };
void dsyrfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double const* A, int32_t const* lda, double const* AF, int32_t const* ldaf, int32_t const* ipiv, double const* B, int32_t const* ldb, double* X, int32_t const* ldx, double* ferr, double* berr, double* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_ssyrfs_base = 0 };
void ssyrfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float const* A, int32_t const* lda, float const* AF, int32_t const* ldaf, int32_t const* ipiv, float const* B, int32_t const* ldb, float* X, int32_t const* ldx, float* ferr, float* berr, float* work, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_zsyrfs_base = 0 };
void zsyrfs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, double _Complex const* AF, int32_t const* ldaf, int32_t const* ipiv, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t );
enum { LAPACK_csyrfsx_base = 0 };
void csyrfsx_ ( char const* uplo, char const* equed, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, float _Complex const* AF, int32_t const* ldaf, int32_t const* ipiv, const float* S, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* berr, int32_t const* n_err_bnds, float* err_bnds_norm, float* err_bnds_comp, int32_t const* nparams, float* params, float _Complex* work, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_dsyrfsx_base = 0 };
void dsyrfsx_ ( char const* uplo, char const* equed, int32_t const* n, int32_t const* nrhs, double const* A, int32_t const* lda, double const* AF, int32_t const* ldaf, int32_t const* ipiv, const double* S, double const* B, int32_t const* ldb, double* X, int32_t const* ldx, double* rcond, double* berr, int32_t const* n_err_bnds, double* err_bnds_norm, double* err_bnds_comp, int32_t const* nparams, double* params, double* work, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_ssyrfsx_base = 0 };
void ssyrfsx_ ( char const* uplo, char const* equed, int32_t const* n, int32_t const* nrhs, float const* A, int32_t const* lda, float const* AF, int32_t const* ldaf, int32_t const* ipiv, const float* S, float const* B, int32_t const* ldb, float* X, int32_t const* ldx, float* rcond, float* berr, int32_t const* n_err_bnds, float* err_bnds_norm, float* err_bnds_comp, int32_t const* nparams, float* params, float* work, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_zsyrfsx_base = 0 };
void zsyrfsx_ ( char const* uplo, char const* equed, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, double _Complex const* AF, int32_t const* ldaf, int32_t const* ipiv, const double* S, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* berr, int32_t const* n_err_bnds, double* err_bnds_norm, double* err_bnds_comp, int32_t const* nparams, double* params, double _Complex* work, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_csysv_base = 0 };
void csysv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, int32_t* ipiv, float _Complex* B, int32_t const* ldb, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_dsysv_base = 0 };
void dsysv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double* A, int32_t const* lda, int32_t* ipiv, double* B, int32_t const* ldb, double* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_ssysv_base = 0 };
void ssysv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float* A, int32_t const* lda, int32_t* ipiv, float* B, int32_t const* ldb, float* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zsysv_base = 0 };
void zsysv_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, int32_t* ipiv, double _Complex* B, int32_t const* ldb, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_csysv_aa_base = 0 };
void csysv_aa_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, int32_t* ipiv, float _Complex* B, int32_t const* ldb, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_dsysv_aa_base = 0 };
void dsysv_aa_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double* A, int32_t const* lda, int32_t* ipiv, double* B, int32_t const* ldb, double* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_ssysv_aa_base = 0 };
void ssysv_aa_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float* A, int32_t const* lda, int32_t* ipiv, float* B, int32_t const* ldb, float* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zsysv_aa_base = 0 };
void zsysv_aa_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, int32_t* ipiv, double _Complex* B, int32_t const* ldb, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_csysv_aa_2stage_base = 0 };
void csysv_aa_2stage_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, float _Complex* TB, int32_t const* ltb, int32_t* ipiv, int32_t* ipiv2, float _Complex* B, int32_t const* ldb, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_dsysv_aa_2stage_base = 0 };
void dsysv_aa_2stage_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double* A, int32_t const* lda, double* TB, int32_t const* ltb, int32_t* ipiv, int32_t* ipiv2, double* B, int32_t const* ldb, double* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_ssysv_aa_2stage_base = 0 };
void ssysv_aa_2stage_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float* A, int32_t const* lda, float* TB, int32_t const* ltb, int32_t* ipiv, int32_t* ipiv2, float* B, int32_t const* ldb, float* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zsysv_aa_2stage_base = 0 };
void zsysv_aa_2stage_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, double _Complex* TB, int32_t const* ltb, int32_t* ipiv, int32_t* ipiv2, double _Complex* B, int32_t const* ldb, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_csysv_rk_base = 0 };
void csysv_rk_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, float _Complex* E, int32_t* ipiv, float _Complex* B, int32_t const* ldb, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_dsysv_rk_base = 0 };
void dsysv_rk_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double* A, int32_t const* lda, double* E, int32_t* ipiv, double* B, int32_t const* ldb, double* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_ssysv_rk_base = 0 };
void ssysv_rk_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float* A, int32_t const* lda, float* E, int32_t* ipiv, float* B, int32_t const* ldb, float* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zsysv_rk_base = 0 };
void zsysv_rk_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, double _Complex* E, int32_t* ipiv, double _Complex* B, int32_t const* ldb, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_csysv_rook_base = 0 };
void csysv_rook_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, int32_t* ipiv, float _Complex* B, int32_t const* ldb, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_dsysv_rook_base = 0 };
void dsysv_rook_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double* A, int32_t const* lda, int32_t* ipiv, double* B, int32_t const* ldb, double* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_ssysv_rook_base = 0 };
void ssysv_rook_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float* A, int32_t const* lda, int32_t* ipiv, float* B, int32_t const* ldb, float* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zsysv_rook_base = 0 };
void zsysv_rook_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, int32_t* ipiv, double _Complex* B, int32_t const* ldb, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_csysvx_base = 0 };
void csysvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, float _Complex* AF, int32_t const* ldaf, int32_t* ipiv, float _Complex const* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float _Complex* work, int32_t const* lwork, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_dsysvx_base = 0 };
void dsysvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, double const* A, int32_t const* lda, double* AF, int32_t const* ldaf, int32_t* ipiv, double const* B, int32_t const* ldb, double* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_ssysvx_base = 0 };
void ssysvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, float const* A, int32_t const* lda, float* AF, int32_t const* ldaf, int32_t* ipiv, float const* B, int32_t const* ldb, float* X, int32_t const* ldx, float* rcond, float* ferr, float* berr, float* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_zsysvx_base = 0 };
void zsysvx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, double _Complex* AF, int32_t const* ldaf, int32_t* ipiv, double _Complex const* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* ferr, double* berr, double _Complex* work, int32_t const* lwork, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_csysvxx_base = 0 };
void csysvxx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex* A, int32_t const* lda, float _Complex* AF, int32_t const* ldaf, int32_t* ipiv, char* equed, float* S, float _Complex* B, int32_t const* ldb, float _Complex* X, int32_t const* ldx, float* rcond, float* rpvgrw, float* berr, int32_t const* n_err_bnds, float* err_bnds_norm, float* err_bnds_comp, int32_t const* nparams, float* params, float _Complex* work, float* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dsysvxx_base = 0 };
void dsysvxx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, double* A, int32_t const* lda, double* AF, int32_t const* ldaf, int32_t* ipiv, char* equed, double* S, double* B, int32_t const* ldb, double* X, int32_t const* ldx, double* rcond, double* rpvgrw, double* berr, int32_t const* n_err_bnds, double* err_bnds_norm, double* err_bnds_comp, int32_t const* nparams, double* params, double* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ssysvxx_base = 0 };
void ssysvxx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, float* A, int32_t const* lda, float* AF, int32_t const* ldaf, int32_t* ipiv, char* equed, float* S, float* B, int32_t const* ldb, float* X, int32_t const* ldx, float* rcond, float* rpvgrw, float* berr, int32_t const* n_err_bnds, float* err_bnds_norm, float* err_bnds_comp, int32_t const* nparams, float* params, float* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zsysvxx_base = 0 };
void zsysvxx_ ( char const* fact, char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex* A, int32_t const* lda, double _Complex* AF, int32_t const* ldaf, int32_t* ipiv, char* equed, double* S, double _Complex* B, int32_t const* ldb, double _Complex* X, int32_t const* ldx, double* rcond, double* rpvgrw, double* berr, int32_t const* n_err_bnds, double* err_bnds_norm, double* err_bnds_comp, int32_t const* nparams, double* params, double _Complex* work, double* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_csyswapr_base = 0 };
void csyswapr_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t const* i1, int32_t const* i2 , size_t );
enum { LAPACK_dsyswapr_base = 0 };
void dsyswapr_ ( char const* uplo, int32_t const* n, double* A, int32_t const* lda, int32_t const* i1, int32_t const* i2 , size_t );
enum { LAPACK_ssyswapr_base = 0 };
void ssyswapr_ ( char const* uplo, int32_t const* n, float* A, int32_t const* lda, int32_t const* i1, int32_t const* i2 , size_t );
enum { LAPACK_zsyswapr_base = 0 };
void zsyswapr_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t const* i1, int32_t const* i2 , size_t );
enum { LAPACK_dsytrd_base = 0 };
void dsytrd_ ( char const* uplo, int32_t const* n, double* A, int32_t const* lda, double* D, double* E, double* tau, double* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_ssytrd_base = 0 };
void ssytrd_ ( char const* uplo, int32_t const* n, float* A, int32_t const* lda, float* D, float* E, float* tau, float* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_dsytrd_2stage_base = 0 };
void dsytrd_2stage_ ( char const* vect, char const* uplo, int32_t const* n, double* A, int32_t const* lda, double* D, double* E, double* tau, double* HOUS2, int32_t const* lhous2, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_ssytrd_2stage_base = 0 };
void ssytrd_2stage_ ( char const* vect, char const* uplo, int32_t const* n, float* A, int32_t const* lda, float* D, float* E, float* tau, float* HOUS2, int32_t const* lhous2, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_csytrf_base = 0 };
void csytrf_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* ipiv, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_dsytrf_base = 0 };
void dsytrf_ ( char const* uplo, int32_t const* n, double* A, int32_t const* lda, int32_t* ipiv, double* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_ssytrf_base = 0 };
void ssytrf_ ( char const* uplo, int32_t const* n, float* A, int32_t const* lda, int32_t* ipiv, float* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zsytrf_base = 0 };
void zsytrf_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* ipiv, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_csytrf_aa_base = 0 };
void csytrf_aa_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* ipiv, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_dsytrf_aa_base = 0 };
void dsytrf_aa_ ( char const* uplo, int32_t const* n, double* A, int32_t const* lda, int32_t* ipiv, double* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_ssytrf_aa_base = 0 };
void ssytrf_aa_ ( char const* uplo, int32_t const* n, float* A, int32_t const* lda, int32_t* ipiv, float* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zsytrf_aa_base = 0 };
void zsytrf_aa_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* ipiv, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_csytrf_aa_2stage_base = 0 };
void csytrf_aa_2stage_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* TB, int32_t const* ltb, int32_t* ipiv, int32_t* ipiv2, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_dsytrf_aa_2stage_base = 0 };
void dsytrf_aa_2stage_ ( char const* uplo, int32_t const* n, double* A, int32_t const* lda, double* TB, int32_t const* ltb, int32_t* ipiv, int32_t* ipiv2, double* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_ssytrf_aa_2stage_base = 0 };
void ssytrf_aa_2stage_ ( char const* uplo, int32_t const* n, float* A, int32_t const* lda, float* TB, int32_t const* ltb, int32_t* ipiv, int32_t* ipiv2, float* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zsytrf_aa_2stage_base = 0 };
void zsytrf_aa_2stage_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* TB, int32_t const* ltb, int32_t* ipiv, int32_t* ipiv2, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_csytrf_rk_base = 0 };
void csytrf_rk_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* E, int32_t* ipiv, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_dsytrf_rk_base = 0 };
void dsytrf_rk_ ( char const* uplo, int32_t const* n, double* A, int32_t const* lda, double* E, int32_t* ipiv, double* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_ssytrf_rk_base = 0 };
void ssytrf_rk_ ( char const* uplo, int32_t const* n, float* A, int32_t const* lda, float* E, int32_t* ipiv, float* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zsytrf_rk_base = 0 };
void zsytrf_rk_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* E, int32_t* ipiv, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_csytrf_rook_base = 0 };
void csytrf_rook_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* ipiv, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_dsytrf_rook_base = 0 };
void dsytrf_rook_ ( char const* uplo, int32_t const* n, double* A, int32_t const* lda, int32_t* ipiv, double* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_ssytrf_rook_base = 0 };
void ssytrf_rook_ ( char const* uplo, int32_t const* n, float* A, int32_t const* lda, int32_t* ipiv, float* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zsytrf_rook_base = 0 };
void zsytrf_rook_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* ipiv, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_csytri_base = 0 };
void csytri_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t const* ipiv, float _Complex* work, int32_t* info , size_t );
enum { LAPACK_dsytri_base = 0 };
void dsytri_ ( char const* uplo, int32_t const* n, double* A, int32_t const* lda, int32_t const* ipiv, double* work, int32_t* info , size_t );
enum { LAPACK_ssytri_base = 0 };
void ssytri_ ( char const* uplo, int32_t const* n, float* A, int32_t const* lda, int32_t const* ipiv, float* work, int32_t* info , size_t );
enum { LAPACK_zsytri_base = 0 };
void zsytri_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t const* ipiv, double _Complex* work, int32_t* info , size_t );
enum { LAPACK_csytri2_base = 0 };
void csytri2_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t const* ipiv, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_dsytri2_base = 0 };
void dsytri2_ ( char const* uplo, int32_t const* n, double* A, int32_t const* lda, int32_t const* ipiv, double* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_ssytri2_base = 0 };
void ssytri2_ ( char const* uplo, int32_t const* n, float* A, int32_t const* lda, int32_t const* ipiv, float* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zsytri2_base = 0 };
void zsytri2_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t const* ipiv, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_csytri2x_base = 0 };
void csytri2x_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t const* ipiv, float _Complex* work, int32_t const* nb, int32_t* info , size_t );
enum { LAPACK_dsytri2x_base = 0 };
void dsytri2x_ ( char const* uplo, int32_t const* n, double* A, int32_t const* lda, int32_t const* ipiv, double* work, int32_t const* nb, int32_t* info , size_t );
enum { LAPACK_ssytri2x_base = 0 };
void ssytri2x_ ( char const* uplo, int32_t const* n, float* A, int32_t const* lda, int32_t const* ipiv, float* work, int32_t const* nb, int32_t* info , size_t );
enum { LAPACK_zsytri2x_base = 0 };
void zsytri2x_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t const* ipiv, double _Complex* work, int32_t const* nb, int32_t* info , size_t );
enum { LAPACK_csytri_3_base = 0 };
void csytri_3_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex const* E, int32_t const* ipiv, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_dsytri_3_base = 0 };
void dsytri_3_ ( char const* uplo, int32_t const* n, double* A, int32_t const* lda, double const* E, int32_t const* ipiv, double* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_ssytri_3_base = 0 };
void ssytri_3_ ( char const* uplo, int32_t const* n, float* A, int32_t const* lda, float const* E, int32_t const* ipiv, float* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zsytri_3_base = 0 };
void zsytri_3_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex const* E, int32_t const* ipiv, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_csytrs_base = 0 };
void csytrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, int32_t const* ipiv, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dsytrs_base = 0 };
void dsytrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double const* A, int32_t const* lda, int32_t const* ipiv, double* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_ssytrs_base = 0 };
void ssytrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float const* A, int32_t const* lda, int32_t const* ipiv, float* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zsytrs_base = 0 };
void zsytrs_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, int32_t const* ipiv, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_csytrs2_base = 0 };
void csytrs2_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, const float _Complex* A, int32_t const* lda, int32_t const* ipiv, float _Complex* B, int32_t const* ldb, float _Complex* work, int32_t* info , size_t );
enum { LAPACK_dsytrs2_base = 0 };
void dsytrs2_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, const double* A, int32_t const* lda, int32_t const* ipiv, double* B, int32_t const* ldb, double* work, int32_t* info , size_t );
enum { LAPACK_ssytrs2_base = 0 };
void ssytrs2_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, const float* A, int32_t const* lda, int32_t const* ipiv, float* B, int32_t const* ldb, float* work, int32_t* info , size_t );
enum { LAPACK_zsytrs2_base = 0 };
void zsytrs2_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, const double _Complex* A, int32_t const* lda, int32_t const* ipiv, double _Complex* B, int32_t const* ldb, double _Complex* work, int32_t* info , size_t );
enum { LAPACK_csytrs_3_base = 0 };
void csytrs_3_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, float _Complex const* E, int32_t const* ipiv, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dsytrs_3_base = 0 };
void dsytrs_3_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double const* A, int32_t const* lda, double const* E, int32_t const* ipiv, double* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_ssytrs_3_base = 0 };
void ssytrs_3_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float const* A, int32_t const* lda, float const* E, int32_t const* ipiv, float* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zsytrs_3_base = 0 };
void zsytrs_3_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, double _Complex const* E, int32_t const* ipiv, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_csytrs_aa_base = 0 };
void csytrs_aa_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, int32_t const* ipiv, float _Complex* B, int32_t const* ldb, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_dsytrs_aa_base = 0 };
void dsytrs_aa_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double const* A, int32_t const* lda, int32_t const* ipiv, double* B, int32_t const* ldb, double* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_ssytrs_aa_base = 0 };
void ssytrs_aa_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float const* A, int32_t const* lda, int32_t const* ipiv, float* B, int32_t const* ldb, float* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zsytrs_aa_base = 0 };
void zsytrs_aa_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, int32_t const* ipiv, double _Complex* B, int32_t const* ldb, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_csytrs_aa_2stage_base = 0 };
void csytrs_aa_2stage_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, float _Complex* TB, int32_t const* ltb, int32_t const* ipiv, int32_t const* ipiv2, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dsytrs_aa_2stage_base = 0 };
void dsytrs_aa_2stage_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double const* A, int32_t const* lda, double* TB, int32_t const* ltb, int32_t const* ipiv, int32_t const* ipiv2, double* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_ssytrs_aa_2stage_base = 0 };
void ssytrs_aa_2stage_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float const* A, int32_t const* lda, float* TB, int32_t const* ltb, int32_t const* ipiv, int32_t const* ipiv2, float* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zsytrs_aa_2stage_base = 0 };
void zsytrs_aa_2stage_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, double _Complex* TB, int32_t const* ltb, int32_t const* ipiv, int32_t const* ipiv2, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_csytrs_rook_base = 0 };
void csytrs_rook_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, int32_t const* ipiv, float _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_dsytrs_rook_base = 0 };
void dsytrs_rook_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double const* A, int32_t const* lda, int32_t const* ipiv, double* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_ssytrs_rook_base = 0 };
void ssytrs_rook_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, float const* A, int32_t const* lda, int32_t const* ipiv, float* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_zsytrs_rook_base = 0 };
void zsytrs_rook_ ( char const* uplo, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, int32_t const* ipiv, double _Complex* B, int32_t const* ldb, int32_t* info , size_t );
enum { LAPACK_ctbcon_base = 0 };
void ctbcon_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, int32_t const* kd, float _Complex const* AB, int32_t const* ldab, float* rcond, float _Complex* work, float* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dtbcon_base = 0 };
void dtbcon_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, int32_t const* kd, double const* AB, int32_t const* ldab, double* rcond, double* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_stbcon_base = 0 };
void stbcon_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, int32_t const* kd, float const* AB, int32_t const* ldab, float* rcond, float* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ztbcon_base = 0 };
void ztbcon_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, int32_t const* kd, double _Complex const* AB, int32_t const* ldab, double* rcond, double _Complex* work, double* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ctbrfs_base = 0 };
void ctbrfs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* kd, int32_t const* nrhs, float _Complex const* AB, int32_t const* ldab, float _Complex const* B, int32_t const* ldb, float _Complex const* X, int32_t const* ldx, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dtbrfs_base = 0 };
void dtbrfs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* kd, int32_t const* nrhs, double const* AB, int32_t const* ldab, double const* B, int32_t const* ldb, double const* X, int32_t const* ldx, double* ferr, double* berr, double* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_stbrfs_base = 0 };
void stbrfs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* kd, int32_t const* nrhs, float const* AB, int32_t const* ldab, float const* B, int32_t const* ldb, float const* X, int32_t const* ldx, float* ferr, float* berr, float* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ztbrfs_base = 0 };
void ztbrfs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* kd, int32_t const* nrhs, double _Complex const* AB, int32_t const* ldab, double _Complex const* B, int32_t const* ldb, double _Complex const* X, int32_t const* ldx, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ctbtrs_base = 0 };
void ctbtrs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* kd, int32_t const* nrhs, float _Complex const* AB, int32_t const* ldab, float _Complex* B, int32_t const* ldb, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dtbtrs_base = 0 };
void dtbtrs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* kd, int32_t const* nrhs, double const* AB, int32_t const* ldab, double* B, int32_t const* ldb, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_stbtrs_base = 0 };
void stbtrs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* kd, int32_t const* nrhs, float const* AB, int32_t const* ldab, float* B, int32_t const* ldb, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ztbtrs_base = 0 };
void ztbtrs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* kd, int32_t const* nrhs, double _Complex const* AB, int32_t const* ldab, double _Complex* B, int32_t const* ldb, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ctfsm_base = 0 };
void ctfsm_ ( char const* transr, char const* side, char const* uplo, char const* trans, char const* diag, int32_t const* m, int32_t const* n, float _Complex const* alpha, float _Complex const* A, float _Complex* B, int32_t const* ldb , size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_dtfsm_base = 0 };
void dtfsm_ ( char const* transr, char const* side, char const* uplo, char const* trans, char const* diag, int32_t const* m, int32_t const* n, double const* alpha, double const* A, double* B, int32_t const* ldb , size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_stfsm_base = 0 };
void stfsm_ ( char const* transr, char const* side, char const* uplo, char const* trans, char const* diag, int32_t const* m, int32_t const* n, float const* alpha, float const* A, float* B, int32_t const* ldb , size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_ztfsm_base = 0 };
void ztfsm_ ( char const* transr, char const* side, char const* uplo, char const* trans, char const* diag, int32_t const* m, int32_t const* n, double _Complex const* alpha, double _Complex const* A, double _Complex* B, int32_t const* ldb , size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_ctftri_base = 0 };
void ctftri_ ( char const* transr, char const* uplo, char const* diag, int32_t const* n, float _Complex* A, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dtftri_base = 0 };
void dtftri_ ( char const* transr, char const* uplo, char const* diag, int32_t const* n, double* A, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_stftri_base = 0 };
void stftri_ ( char const* transr, char const* uplo, char const* diag, int32_t const* n, float* A, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ztftri_base = 0 };
void ztftri_ ( char const* transr, char const* uplo, char const* diag, int32_t const* n, double _Complex* A, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ctfttp_base = 0 };
void ctfttp_ ( char const* transr, char const* uplo, int32_t const* n, float _Complex const* ARF, float _Complex* AP, int32_t* info , size_t, size_t );
enum { LAPACK_dtfttp_base = 0 };
void dtfttp_ ( char const* transr, char const* uplo, int32_t const* n, double const* ARF, double* AP, int32_t* info , size_t, size_t );
enum { LAPACK_stfttp_base = 0 };
void stfttp_ ( char const* transr, char const* uplo, int32_t const* n, float const* ARF, float* AP, int32_t* info , size_t, size_t );
enum { LAPACK_ztfttp_base = 0 };
void ztfttp_ ( char const* transr, char const* uplo, int32_t const* n, double _Complex const* ARF, double _Complex* AP, int32_t* info , size_t, size_t );
enum { LAPACK_ctfttr_base = 0 };
void ctfttr_ ( char const* transr, char const* uplo, int32_t const* n, float _Complex const* ARF, float _Complex* A, int32_t const* lda, int32_t* info , size_t, size_t );
enum { LAPACK_dtfttr_base = 0 };
void dtfttr_ ( char const* transr, char const* uplo, int32_t const* n, double const* ARF, double* A, int32_t const* lda, int32_t* info , size_t, size_t );
enum { LAPACK_stfttr_base = 0 };
void stfttr_ ( char const* transr, char const* uplo, int32_t const* n, float const* ARF, float* A, int32_t const* lda, int32_t* info , size_t, size_t );
enum { LAPACK_ztfttr_base = 0 };
void ztfttr_ ( char const* transr, char const* uplo, int32_t const* n, double _Complex const* ARF, double _Complex* A, int32_t const* lda, int32_t* info , size_t, size_t );
enum { LAPACK_ctgevc_base = 0 };
void ctgevc_ ( char const* side, char const* howmny, int32_t const* select, int32_t const* n, float _Complex const* S, int32_t const* lds, float _Complex const* P, int32_t const* ldp, float _Complex* VL, int32_t const* ldvl, float _Complex* VR, int32_t const* ldvr, int32_t const* mm, int32_t* m, float _Complex* work, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_dtgevc_base = 0 };
void dtgevc_ ( char const* side, char const* howmny, int32_t const* select, int32_t const* n, double const* S, int32_t const* lds, double const* P, int32_t const* ldp, double* VL, int32_t const* ldvl, double* VR, int32_t const* ldvr, int32_t const* mm, int32_t* m, double* work, int32_t* info , size_t, size_t );
enum { LAPACK_stgevc_base = 0 };
void stgevc_ ( char const* side, char const* howmny, int32_t const* select, int32_t const* n, float const* S, int32_t const* lds, float const* P, int32_t const* ldp, float* VL, int32_t const* ldvl, float* VR, int32_t const* ldvr, int32_t const* mm, int32_t* m, float* work, int32_t* info , size_t, size_t );
enum { LAPACK_ztgevc_base = 0 };
void ztgevc_ ( char const* side, char const* howmny, int32_t const* select, int32_t const* n, double _Complex const* S, int32_t const* lds, double _Complex const* P, int32_t const* ldp, double _Complex* VL, int32_t const* ldvl, double _Complex* VR, int32_t const* ldvr, int32_t const* mm, int32_t* m, double _Complex* work, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_ctgexc = 0 };
void ctgexc_ ( int32_t const* wantq, int32_t const* wantz, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float _Complex* Q, int32_t const* ldq, float _Complex* Z, int32_t const* ldz, int32_t const* ifst, int32_t* ilst, int32_t* info );
enum { LAPACK_dtgexc = 0 };
void dtgexc_ ( int32_t const* wantq, int32_t const* wantz, int32_t const* n, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* Q, int32_t const* ldq, double* Z, int32_t const* ldz, int32_t* ifst, int32_t* ilst, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_stgexc = 0 };
void stgexc_ ( int32_t const* wantq, int32_t const* wantz, int32_t const* n, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* Q, int32_t const* ldq, float* Z, int32_t const* ldz, int32_t* ifst, int32_t* ilst, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_ztgexc = 0 };
void ztgexc_ ( int32_t const* wantq, int32_t const* wantz, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double _Complex* Q, int32_t const* ldq, double _Complex* Z, int32_t const* ldz, int32_t const* ifst, int32_t* ilst, int32_t* info );
enum { LAPACK_ctgsen = 0 };
void ctgsen_ ( int32_t const* ijob, int32_t const* wantq, int32_t const* wantz, int32_t const* select, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float _Complex* alpha, float _Complex* beta, float _Complex* Q, int32_t const* ldq, float _Complex* Z, int32_t const* ldz, int32_t* m, float* pl, float* pr, float* DIF, float _Complex* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info );
enum { LAPACK_dtgsen = 0 };
void dtgsen_ ( int32_t const* ijob, int32_t const* wantq, int32_t const* wantz, int32_t const* select, int32_t const* n, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* alphar, double* alphai, double* beta, double* Q, int32_t const* ldq, double* Z, int32_t const* ldz, int32_t* m, double* pl, double* pr, double* DIF, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info );
enum { LAPACK_stgsen = 0 };
void stgsen_ ( int32_t const* ijob, int32_t const* wantq, int32_t const* wantz, int32_t const* select, int32_t const* n, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* alphar, float* alphai, float* beta, float* Q, int32_t const* ldq, float* Z, int32_t const* ldz, int32_t* m, float* pl, float* pr, float* DIF, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info );
enum { LAPACK_ztgsen = 0 };
void ztgsen_ ( int32_t const* ijob, int32_t const* wantq, int32_t const* wantz, int32_t const* select, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double _Complex* alpha, double _Complex* beta, double _Complex* Q, int32_t const* ldq, double _Complex* Z, int32_t const* ldz, int32_t* m, double* pl, double* pr, double* DIF, double _Complex* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info );
enum { LAPACK_ctgsja_base = 0 };
void ctgsja_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* p, int32_t const* n, int32_t const* k, int32_t const* l, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float const* tola, float const* tolb, float* alpha, float* beta, float _Complex* U, int32_t const* ldu, float _Complex* V, int32_t const* ldv, float _Complex* Q, int32_t const* ldq, float _Complex* work, int32_t* ncycle, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dtgsja_base = 0 };
void dtgsja_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* p, int32_t const* n, int32_t const* k, int32_t const* l, double* A, int32_t const* lda, double* B, int32_t const* ldb, double const* tola, double const* tolb, double* alpha, double* beta, double* U, int32_t const* ldu, double* V, int32_t const* ldv, double* Q, int32_t const* ldq, double* work, int32_t* ncycle, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_stgsja_base = 0 };
void stgsja_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* p, int32_t const* n, int32_t const* k, int32_t const* l, float* A, int32_t const* lda, float* B, int32_t const* ldb, float const* tola, float const* tolb, float* alpha, float* beta, float* U, int32_t const* ldu, float* V, int32_t const* ldv, float* Q, int32_t const* ldq, float* work, int32_t* ncycle, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ztgsja_base = 0 };
void ztgsja_ ( char const* jobu, char const* jobv, char const* jobq, int32_t const* m, int32_t const* p, int32_t const* n, int32_t const* k, int32_t const* l, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double const* tola, double const* tolb, double* alpha, double* beta, double _Complex* U, int32_t const* ldu, double _Complex* V, int32_t const* ldv, double _Complex* Q, int32_t const* ldq, double _Complex* work, int32_t* ncycle, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ctgsna_base = 0 };
void ctgsna_ ( char const* job, char const* howmny, int32_t const* select, int32_t const* n, float _Complex const* A, int32_t const* lda, float _Complex const* B, int32_t const* ldb, float _Complex const* VL, int32_t const* ldvl, float _Complex const* VR, int32_t const* ldvr, float* S, float* DIF, int32_t const* mm, int32_t* m, float _Complex* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_dtgsna_base = 0 };
void dtgsna_ ( char const* job, char const* howmny, int32_t const* select, int32_t const* n, double const* A, int32_t const* lda, double const* B, int32_t const* ldb, double const* VL, int32_t const* ldvl, double const* VR, int32_t const* ldvr, double* S, double* DIF, int32_t const* mm, int32_t* m, double* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_stgsna_base = 0 };
void stgsna_ ( char const* job, char const* howmny, int32_t const* select, int32_t const* n, float const* A, int32_t const* lda, float const* B, int32_t const* ldb, float const* VL, int32_t const* ldvl, float const* VR, int32_t const* ldvr, float* S, float* DIF, int32_t const* mm, int32_t* m, float* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_ztgsna_base = 0 };
void ztgsna_ ( char const* job, char const* howmny, int32_t const* select, int32_t const* n, double _Complex const* A, int32_t const* lda, double _Complex const* B, int32_t const* ldb, double _Complex const* VL, int32_t const* ldvl, double _Complex const* VR, int32_t const* ldvr, double* S, double* DIF, int32_t const* mm, int32_t* m, double _Complex* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_ctgsyl_base = 0 };
void ctgsyl_ ( char const* trans, int32_t const* ijob, int32_t const* m, int32_t const* n, float _Complex const* A, int32_t const* lda, float _Complex const* B, int32_t const* ldb, float _Complex* C, int32_t const* ldc, float _Complex const* D, int32_t const* ldd, float _Complex const* E, int32_t const* lde, float _Complex* F, int32_t const* ldf, float* dif, float* scale, float _Complex* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_dtgsyl_base = 0 };
void dtgsyl_ ( char const* trans, int32_t const* ijob, int32_t const* m, int32_t const* n, double const* A, int32_t const* lda, double const* B, int32_t const* ldb, double* C, int32_t const* ldc, double const* D, int32_t const* ldd, double const* E, int32_t const* lde, double* F, int32_t const* ldf, double* dif, double* scale, double* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_stgsyl_base = 0 };
void stgsyl_ ( char const* trans, int32_t const* ijob, int32_t const* m, int32_t const* n, float const* A, int32_t const* lda, float const* B, int32_t const* ldb, float* C, int32_t const* ldc, float const* D, int32_t const* ldd, float const* E, int32_t const* lde, float* F, int32_t const* ldf, float* dif, float* scale, float* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_ztgsyl_base = 0 };
void ztgsyl_ ( char const* trans, int32_t const* ijob, int32_t const* m, int32_t const* n, double _Complex const* A, int32_t const* lda, double _Complex const* B, int32_t const* ldb, double _Complex* C, int32_t const* ldc, double _Complex const* D, int32_t const* ldd, double _Complex const* E, int32_t const* lde, double _Complex* F, int32_t const* ldf, double* dif, double* scale, double _Complex* work, int32_t const* lwork, int32_t* iwork, int32_t* info , size_t );
enum { LAPACK_ctpcon_base = 0 };
void ctpcon_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, float _Complex const* AP, float* rcond, float _Complex* work, float* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dtpcon_base = 0 };
void dtpcon_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, double const* AP, double* rcond, double* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_stpcon_base = 0 };
void stpcon_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, float const* AP, float* rcond, float* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ztpcon_base = 0 };
void ztpcon_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, double _Complex const* AP, double* rcond, double _Complex* work, double* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ctplqt = 0 };
void ctplqt_ ( int32_t const* m, int32_t const* n, int32_t const* l, int32_t const* mb, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float _Complex* T, int32_t const* ldt, float _Complex* work, int32_t* info );
enum { LAPACK_dtplqt = 0 };
void dtplqt_ ( int32_t const* m, int32_t const* n, int32_t const* l, int32_t const* mb, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* T, int32_t const* ldt, double* work, int32_t* info );
enum { LAPACK_stplqt = 0 };
void stplqt_ ( int32_t const* m, int32_t const* n, int32_t const* l, int32_t const* mb, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* T, int32_t const* ldt, float* work, int32_t* info );
enum { LAPACK_ztplqt = 0 };
void ztplqt_ ( int32_t const* m, int32_t const* n, int32_t const* l, int32_t const* mb, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double _Complex* T, int32_t const* ldt, double _Complex* work, int32_t* info );
enum { LAPACK_ctplqt2 = 0 };
void ctplqt2_ ( int32_t const* m, int32_t const* n, int32_t const* l, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float _Complex* T, int32_t const* ldt, int32_t* info );
enum { LAPACK_dtplqt2 = 0 };
void dtplqt2_ ( int32_t const* m, int32_t const* n, int32_t const* l, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* T, int32_t const* ldt, int32_t* info );
enum { LAPACK_stplqt2 = 0 };
void stplqt2_ ( int32_t const* m, int32_t const* n, int32_t const* l, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* T, int32_t const* ldt, int32_t* info );
enum { LAPACK_ztplqt2 = 0 };
void ztplqt2_ ( int32_t const* m, int32_t const* n, int32_t const* l, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double _Complex* T, int32_t const* ldt, int32_t* info );
enum { LAPACK_ctpmlqt_base = 0 };
void ctpmlqt_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* l, int32_t const* mb, float _Complex const* V, int32_t const* ldv, float _Complex const* T, int32_t const* ldt, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float _Complex* work, int32_t* info , size_t, size_t );
enum { LAPACK_dtpmlqt_base = 0 };
void dtpmlqt_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* l, int32_t const* mb, double const* V, int32_t const* ldv, double const* T, int32_t const* ldt, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* work, int32_t* info , size_t, size_t );
enum { LAPACK_stpmlqt_base = 0 };
void stpmlqt_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* l, int32_t const* mb, float const* V, int32_t const* ldv, float const* T, int32_t const* ldt, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* work, int32_t* info , size_t, size_t );
enum { LAPACK_ztpmlqt_base = 0 };
void ztpmlqt_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* l, int32_t const* mb, double _Complex const* V, int32_t const* ldv, double _Complex const* T, int32_t const* ldt, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double _Complex* work, int32_t* info , size_t, size_t );
enum { LAPACK_ctpmqrt_base = 0 };
void ctpmqrt_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* l, int32_t const* nb, float _Complex const* V, int32_t const* ldv, float _Complex const* T, int32_t const* ldt, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float _Complex* work, int32_t* info , size_t, size_t );
enum { LAPACK_dtpmqrt_base = 0 };
void dtpmqrt_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* l, int32_t const* nb, double const* V, int32_t const* ldv, double const* T, int32_t const* ldt, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* work, int32_t* info , size_t, size_t );
enum { LAPACK_stpmqrt_base = 0 };
void stpmqrt_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* l, int32_t const* nb, float const* V, int32_t const* ldv, float const* T, int32_t const* ldt, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* work, int32_t* info , size_t, size_t );
enum { LAPACK_ztpmqrt_base = 0 };
void ztpmqrt_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* l, int32_t const* nb, double _Complex const* V, int32_t const* ldv, double _Complex const* T, int32_t const* ldt, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double _Complex* work, int32_t* info , size_t, size_t );
enum { LAPACK_ctpqrt = 0 };
void ctpqrt_ ( int32_t const* m, int32_t const* n, int32_t const* l, int32_t const* nb, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float _Complex* T, int32_t const* ldt, float _Complex* work, int32_t* info );
enum { LAPACK_dtpqrt = 0 };
void dtpqrt_ ( int32_t const* m, int32_t const* n, int32_t const* l, int32_t const* nb, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* T, int32_t const* ldt, double* work, int32_t* info );
enum { LAPACK_stpqrt = 0 };
void stpqrt_ ( int32_t const* m, int32_t const* n, int32_t const* l, int32_t const* nb, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* T, int32_t const* ldt, float* work, int32_t* info );
enum { LAPACK_ztpqrt = 0 };
void ztpqrt_ ( int32_t const* m, int32_t const* n, int32_t const* l, int32_t const* nb, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double _Complex* T, int32_t const* ldt, double _Complex* work, int32_t* info );
enum { LAPACK_ctpqrt2 = 0 };
void ctpqrt2_ ( int32_t const* m, int32_t const* n, int32_t const* l, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float _Complex* T, int32_t const* ldt, int32_t* info );
enum { LAPACK_dtpqrt2 = 0 };
void dtpqrt2_ ( int32_t const* m, int32_t const* n, int32_t const* l, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* T, int32_t const* ldt, int32_t* info );
enum { LAPACK_stpqrt2 = 0 };
void stpqrt2_ ( int32_t const* m, int32_t const* n, int32_t const* l, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* T, int32_t const* ldt, int32_t* info );
enum { LAPACK_ztpqrt2 = 0 };
void ztpqrt2_ ( int32_t const* m, int32_t const* n, int32_t const* l, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double _Complex* T, int32_t const* ldt, int32_t* info );
enum { LAPACK_ctprfb_base = 0 };
void ctprfb_ ( char const* side, char const* trans, char const* direct, char const* storev, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* l, float _Complex const* V, int32_t const* ldv, float _Complex const* T, int32_t const* ldt, float _Complex* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, float _Complex* work, int32_t const* ldwork , size_t, size_t, size_t, size_t );
enum { LAPACK_dtprfb_base = 0 };
void dtprfb_ ( char const* side, char const* trans, char const* direct, char const* storev, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* l, double const* V, int32_t const* ldv, double const* T, int32_t const* ldt, double* A, int32_t const* lda, double* B, int32_t const* ldb, double* work, int32_t const* ldwork , size_t, size_t, size_t, size_t );
enum { LAPACK_stprfb_base = 0 };
void stprfb_ ( char const* side, char const* trans, char const* direct, char const* storev, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* l, float const* V, int32_t const* ldv, float const* T, int32_t const* ldt, float* A, int32_t const* lda, float* B, int32_t const* ldb, float* work, int32_t const* ldwork , size_t, size_t, size_t, size_t );
enum { LAPACK_ztprfb_base = 0 };
void ztprfb_ ( char const* side, char const* trans, char const* direct, char const* storev, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* l, double _Complex const* V, int32_t const* ldv, double _Complex const* T, int32_t const* ldt, double _Complex* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, double _Complex* work, int32_t const* ldwork , size_t, size_t, size_t, size_t );
enum { LAPACK_ctprfs_base = 0 };
void ctprfs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* nrhs, float _Complex const* AP, float _Complex const* B, int32_t const* ldb, float _Complex const* X, int32_t const* ldx, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dtprfs_base = 0 };
void dtprfs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* nrhs, double const* AP, double const* B, int32_t const* ldb, double const* X, int32_t const* ldx, double* ferr, double* berr, double* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_stprfs_base = 0 };
void stprfs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* nrhs, float const* AP, float const* B, int32_t const* ldb, float const* X, int32_t const* ldx, float* ferr, float* berr, float* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ztprfs_base = 0 };
void ztprfs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* nrhs, double _Complex const* AP, double _Complex const* B, int32_t const* ldb, double _Complex const* X, int32_t const* ldx, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ctptri_base = 0 };
void ctptri_ ( char const* uplo, char const* diag, int32_t const* n, float _Complex* AP, int32_t* info , size_t, size_t );
enum { LAPACK_dtptri_base = 0 };
void dtptri_ ( char const* uplo, char const* diag, int32_t const* n, double* AP, int32_t* info , size_t, size_t );
enum { LAPACK_stptri_base = 0 };
void stptri_ ( char const* uplo, char const* diag, int32_t const* n, float* AP, int32_t* info , size_t, size_t );
enum { LAPACK_ztptri_base = 0 };
void ztptri_ ( char const* uplo, char const* diag, int32_t const* n, double _Complex* AP, int32_t* info , size_t, size_t );
enum { LAPACK_ctptrs_base = 0 };
void ctptrs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* nrhs, float _Complex const* AP, float _Complex* B, int32_t const* ldb, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dtptrs_base = 0 };
void dtptrs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* nrhs, double const* AP, double* B, int32_t const* ldb, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_stptrs_base = 0 };
void stptrs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* nrhs, float const* AP, float* B, int32_t const* ldb, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ztptrs_base = 0 };
void ztptrs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* nrhs, double _Complex const* AP, double _Complex* B, int32_t const* ldb, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ctpttf_base = 0 };
void ctpttf_ ( char const* transr, char const* uplo, int32_t const* n, float _Complex const* AP, float _Complex* ARF, int32_t* info , size_t, size_t );
enum { LAPACK_dtpttf_base = 0 };
void dtpttf_ ( char const* transr, char const* uplo, int32_t const* n, double const* AP, double* ARF, int32_t* info , size_t, size_t );
enum { LAPACK_stpttf_base = 0 };
void stpttf_ ( char const* transr, char const* uplo, int32_t const* n, float const* AP, float* ARF, int32_t* info , size_t, size_t );
enum { LAPACK_ztpttf_base = 0 };
void ztpttf_ ( char const* transr, char const* uplo, int32_t const* n, double _Complex const* AP, double _Complex* ARF, int32_t* info , size_t, size_t );
enum { LAPACK_ctpttr_base = 0 };
void ctpttr_ ( char const* uplo, int32_t const* n, float _Complex const* AP, float _Complex* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_dtpttr_base = 0 };
void dtpttr_ ( char const* uplo, int32_t const* n, double const* AP, double* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_stpttr_base = 0 };
void stpttr_ ( char const* uplo, int32_t const* n, float const* AP, float* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_ztpttr_base = 0 };
void ztpttr_ ( char const* uplo, int32_t const* n, double _Complex const* AP, double _Complex* A, int32_t const* lda, int32_t* info , size_t );
enum { LAPACK_ctrcon_base = 0 };
void ctrcon_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, float _Complex const* A, int32_t const* lda, float* rcond, float _Complex* work, float* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dtrcon_base = 0 };
void dtrcon_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, double const* A, int32_t const* lda, double* rcond, double* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_strcon_base = 0 };
void strcon_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, float const* A, int32_t const* lda, float* rcond, float* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ztrcon_base = 0 };
void ztrcon_ ( char const* norm, char const* uplo, char const* diag, int32_t const* n, double _Complex const* A, int32_t const* lda, double* rcond, double _Complex* work, double* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ctrevc_base = 0 };
void ctrevc_ ( char const* side, char const* howmny, int32_t const* select, int32_t const* n, float _Complex* T, int32_t const* ldt, float _Complex* VL, int32_t const* ldvl, float _Complex* VR, int32_t const* ldvr, int32_t const* mm, int32_t* m, float _Complex* work, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_dtrevc_base = 0 };
void dtrevc_ ( char const* side, char const* howmny, int32_t* select, int32_t const* n, double const* T, int32_t const* ldt, double* VL, int32_t const* ldvl, double* VR, int32_t const* ldvr, int32_t const* mm, int32_t* m, double* work, int32_t* info , size_t, size_t );
enum { LAPACK_strevc_base = 0 };
void strevc_ ( char const* side, char const* howmny, int32_t* select, int32_t const* n, float const* T, int32_t const* ldt, float* VL, int32_t const* ldvl, float* VR, int32_t const* ldvr, int32_t const* mm, int32_t* m, float* work, int32_t* info , size_t, size_t );
enum { LAPACK_ztrevc_base = 0 };
void ztrevc_ ( char const* side, char const* howmny, int32_t const* select, int32_t const* n, double _Complex* T, int32_t const* ldt, double _Complex* VL, int32_t const* ldvl, double _Complex* VR, int32_t const* ldvr, int32_t const* mm, int32_t* m, double _Complex* work, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_ctrevc3_base = 0 };
void ctrevc3_ ( char const* side, char const* howmny, int32_t const* select, int32_t const* n, float _Complex* T, int32_t const* ldt, float _Complex* VL, int32_t const* ldvl, float _Complex* VR, int32_t const* ldvr, int32_t const* mm, int32_t* m, float _Complex* work, int32_t const* lwork, float* rwork, int32_t const* lrwork, int32_t* info , size_t, size_t );
enum { LAPACK_dtrevc3_base = 0 };
void dtrevc3_ ( char const* side, char const* howmny, int32_t* select, int32_t const* n, double const* T, int32_t const* ldt, double* VL, int32_t const* ldvl, double* VR, int32_t const* ldvr, int32_t const* mm, int32_t* m, double* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_strevc3_base = 0 };
void strevc3_ ( char const* side, char const* howmny, int32_t* select, int32_t const* n, float const* T, int32_t const* ldt, float* VL, int32_t const* ldvl, float* VR, int32_t const* ldvr, int32_t const* mm, int32_t* m, float* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_ztrevc3_base = 0 };
void ztrevc3_ ( char const* side, char const* howmny, int32_t const* select, int32_t const* n, double _Complex* T, int32_t const* ldt, double _Complex* VL, int32_t const* ldvl, double _Complex* VR, int32_t const* ldvr, int32_t const* mm, int32_t* m, double _Complex* work, int32_t const* lwork, double* rwork, int32_t const* lrwork, int32_t* info , size_t, size_t );
enum { LAPACK_ctrexc_base = 0 };
void ctrexc_ ( char const* compq, int32_t const* n, float _Complex* T, int32_t const* ldt, float _Complex* Q, int32_t const* ldq, int32_t const* ifst, int32_t const* ilst, int32_t* info , size_t );
enum { LAPACK_dtrexc_base = 0 };
void dtrexc_ ( char const* compq, int32_t const* n, double* T, int32_t const* ldt, double* Q, int32_t const* ldq, int32_t* ifst, int32_t* ilst, double* work, int32_t* info , size_t );
enum { LAPACK_strexc_base = 0 };
void strexc_ ( char const* compq, int32_t const* n, float* T, int32_t const* ldt, float* Q, int32_t const* ldq, int32_t* ifst, int32_t* ilst, float* work, int32_t* info , size_t );
enum { LAPACK_ztrexc_base = 0 };
void ztrexc_ ( char const* compq, int32_t const* n, double _Complex* T, int32_t const* ldt, double _Complex* Q, int32_t const* ldq, int32_t const* ifst, int32_t const* ilst, int32_t* info , size_t );
enum { LAPACK_ctrrfs_base = 0 };
void ctrrfs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, float _Complex const* B, int32_t const* ldb, float _Complex const* X, int32_t const* ldx, float* ferr, float* berr, float _Complex* work, float* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dtrrfs_base = 0 };
void dtrrfs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* nrhs, double const* A, int32_t const* lda, double const* B, int32_t const* ldb, double const* X, int32_t const* ldx, double* ferr, double* berr, double* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_strrfs_base = 0 };
void strrfs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* nrhs, float const* A, int32_t const* lda, float const* B, int32_t const* ldb, float const* X, int32_t const* ldx, float* ferr, float* berr, float* work, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ztrrfs_base = 0 };
void ztrrfs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, double _Complex const* B, int32_t const* ldb, double _Complex const* X, int32_t const* ldx, double* ferr, double* berr, double _Complex* work, double* rwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ctrsen_base = 0 };
void ctrsen_ ( char const* job, char const* compq, int32_t const* select, int32_t const* n, float _Complex* T, int32_t const* ldt, float _Complex* Q, int32_t const* ldq, float _Complex* W, int32_t* m, float* s, float* sep, float _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_dtrsen_base = 0 };
void dtrsen_ ( char const* job, char const* compq, int32_t const* select, int32_t const* n, double* T, int32_t const* ldt, double* Q, int32_t const* ldq, double* WR, double* WI, int32_t* m, double* s, double* sep, double* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_strsen_base = 0 };
void strsen_ ( char const* job, char const* compq, int32_t const* select, int32_t const* n, float* T, int32_t const* ldt, float* Q, int32_t const* ldq, float* WR, float* WI, int32_t* m, float* s, float* sep, float* work, int32_t const* lwork, int32_t* iwork, int32_t const* liwork, int32_t* info , size_t, size_t );
enum { LAPACK_ztrsen_base = 0 };
void ztrsen_ ( char const* job, char const* compq, int32_t const* select, int32_t const* n, double _Complex* T, int32_t const* ldt, double _Complex* Q, int32_t const* ldq, double _Complex* W, int32_t* m, double* s, double* sep, double _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_ctrsna_base = 0 };
void ctrsna_ ( char const* job, char const* howmny, int32_t const* select, int32_t const* n, float _Complex const* T, int32_t const* ldt, float _Complex const* VL, int32_t const* ldvl, float _Complex const* VR, int32_t const* ldvr, float* S, float* SEP, int32_t const* mm, int32_t* m, float _Complex* work, int32_t const* ldwork, float* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_dtrsna_base = 0 };
void dtrsna_ ( char const* job, char const* howmny, int32_t const* select, int32_t const* n, double const* T, int32_t const* ldt, double const* VL, int32_t const* ldvl, double const* VR, int32_t const* ldvr, double* S, double* SEP, int32_t const* mm, int32_t* m, double* work, int32_t const* ldwork, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_strsna_base = 0 };
void strsna_ ( char const* job, char const* howmny, int32_t const* select, int32_t const* n, float const* T, int32_t const* ldt, float const* VL, int32_t const* ldvl, float const* VR, int32_t const* ldvr, float* S, float* SEP, int32_t const* mm, int32_t* m, float* work, int32_t const* ldwork, int32_t* iwork, int32_t* info , size_t, size_t );
enum { LAPACK_ztrsna_base = 0 };
void ztrsna_ ( char const* job, char const* howmny, int32_t const* select, int32_t const* n, double _Complex const* T, int32_t const* ldt, double _Complex const* VL, int32_t const* ldvl, double _Complex const* VR, int32_t const* ldvr, double* S, double* SEP, int32_t const* mm, int32_t* m, double _Complex* work, int32_t const* ldwork, double* rwork, int32_t* info , size_t, size_t );
enum { LAPACK_ctrsyl_base = 0 };
void ctrsyl_ ( char const* trana, char const* tranb, int32_t const* isgn, int32_t const* m, int32_t const* n, float _Complex const* A, int32_t const* lda, float _Complex const* B, int32_t const* ldb, float _Complex* C, int32_t const* ldc, float* scale, int32_t* info , size_t, size_t );
enum { LAPACK_dtrsyl_base = 0 };
void dtrsyl_ ( char const* trana, char const* tranb, int32_t const* isgn, int32_t const* m, int32_t const* n, double const* A, int32_t const* lda, double const* B, int32_t const* ldb, double* C, int32_t const* ldc, double* scale, int32_t* info , size_t, size_t );
enum { LAPACK_strsyl_base = 0 };
void strsyl_ ( char const* trana, char const* tranb, int32_t const* isgn, int32_t const* m, int32_t const* n, float const* A, int32_t const* lda, float const* B, int32_t const* ldb, float* C, int32_t const* ldc, float* scale, int32_t* info , size_t, size_t );
enum { LAPACK_ztrsyl_base = 0 };
void ztrsyl_ ( char const* trana, char const* tranb, int32_t const* isgn, int32_t const* m, int32_t const* n, double _Complex const* A, int32_t const* lda, double _Complex const* B, int32_t const* ldb, double _Complex* C, int32_t const* ldc, double* scale, int32_t* info , size_t, size_t );
enum { LAPACK_ctrsyl3_base = 0 };
void ctrsyl3_ ( char const* trana, char const* tranb, int32_t const* isgn, int32_t const* m, int32_t const* n, float _Complex const* A, int32_t const* lda, float _Complex const* B, int32_t const* ldb, float _Complex* C, int32_t const* ldc, float* scale, float* swork, int32_t const *ldswork, int32_t* info , size_t, size_t );
enum { LAPACK_dtrsyl3_base = 0 };
void dtrsyl3_ ( char const* trana, char const* tranb, int32_t const* isgn, int32_t const* m, int32_t const* n, double const* A, int32_t const* lda, double const* B, int32_t const* ldb, double* C, int32_t const* ldc, double* scale, int32_t* iwork, int32_t const* liwork, double* swork, int32_t const *ldswork, int32_t* info , size_t, size_t );
enum { LAPACK_strsyl3_base = 0 };
void strsyl3_ ( char const* trana, char const* tranb, int32_t const* isgn, int32_t const* m, int32_t const* n, float const* A, int32_t const* lda, float const* B, int32_t const* ldb, float* C, int32_t const* ldc, float* scale, int32_t* iwork, int32_t const* liwork, float* swork, int32_t const *ldswork, int32_t* info , size_t, size_t );
enum { LAPACK_ztrsyl3_base = 0 };
void ztrsyl3_ ( char const* trana, char const* tranb, int32_t const* isgn, int32_t const* m, int32_t const* n, double _Complex const* A, int32_t const* lda, double _Complex const* B, int32_t const* ldb, double _Complex* C, int32_t const* ldc, double* scale, double* swork, int32_t const *ldswork, int32_t* info , size_t, size_t );
enum { LAPACK_ctrtri_base = 0 };
void ctrtri_ ( char const* uplo, char const* diag, int32_t const* n, float _Complex* A, int32_t const* lda, int32_t* info , size_t, size_t );
enum { LAPACK_dtrtri_base = 0 };
void dtrtri_ ( char const* uplo, char const* diag, int32_t const* n, double* A, int32_t const* lda, int32_t* info , size_t, size_t );
enum { LAPACK_strtri_base = 0 };
void strtri_ ( char const* uplo, char const* diag, int32_t const* n, float* A, int32_t const* lda, int32_t* info , size_t, size_t );
enum { LAPACK_ztrtri_base = 0 };
void ztrtri_ ( char const* uplo, char const* diag, int32_t const* n, double _Complex* A, int32_t const* lda, int32_t* info , size_t, size_t );
enum { LAPACK_ctrtrs_base = 0 };
void ctrtrs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* nrhs, float _Complex const* A, int32_t const* lda, float _Complex* B, int32_t const* ldb, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_dtrtrs_base = 0 };
void dtrtrs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* nrhs, double const* A, int32_t const* lda, double* B, int32_t const* ldb, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_strtrs_base = 0 };
void strtrs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* nrhs, float const* A, int32_t const* lda, float* B, int32_t const* ldb, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ztrtrs_base = 0 };
void ztrtrs_ ( char const* uplo, char const* trans, char const* diag, int32_t const* n, int32_t const* nrhs, double _Complex const* A, int32_t const* lda, double _Complex* B, int32_t const* ldb, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_ctrttf_base = 0 };
void ctrttf_ ( char const* transr, char const* uplo, int32_t const* n, float _Complex const* A, int32_t const* lda, float _Complex* ARF, int32_t* info , size_t, size_t );
enum { LAPACK_dtrttf_base = 0 };
void dtrttf_ ( char const* transr, char const* uplo, int32_t const* n, double const* A, int32_t const* lda, double* ARF, int32_t* info , size_t, size_t );
enum { LAPACK_strttf_base = 0 };
void strttf_ ( char const* transr, char const* uplo, int32_t const* n, float const* A, int32_t const* lda, float* ARF, int32_t* info , size_t, size_t );
enum { LAPACK_ztrttf_base = 0 };
void ztrttf_ ( char const* transr, char const* uplo, int32_t const* n, double _Complex const* A, int32_t const* lda, double _Complex* ARF, int32_t* info , size_t, size_t );
enum { LAPACK_ctrttp_base = 0 };
void ctrttp_ ( char const* uplo, int32_t const* n, float _Complex const* A, int32_t const* lda, float _Complex* AP, int32_t* info , size_t );
enum { LAPACK_dtrttp_base = 0 };
void dtrttp_ ( char const* uplo, int32_t const* n, double const* A, int32_t const* lda, double* AP, int32_t* info , size_t );
enum { LAPACK_strttp_base = 0 };
void strttp_ ( char const* uplo, int32_t const* n, float const* A, int32_t const* lda, float* AP, int32_t* info , size_t );
enum { LAPACK_ztrttp_base = 0 };
void ztrttp_ ( char const* uplo, int32_t const* n, double _Complex const* A, int32_t const* lda, double _Complex* AP, int32_t* info , size_t );
enum { LAPACK_ctzrzf = 0 };
void ctzrzf_ ( int32_t const* m, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex* tau, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_dtzrzf = 0 };
void dtzrzf_ ( int32_t const* m, int32_t const* n, double* A, int32_t const* lda, double* tau, double* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_stzrzf = 0 };
void stzrzf_ ( int32_t const* m, int32_t const* n, float* A, int32_t const* lda, float* tau, float* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_ztzrzf = 0 };
void ztzrzf_ ( int32_t const* m, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex* tau, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cunbdb_base = 0 };
void cunbdb_ ( char const* trans, char const* signs, int32_t const* m, int32_t const* p, int32_t const* q, float _Complex* X11, int32_t const* ldx11, float _Complex* X12, int32_t const* ldx12, float _Complex* X21, int32_t const* ldx21, float _Complex* X22, int32_t const* ldx22, float* theta, float* phi, float _Complex* TAUP1, float _Complex* TAUP2, float _Complex* TAUQ1, float _Complex* TAUQ2, float _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_zunbdb_base = 0 };
void zunbdb_ ( char const* trans, char const* signs, int32_t const* m, int32_t const* p, int32_t const* q, double _Complex* X11, int32_t const* ldx11, double _Complex* X12, int32_t const* ldx12, double _Complex* X21, int32_t const* ldx21, double _Complex* X22, int32_t const* ldx22, double* theta, double* phi, double _Complex* TAUP1, double _Complex* TAUP2, double _Complex* TAUQ1, double _Complex* TAUQ2, double _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_cuncsd_base = 0 };
void cuncsd_ ( char const* jobu1, char const* jobu2, char const* jobv1t, char const* jobv2t, char const* trans, char const* signs, int32_t const* m, int32_t const* p, int32_t const* q, float _Complex* X11, int32_t const* ldx11, float _Complex* X12, int32_t const* ldx12, float _Complex* X21, int32_t const* ldx21, float _Complex* X22, int32_t const* ldx22, float* theta, float _Complex* U1, int32_t const* ldu1, float _Complex* U2, int32_t const* ldu2, float _Complex* V1T, int32_t const* ldv1t, float _Complex* V2T, int32_t const* ldv2t, float _Complex* work, int32_t const* lwork, float* rwork, int32_t const* lrwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_zuncsd_base = 0 };
void zuncsd_ ( char const* jobu1, char const* jobu2, char const* jobv1t, char const* jobv2t, char const* trans, char const* signs, int32_t const* m, int32_t const* p, int32_t const* q, double _Complex* X11, int32_t const* ldx11, double _Complex* X12, int32_t const* ldx12, double _Complex* X21, int32_t const* ldx21, double _Complex* X22, int32_t const* ldx22, double* theta, double _Complex* U1, int32_t const* ldu1, double _Complex* U2, int32_t const* ldu2, double _Complex* V1T, int32_t const* ldv1t, double _Complex* V2T, int32_t const* ldv2t, double _Complex* work, int32_t const* lwork, double* rwork, int32_t const* lrwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t, size_t, size_t, size_t );
enum { LAPACK_cuncsd2by1_base = 0 };
void cuncsd2by1_ ( char const* jobu1, char const* jobu2, char const* jobv1t, int32_t const* m, int32_t const* p, int32_t const* q, float _Complex* X11, int32_t const* ldx11, float _Complex* X21, int32_t const* ldx21, float* theta, float _Complex* U1, int32_t const* ldu1, float _Complex* U2, int32_t const* ldu2, float _Complex* V1T, int32_t const* ldv1t, float _Complex* work, int32_t const* lwork, float* rwork, int32_t const* lrwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zuncsd2by1_base = 0 };
void zuncsd2by1_ ( char const* jobu1, char const* jobu2, char const* jobv1t, int32_t const* m, int32_t const* p, int32_t const* q, double _Complex* X11, int32_t const* ldx11, double _Complex* X21, int32_t const* ldx21, double* theta, double _Complex* U1, int32_t const* ldu1, double _Complex* U2, int32_t const* ldu2, double _Complex* V1T, int32_t const* ldv1t, double _Complex* work, int32_t const* lwork, double* rwork, int32_t const* lrwork, int32_t* iwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cungbr_base = 0 };
void cungbr_ ( char const* vect, int32_t const* m, int32_t const* n, int32_t const* k, float _Complex* A, int32_t const* lda, float _Complex const* tau, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zungbr_base = 0 };
void zungbr_ ( char const* vect, int32_t const* m, int32_t const* n, int32_t const* k, double _Complex* A, int32_t const* lda, double _Complex const* tau, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_cunghr = 0 };
void cunghr_ ( int32_t const* n, int32_t const* ilo, int32_t const* ihi, float _Complex* A, int32_t const* lda, float _Complex const* tau, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zunghr = 0 };
void zunghr_ ( int32_t const* n, int32_t const* ilo, int32_t const* ihi, double _Complex* A, int32_t const* lda, double _Complex const* tau, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cunglq = 0 };
void cunglq_ ( int32_t const* m, int32_t const* n, int32_t const* k, float _Complex* A, int32_t const* lda, float _Complex const* tau, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zunglq = 0 };
void zunglq_ ( int32_t const* m, int32_t const* n, int32_t const* k, double _Complex* A, int32_t const* lda, double _Complex const* tau, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cungql = 0 };
void cungql_ ( int32_t const* m, int32_t const* n, int32_t const* k, float _Complex* A, int32_t const* lda, float _Complex const* tau, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zungql = 0 };
void zungql_ ( int32_t const* m, int32_t const* n, int32_t const* k, double _Complex* A, int32_t const* lda, double _Complex const* tau, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cungqr = 0 };
void cungqr_ ( int32_t const* m, int32_t const* n, int32_t const* k, float _Complex* A, int32_t const* lda, float _Complex const* tau, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zungqr = 0 };
void zungqr_ ( int32_t const* m, int32_t const* n, int32_t const* k, double _Complex* A, int32_t const* lda, double _Complex const* tau, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cungrq = 0 };
void cungrq_ ( int32_t const* m, int32_t const* n, int32_t const* k, float _Complex* A, int32_t const* lda, float _Complex const* tau, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zungrq = 0 };
void zungrq_ ( int32_t const* m, int32_t const* n, int32_t const* k, double _Complex* A, int32_t const* lda, double _Complex const* tau, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cungtr_base = 0 };
void cungtr_ ( char const* uplo, int32_t const* n, float _Complex* A, int32_t const* lda, float _Complex const* tau, float _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_zungtr_base = 0 };
void zungtr_ ( char const* uplo, int32_t const* n, double _Complex* A, int32_t const* lda, double _Complex const* tau, double _Complex* work, int32_t const* lwork, int32_t* info , size_t );
enum { LAPACK_cungtsqr_row = 0 };
void cungtsqr_row_ ( int32_t const* m, int32_t const* n, int32_t const* mb, int32_t const* nb, float _Complex* A, int32_t const* lda, float _Complex const* T, int32_t const* ldt, float _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_zungtsqr_row = 0 };
void zungtsqr_row_ ( int32_t const* m, int32_t const* n, int32_t const* mb, int32_t const* nb, double _Complex* A, int32_t const* lda, double _Complex const* T, int32_t const* ldt, double _Complex* work, int32_t const* lwork, int32_t* info );
enum { LAPACK_cunmbr_base = 0 };
void cunmbr_ ( char const* vect, char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, float _Complex const* A, int32_t const* lda, float _Complex const* tau, float _Complex* C, int32_t const* ldc, float _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zunmbr_base = 0 };
void zunmbr_ ( char const* vect, char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, double _Complex const* A, int32_t const* lda, double _Complex const* tau, double _Complex* C, int32_t const* ldc, double _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cunmhr_base = 0 };
void cunmhr_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* ilo, int32_t const* ihi, float _Complex const* A, int32_t const* lda, float _Complex const* tau, float _Complex* C, int32_t const* ldc, float _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_zunmhr_base = 0 };
void zunmhr_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* ilo, int32_t const* ihi, double _Complex const* A, int32_t const* lda, double _Complex const* tau, double _Complex* C, int32_t const* ldc, double _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_cunmlq_base = 0 };
void cunmlq_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, float _Complex const* A, int32_t const* lda, float _Complex const* tau, float _Complex* C, int32_t const* ldc, float _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_zunmlq_base = 0 };
void zunmlq_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, double _Complex const* A, int32_t const* lda, double _Complex const* tau, double _Complex* C, int32_t const* ldc, double _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_cunmql_base = 0 };
void cunmql_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, float _Complex const* A, int32_t const* lda, float _Complex const* tau, float _Complex* C, int32_t const* ldc, float _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_zunmql_base = 0 };
void zunmql_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, double _Complex const* A, int32_t const* lda, double _Complex const* tau, double _Complex* C, int32_t const* ldc, double _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_cunmqr_base = 0 };
void cunmqr_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, float _Complex const* A, int32_t const* lda, float _Complex const* tau, float _Complex* C, int32_t const* ldc, float _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_zunmqr_base = 0 };
void zunmqr_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, double _Complex const* A, int32_t const* lda, double _Complex const* tau, double _Complex* C, int32_t const* ldc, double _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_cunmrq_base = 0 };
void cunmrq_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, float _Complex const* A, int32_t const* lda, float _Complex const* tau, float _Complex* C, int32_t const* ldc, float _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_zunmrq_base = 0 };
void zunmrq_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, double _Complex const* A, int32_t const* lda, double _Complex const* tau, double _Complex* C, int32_t const* ldc, double _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_cunmrz_base = 0 };
void cunmrz_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* l, float _Complex const* A, int32_t const* lda, float _Complex const* tau, float _Complex* C, int32_t const* ldc, float _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_zunmrz_base = 0 };
void zunmrz_ ( char const* side, char const* trans, int32_t const* m, int32_t const* n, int32_t const* k, int32_t const* l, double _Complex const* A, int32_t const* lda, double _Complex const* tau, double _Complex* C, int32_t const* ldc, double _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t );
enum { LAPACK_cunmtr_base = 0 };
void cunmtr_ ( char const* side, char const* uplo, char const* trans, int32_t const* m, int32_t const* n, float _Complex const* A, int32_t const* lda, float _Complex const* tau, float _Complex* C, int32_t const* ldc, float _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zunmtr_base = 0 };
void zunmtr_ ( char const* side, char const* uplo, char const* trans, int32_t const* m, int32_t const* n, double _Complex const* A, int32_t const* lda, double _Complex const* tau, double _Complex* C, int32_t const* ldc, double _Complex* work, int32_t const* lwork, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_cupgtr_base = 0 };
void cupgtr_ ( char const* uplo, int32_t const* n, float _Complex const* AP, float _Complex const* tau, float _Complex* Q, int32_t const* ldq, float _Complex* work, int32_t* info , size_t );
enum { LAPACK_zupgtr_base = 0 };
void zupgtr_ ( char const* uplo, int32_t const* n, double _Complex const* AP, double _Complex const* tau, double _Complex* Q, int32_t const* ldq, double _Complex* work, int32_t* info , size_t );
enum { LAPACK_cupmtr_base = 0 };
void cupmtr_ ( char const* side, char const* uplo, char const* trans, int32_t const* m, int32_t const* n, float _Complex const* AP, float _Complex const* tau, float _Complex* C, int32_t const* ldc, float _Complex* work, int32_t* info , size_t, size_t, size_t );
enum { LAPACK_zupmtr_base = 0 };
void zupmtr_ ( char const* side, char const* uplo, char const* trans, int32_t const* m, int32_t const* n, double _Complex const* AP, double _Complex const* tau, double _Complex* C, int32_t const* ldc, double _Complex* work, int32_t* info , size_t, size_t, size_t );
/* END   /usr/include/lapack.h */
]]
local lapack = ffi.load'lapack'
return lapack
